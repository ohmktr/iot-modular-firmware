/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   C:/deviot/dev_space/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE\dts\bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /connector
 *   4   /soc
 *   5   /soc/interrupt-controller@e000e100
 *   6   /clocks
 *   7   /clocks/clk-hse
 *   8   /clocks/pll
 *   9   /soc/rcc@44020c00
 *   10  /soc/pin-controller@42020000
 *   11  /soc/pin-controller@42020000/adc1_inp15_pa3
 *   12  /soc/pin-controller@42020000/adc1_inp3_pa6
 *   13  /soc/adc@42028000
 *   14  /dietemp
 *   15  /soc/pin-controller@42020000/i2c1_scl_pb8
 *   16  /soc/pin-controller@42020000/i2c1_sda_pb9
 *   17  /soc/i2c@40005400
 *   18  /smbus1
 *   19  /soc/i2c@40005800
 *   20  /smbus2
 *   21  /soc/i2c@44002800
 *   22  /smbus3
 *   23  /soc/i2c@44002c00
 *   24  /smbus4
 *   25  /st-morpho-header
 *   26  /vbat
 *   27  /vref
 *   28  /clocks/clk-csi
 *   29  /clocks/clk-hsi
 *   30  /clocks/clk-hsi48
 *   31  /clocks/clk-lse
 *   32  /clocks/clk-lsi
 *   33  /clocks/pll2
 *   34  /clocks/pll3
 *   35  /cpus
 *   36  /soc/power-states
 *   37  /soc/power-states/state0
 *   38  /cpus/cpu@0
 *   39  /cpus/cpu@0/mpu@e000ed90
 *   40  /soc/pin-controller@42020000/gpio@42020800
 *   41  /gpio_keys
 *   42  /gpio_keys/button
 *   43  /soc/pin-controller@42020000/gpio@42021400
 *   44  /soc/pin-controller@42020000/gpio@42021800
 *   45  /leds
 *   46  /leds/led_1
 *   47  /leds/led_2
 *   48  /leds/led_3
 *   49  /mcos
 *   50  /mcos/mco1
 *   51  /mcos/mco2
 *   52  /soc/rcc@44020c00/reset-controller
 *   53  /soc/timers@40000400
 *   54  /soc/pin-controller@42020000/tim3_ch3_pb0
 *   55  /soc/timers@40000400/pwm
 *   56  /pwmleds
 *   57  /pwmleds/green_led_1
 *   58  /soc/adc@42028100
 *   59  /soc/aes@420c0000
 *   60  /soc/pin-controller@42020000/fdcan1_rx_pd0
 *   61  /soc/pin-controller@42020000/fdcan1_tx_pd1
 *   62  /soc/can@4000a400
 *   63  /soc/can@4000a800
 *   64  /soc/pin-controller@42020000/dac1_out2_pa5
 *   65  /soc/dac@42028400
 *   66  /soc/digi_dietemp@40008c00
 *   67  /soc/dma@40021000
 *   68  /soc/dma@40020000
 *   69  /soc/i2s@40003800
 *   70  /soc/i2s@40003c00
 *   71  /soc/i2s@40013000
 *   72  /soc/interrupt-controller@44022000
 *   73  /soc/memory@20000000
 *   74  /soc/memory@20040000
 *   75  /soc/memory@20050000
 *   76  /soc/memory@40036400
 *   77  /soc/memory-controller@47000400
 *   78  /soc/rng@420c0800
 *   79  /soc/rtc@44007800
 *   80  /soc/sdmmc@46008000
 *   81  /soc/sdmmc@46008c00
 *   82  /soc/serial@40004400
 *   83  /soc/pin-controller@42020000/usart3_rx_pd9
 *   84  /soc/pin-controller@42020000/usart3_tx_pd8
 *   85  /soc/serial@40004800
 *   86  /soc/serial@40004c00
 *   87  /soc/serial@40005000
 *   88  /soc/serial@40006400
 *   89  /soc/serial@40006800
 *   90  /soc/serial@40006c00
 *   91  /soc/serial@40007800
 *   92  /soc/serial@40007c00
 *   93  /soc/serial@40008000
 *   94  /soc/serial@40008400
 *   95  /soc/serial@40013800
 *   96  /soc/pin-controller@42020000/lpuart1_rx_pb7
 *   97  /soc/pin-controller@42020000/lpuart1_tx_pb6
 *   98  /soc/serial@44002400
 *   99  /soc/spi@40003800
 *   100 /soc/spi@40003c00
 *   101 /soc/pin-controller@42020000/gpio@42020c00
 *   102 /soc/pin-controller@42020000/spi1_miso_pg9
 *   103 /soc/pin-controller@42020000/spi1_mosi_pb5
 *   104 /soc/pin-controller@42020000/spi1_sck_pa5
 *   105 /soc/spi@40013000
 *   106 /soc/spi@40014c00
 *   107 /soc/spi@40015000
 *   108 /soc/spi@44002000
 *   109 /soc/timer@e000e010
 *   110 /soc/timers@40009400
 *   111 /soc/timers@44004400
 *   112 /soc/timers@44004800
 *   113 /soc/timers@44004c00
 *   114 /soc/timers@44005000
 *   115 /soc/timers@44005400
 *   116 /usbphy
 *   117 /soc/pin-controller@42020000/usb_dm_pa11
 *   118 /soc/pin-controller@42020000/usb_dp_pa12
 *   119 /soc/usb@40016000
 *   120 /soc/watchdog@40002c00
 *   121 /soc/watchdog@40003000
 *   122 /soc/xspi@47001400
 *   123 /soc/pin-controller@42020000/eth_crs_dv_pa7
 *   124 /soc/pin-controller@42020000/eth_ref_clk_pa1
 *   125 /soc/pin-controller@42020000/eth_rxd0_pc4
 *   126 /soc/pin-controller@42020000/eth_rxd1_pc5
 *   127 /soc/pin-controller@42020000/eth_tx_en_pg11
 *   128 /soc/pin-controller@42020000/eth_txd0_pg13
 *   129 /soc/pin-controller@42020000/eth_txd1_pb15
 *   130 /soc/ethernet@40028000
 *   131 /soc/pin-controller@42020000/eth_mdc_pc1
 *   132 /soc/pin-controller@42020000/eth_mdio_pa2
 *   133 /soc/ethernet@40028000/mdio
 *   134 /soc/ethernet@40028000/mdio/ethernet-phy@0
 *   135 /soc/flash-controller@40022000
 *   136 /soc/flash-controller@40022000/flash@8000000
 *   137 /soc/flash-controller@40022000/flash@8000000/partitions
 *   138 /soc/flash-controller@40022000/flash@8000000/partitions/partition@0
 *   139 /soc/flash-controller@40022000/flash@8000000/partitions/partition@10000
 *   140 /soc/flash-controller@40022000/flash@8000000/partitions/partition@100000
 *   141 /soc/flash-controller@40022000/flash@8000000/partitions/partition@1f0000
 *   142 /soc/pin-controller@42020000/gpio@42020000
 *   143 /soc/pin-controller@42020000/gpio@42020400
 *   144 /soc/pin-controller@42020000/gpio@42021000
 *   145 /soc/pin-controller@42020000/gpio@42021c00
 *   146 /soc/pin-controller@42020000/gpio@42022000
 *   147 /soc/timers@40000000
 *   148 /soc/timers@40000000/counter
 *   149 /soc/timers@40000000/pwm
 *   150 /soc/timers@40000400/counter
 *   151 /soc/timers@40000800
 *   152 /soc/timers@40000800/counter
 *   153 /soc/timers@40000800/pwm
 *   154 /soc/timers@40000c00
 *   155 /soc/timers@40000c00/counter
 *   156 /soc/timers@40000c00/pwm
 *   157 /soc/timers@40001000
 *   158 /soc/timers@40001000/counter
 *   159 /soc/timers@40001000/pwm
 *   160 /soc/timers@40001400
 *   161 /soc/timers@40001400/counter
 *   162 /soc/timers@40001400/pwm
 *   163 /soc/timers@40001800
 *   164 /soc/timers@40001800/counter
 *   165 /soc/timers@40001800/pwm
 *   166 /soc/timers@40001c00
 *   167 /soc/timers@40001c00/counter
 *   168 /soc/timers@40001c00/pwm
 *   169 /soc/timers@40002000
 *   170 /soc/timers@40002000/counter
 *   171 /soc/timers@40002000/pwm
 *   172 /soc/timers@40012c00
 *   173 /soc/timers@40012c00/pwm
 *   174 /soc/timers@40014000
 *   175 /soc/timers@40014000/counter
 *   176 /soc/timers@40014000/pwm
 *   177 /soc/timers@40014400
 *   178 /soc/timers@40014400/counter
 *   179 /soc/timers@40014400/pwm
 *   180 /soc/timers@40014800
 *   181 /soc/timers@40014800/counter
 *   182 /soc/timers@40014800/pwm
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"
#define DT_N_FULL_NAME_UNQUOTED /
#define DT_N_FULL_NAME_TOKEN _
#define DT_N_FULL_NAME_UPPER_TOKEN _

/* Helpers for dealing with node labels: */
#define DT_N_NODELABEL_NUM 0
#define DT_N_FOREACH_NODELABEL(fn) 
#define DT_N_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_CHILD_NUM 19
#define DT_N_CHILD_NUM_STATUS_OKAY 13
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_clocks) fn(DT_N_S_mcos) fn(DT_N_S_dietemp) fn(DT_N_S_vref) fn(DT_N_S_vbat) fn(DT_N_S_usbphy) fn(DT_N_S_smbus1) fn(DT_N_S_smbus2) fn(DT_N_S_smbus3) fn(DT_N_S_smbus4) fn(DT_N_S_connector) fn(DT_N_S_st_morpho_header) fn(DT_N_S_leds) fn(DT_N_S_gpio_keys) fn(DT_N_S_pwmleds)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mcos) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dietemp) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vref) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbat) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_usbphy) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_smbus1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_smbus2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_smbus3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_smbus4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_st_morpho_header) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_mcos, __VA_ARGS__) fn(DT_N_S_dietemp, __VA_ARGS__) fn(DT_N_S_vref, __VA_ARGS__) fn(DT_N_S_vbat, __VA_ARGS__) fn(DT_N_S_usbphy, __VA_ARGS__) fn(DT_N_S_smbus1, __VA_ARGS__) fn(DT_N_S_smbus2, __VA_ARGS__) fn(DT_N_S_smbus3, __VA_ARGS__) fn(DT_N_S_smbus4, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_st_morpho_header, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_pwmleds, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mcos, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dietemp, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vref, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbat, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_usbphy, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_smbus1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_smbus2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_smbus3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_smbus4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_st_morpho_header, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_clocks) fn(DT_N_S_mcos) fn(DT_N_S_vref) fn(DT_N_S_vbat) fn(DT_N_S_usbphy) fn(DT_N_S_connector) fn(DT_N_S_st_morpho_header) fn(DT_N_S_leds) fn(DT_N_S_gpio_keys)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mcos) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vref) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbat) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_usbphy) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_st_morpho_header) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_mcos, __VA_ARGS__) fn(DT_N_S_vref, __VA_ARGS__) fn(DT_N_S_vbat, __VA_ARGS__) fn(DT_N_S_usbphy, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_st_morpho_header, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mcos, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vref, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbat, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_usbphy, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_st_morpho_header, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /connector */ \
	4, /* /soc */ \
	6, /* /clocks */ \
	14, /* /dietemp */ \
	18, /* /smbus1 */ \
	20, /* /smbus2 */ \
	22, /* /smbus3 */ \
	24, /* /smbus4 */ \
	25, /* /st-morpho-header */ \
	26, /* /vbat */ \
	27, /* /vref */ \
	35, /* /cpus */ \
	41, /* /gpio_keys */ \
	45, /* /leds */ \
	49, /* /mcos */ \
	56, /* /pwmleds */ \
	116, /* /usbphy */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_st_stm32h563zi_nucleo DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_IRQ_LEVEL 0
#define DT_N_COMPAT_MATCHES_st_stm32h563zi_nucleo 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "stm32h563zi-nucleo"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"st,stm32h563zi-nucleo"}
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_IDX_0 "st,stm32h563zi-nucleo"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED st,stm32h563zi-nucleo
#define DT_N_P_compatible_IDX_0_STRING_TOKEN st_stm32h563zi_nucleo
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32H563ZI_NUCLEO
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"
#define DT_N_S_aliases_FULL_NAME_UNQUOTED aliases
#define DT_N_S_aliases_FULL_NAME_TOKEN aliases
#define DT_N_S_aliases_FULL_NAME_UPPER_TOKEN ALIASES

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_aliases_NODELABEL_NUM 0
#define DT_N_S_aliases_FOREACH_NODELABEL(fn) 
#define DT_N_S_aliases_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_CHILD_NUM 0
#define DT_N_S_aliases_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_IRQ_LEVEL 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"
#define DT_N_S_chosen_FULL_NAME_UNQUOTED chosen
#define DT_N_S_chosen_FULL_NAME_TOKEN chosen
#define DT_N_S_chosen_FULL_NAME_UPPER_TOKEN CHOSEN

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_chosen_NODELABEL_NUM 0
#define DT_N_S_chosen_FOREACH_NODELABEL(fn) 
#define DT_N_S_chosen_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_CHILD_NUM 0
#define DT_N_S_chosen_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2
#define DT_N_S_chosen_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_IRQ_LEVEL 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /connector
 *
 * Node identifier: DT_N_S_connector
 *
 * Binding (compatible = arduino-header-r3):
 *   $ZEPHYR_BASE\dts\bindings\gpio\arduino-header-r3.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_connector_PATH "/connector"

/* Node's name with unit-address: */
#define DT_N_S_connector_FULL_NAME "connector"
#define DT_N_S_connector_FULL_NAME_UNQUOTED connector
#define DT_N_S_connector_FULL_NAME_TOKEN connector
#define DT_N_S_connector_FULL_NAME_UPPER_TOKEN CONNECTOR

/* Node parent (/) identifier: */
#define DT_N_S_connector_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_connector_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_connector_NODELABEL_NUM 1
#define DT_N_S_connector_FOREACH_NODELABEL(fn) fn(arduino_header)
#define DT_N_S_connector_FOREACH_NODELABEL_VARGS(fn, ...) fn(arduino_header, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_connector_CHILD_NUM 0
#define DT_N_S_connector_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_connector_FOREACH_CHILD(fn) 
#define DT_N_S_connector_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_connector_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_connector_ORD 3
#define DT_N_S_connector_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_connector_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_connector_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_connector_EXISTS 1
#define DT_N_INST_0_arduino_header_r3 DT_N_S_connector
#define DT_N_NODELABEL_arduino_header DT_N_S_connector

/* Macros for properties that are special in the specification: */
#define DT_N_S_connector_REG_NUM 0
#define DT_N_S_connector_RANGES_NUM 0
#define DT_N_S_connector_FOREACH_RANGE(fn) 
#define DT_N_S_connector_IRQ_NUM 0
#define DT_N_S_connector_IRQ_LEVEL 0
#define DT_N_S_connector_COMPAT_MATCHES_arduino_header_r3 1
#define DT_N_S_connector_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_connector_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_connector_P_compatible {"arduino-header-r3"}
#define DT_N_S_connector_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_connector_P_compatible_IDX_0 "arduino-header-r3"
#define DT_N_S_connector_P_compatible_IDX_0_STRING_UNQUOTED arduino-header-r3
#define DT_N_S_connector_P_compatible_IDX_0_STRING_TOKEN arduino_header_r3
#define DT_N_S_connector_P_compatible_IDX_0_STRING_UPPER_TOKEN ARDUINO_HEADER_R3
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_LEN 1
#define DT_N_S_connector_P_compatible_EXISTS 1
#define DT_N_S_connector_P_zephyr_deferred_init 0
#define DT_N_S_connector_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_connector_P_wakeup_source 0
#define DT_N_S_connector_P_wakeup_source_EXISTS 1
#define DT_N_S_connector_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_connector_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"
#define DT_N_S_soc_FULL_NAME_UNQUOTED soc
#define DT_N_S_soc_FULL_NAME_TOKEN soc
#define DT_N_S_soc_FULL_NAME_UPPER_TOKEN SOC

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_NODELABEL_NUM 0
#define DT_N_S_soc_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_CHILD_NUM 75
#define DT_N_S_soc_CHILD_NUM_STATUS_OKAY 26
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40022000) fn(DT_N_S_soc_S_memory_40036400) fn(DT_N_S_soc_S_power_states) fn(DT_N_S_soc_S_rcc_44020c00) fn(DT_N_S_soc_S_interrupt_controller_44022000) fn(DT_N_S_soc_S_pin_controller_42020000) fn(DT_N_S_soc_S_timers_44004400) fn(DT_N_S_soc_S_timers_40009400) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_serial_40004400) fn(DT_N_S_soc_S_serial_40004800) fn(DT_N_S_soc_S_serial_44002400) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_watchdog_40002c00) fn(DT_N_S_soc_S_dac_42028400) fn(DT_N_S_soc_S_adc_42028000) fn(DT_N_S_soc_S_rtc_44007800) fn(DT_N_S_soc_S_timers_40012c00) fn(DT_N_S_soc_S_timers_40000000) fn(DT_N_S_soc_S_timers_40000400) fn(DT_N_S_soc_S_timers_40001000) fn(DT_N_S_soc_S_timers_40001400) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_spi_40003800) fn(DT_N_S_soc_S_spi_40003c00) fn(DT_N_S_soc_S_can_4000a400) fn(DT_N_S_soc_S_rng_420c0800) fn(DT_N_S_soc_S_ethernet_40028000) fn(DT_N_S_soc_S_dma_40020000) fn(DT_N_S_soc_S_dma_40021000) fn(DT_N_S_soc_S_i2s_40013000) fn(DT_N_S_soc_S_i2s_40003800) fn(DT_N_S_soc_S_i2s_40003c00) fn(DT_N_S_soc_S_usb_40016000) fn(DT_N_S_soc_S_digi_dietemp_40008c00) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_memory_20040000) fn(DT_N_S_soc_S_memory_20050000) fn(DT_N_S_soc_S_timers_44004800) fn(DT_N_S_soc_S_timers_44004c00) fn(DT_N_S_soc_S_timers_44005000) fn(DT_N_S_soc_S_timers_44005400) fn(DT_N_S_soc_S_serial_40004c00) fn(DT_N_S_soc_S_serial_40005000) fn(DT_N_S_soc_S_serial_40007800) fn(DT_N_S_soc_S_serial_40007c00) fn(DT_N_S_soc_S_serial_40008000) fn(DT_N_S_soc_S_serial_40006400) fn(DT_N_S_soc_S_serial_40006800) fn(DT_N_S_soc_S_serial_40006c00) fn(DT_N_S_soc_S_serial_40008400) fn(DT_N_S_soc_S_i2c_44002800) fn(DT_N_S_soc_S_i2c_44002c00) fn(DT_N_S_soc_S_spi_40014c00) fn(DT_N_S_soc_S_spi_44002000) fn(DT_N_S_soc_S_spi_40015000) fn(DT_N_S_soc_S_xspi_47001400) fn(DT_N_S_soc_S_adc_42028100) fn(DT_N_S_soc_S_timers_40000800) fn(DT_N_S_soc_S_timers_40000c00) fn(DT_N_S_soc_S_timers_40001800) fn(DT_N_S_soc_S_timers_40001c00) fn(DT_N_S_soc_S_timers_40002000) fn(DT_N_S_soc_S_timers_40014000) fn(DT_N_S_soc_S_timers_40014400) fn(DT_N_S_soc_S_timers_40014800) fn(DT_N_S_soc_S_aes_420c0000) fn(DT_N_S_soc_S_can_4000a800) fn(DT_N_S_soc_S_sdmmc_46008000) fn(DT_N_S_soc_S_memory_controller_47000400) fn(DT_N_S_soc_S_sdmmc_46008c00)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_40036400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_states) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_44020c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_44022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_44004400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40009400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40013800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_44002400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40002c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dac_42028400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_42028000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_44007800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40012c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_4000a400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rng_420c0800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ethernet_40028000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_40013000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_40003800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_40003c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usb_40016000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_digi_dietemp_40008c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20040000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20050000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_44004800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_44004c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_44005000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_44005400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40005000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40007800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40007c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40006400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40006800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40006c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40008400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_44002800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_44002c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40014c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_44002000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40015000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_xspi_47001400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_42028100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40002000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_aes_420c0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_4000a800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdmmc_46008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_controller_47000400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdmmc_46008c00)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_40036400, __VA_ARGS__) fn(DT_N_S_soc_S_power_states, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_44020c00, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_44022000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_44004400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40009400, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_44002400, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40002c00, __VA_ARGS__) fn(DT_N_S_soc_S_dac_42028400, __VA_ARGS__) fn(DT_N_S_soc_S_adc_42028000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_44007800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40012c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003c00, __VA_ARGS__) fn(DT_N_S_soc_S_can_4000a400, __VA_ARGS__) fn(DT_N_S_soc_S_rng_420c0800, __VA_ARGS__) fn(DT_N_S_soc_S_ethernet_40028000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40003c00, __VA_ARGS__) fn(DT_N_S_soc_S_usb_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_digi_dietemp_40008c00, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20040000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20050000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_44004800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_44004c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_44005000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_44005400, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004c00, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40005000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40007800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40007c00, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40006400, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40006800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40006c00, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40008400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_44002800, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_44002c00, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40014c00, __VA_ARGS__) fn(DT_N_S_soc_S_spi_44002000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_xspi_47001400, __VA_ARGS__) fn(DT_N_S_soc_S_adc_42028100, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40002000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800, __VA_ARGS__) fn(DT_N_S_soc_S_aes_420c0000, __VA_ARGS__) fn(DT_N_S_soc_S_can_4000a800, __VA_ARGS__) fn(DT_N_S_soc_S_sdmmc_46008000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_controller_47000400, __VA_ARGS__) fn(DT_N_S_soc_S_sdmmc_46008c00, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_40036400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_states, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_44020c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_44022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_44004400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40009400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_44002400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40002c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dac_42028400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_42028000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_44007800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40012c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_4000a400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rng_420c0800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ethernet_40028000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_40013000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_40003800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_40003c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usb_40016000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_digi_dietemp_40008c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20040000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20050000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_44004800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_44004c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_44005000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_44005400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40005000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40007800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40007c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40006400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40006800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40006c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40008400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_44002800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_44002c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40014c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_44002000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40015000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_xspi_47001400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_42028100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40002000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_aes_420c0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_4000a800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdmmc_46008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_controller_47000400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdmmc_46008c00, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40022000) fn(DT_N_S_soc_S_power_states) fn(DT_N_S_soc_S_rcc_44020c00) fn(DT_N_S_soc_S_interrupt_controller_44022000) fn(DT_N_S_soc_S_pin_controller_42020000) fn(DT_N_S_soc_S_serial_40004800) fn(DT_N_S_soc_S_serial_44002400) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_dac_42028400) fn(DT_N_S_soc_S_adc_42028000) fn(DT_N_S_soc_S_rtc_44007800) fn(DT_N_S_soc_S_timers_40000400) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_can_4000a400) fn(DT_N_S_soc_S_rng_420c0800) fn(DT_N_S_soc_S_ethernet_40028000) fn(DT_N_S_soc_S_dma_40020000) fn(DT_N_S_soc_S_dma_40021000) fn(DT_N_S_soc_S_usb_40016000) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_memory_20040000) fn(DT_N_S_soc_S_memory_20050000) fn(DT_N_S_soc_S_timers_44004c00)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_states) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_44020c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_44022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_44002400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dac_42028400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_42028000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_44007800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_4000a400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rng_420c0800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ethernet_40028000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usb_40016000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20040000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20050000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_44004c00)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_power_states, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_44020c00, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_44022000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_44002400, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_dac_42028400, __VA_ARGS__) fn(DT_N_S_soc_S_adc_42028000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_44007800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_can_4000a400, __VA_ARGS__) fn(DT_N_S_soc_S_rng_420c0800, __VA_ARGS__) fn(DT_N_S_soc_S_ethernet_40028000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_usb_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20040000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20050000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_44004c00, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_states, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_44020c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_44022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_44002400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dac_42028400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_42028000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_44007800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_4000a400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rng_420c0800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ethernet_40028000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usb_40016000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20040000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20050000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_44004c00, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 4
#define DT_N_S_soc_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	10, /* /soc/pin-controller@42020000 */ \
	13, /* /soc/adc@42028000 */ \
	17, /* /soc/i2c@40005400 */ \
	19, /* /soc/i2c@40005800 */ \
	21, /* /soc/i2c@44002800 */ \
	23, /* /soc/i2c@44002c00 */ \
	36, /* /soc/power-states */ \
	53, /* /soc/timers@40000400 */ \
	58, /* /soc/adc@42028100 */ \
	59, /* /soc/aes@420c0000 */ \
	62, /* /soc/can@4000a400 */ \
	63, /* /soc/can@4000a800 */ \
	65, /* /soc/dac@42028400 */ \
	66, /* /soc/digi_dietemp@40008c00 */ \
	67, /* /soc/dma@40021000 */ \
	68, /* /soc/dma@40020000 */ \
	69, /* /soc/i2s@40003800 */ \
	70, /* /soc/i2s@40003c00 */ \
	71, /* /soc/i2s@40013000 */ \
	72, /* /soc/interrupt-controller@44022000 */ \
	73, /* /soc/memory@20000000 */ \
	74, /* /soc/memory@20040000 */ \
	75, /* /soc/memory@20050000 */ \
	76, /* /soc/memory@40036400 */ \
	77, /* /soc/memory-controller@47000400 */ \
	78, /* /soc/rng@420c0800 */ \
	79, /* /soc/rtc@44007800 */ \
	80, /* /soc/sdmmc@46008000 */ \
	81, /* /soc/sdmmc@46008c00 */ \
	82, /* /soc/serial@40004400 */ \
	85, /* /soc/serial@40004800 */ \
	86, /* /soc/serial@40004c00 */ \
	87, /* /soc/serial@40005000 */ \
	88, /* /soc/serial@40006400 */ \
	89, /* /soc/serial@40006800 */ \
	90, /* /soc/serial@40006c00 */ \
	91, /* /soc/serial@40007800 */ \
	92, /* /soc/serial@40007c00 */ \
	93, /* /soc/serial@40008000 */ \
	94, /* /soc/serial@40008400 */ \
	95, /* /soc/serial@40013800 */ \
	98, /* /soc/serial@44002400 */ \
	99, /* /soc/spi@40003800 */ \
	100, /* /soc/spi@40003c00 */ \
	105, /* /soc/spi@40013000 */ \
	106, /* /soc/spi@40014c00 */ \
	107, /* /soc/spi@40015000 */ \
	108, /* /soc/spi@44002000 */ \
	109, /* /soc/timer@e000e010 */ \
	110, /* /soc/timers@40009400 */ \
	111, /* /soc/timers@44004400 */ \
	112, /* /soc/timers@44004800 */ \
	113, /* /soc/timers@44004c00 */ \
	114, /* /soc/timers@44005000 */ \
	115, /* /soc/timers@44005400 */ \
	119, /* /soc/usb@40016000 */ \
	120, /* /soc/watchdog@40002c00 */ \
	121, /* /soc/watchdog@40003000 */ \
	122, /* /soc/xspi@47001400 */ \
	130, /* /soc/ethernet@40028000 */ \
	135, /* /soc/flash-controller@40022000 */ \
	147, /* /soc/timers@40000000 */ \
	151, /* /soc/timers@40000800 */ \
	154, /* /soc/timers@40000c00 */ \
	157, /* /soc/timers@40001000 */ \
	160, /* /soc/timers@40001400 */ \
	163, /* /soc/timers@40001800 */ \
	166, /* /soc/timers@40001c00 */ \
	169, /* /soc/timers@40002000 */ \
	172, /* /soc/timers@40012c00 */ \
	174, /* /soc/timers@40014000 */ \
	177, /* /soc/timers@40014400 */ \
	180, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_st_stm32h563 DT_N_S_soc
#define DT_N_INST_0_st_stm32h5   DT_N_S_soc
#define DT_N_INST_0_simple_bus   DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_IRQ_LEVEL 0
#define DT_N_S_soc_COMPAT_MATCHES_st_stm32h563 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_0 "stm32h563"
#define DT_N_S_soc_COMPAT_MATCHES_st_stm32h5 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_1 "stm32h5"
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"st,stm32h563", "st,stm32h5", "simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_0 "st,stm32h563"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED st,stm32h563
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN st_stm32h563
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32H563
#define DT_N_S_soc_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_1 "st,stm32h5"
#define DT_N_S_soc_P_compatible_IDX_1_STRING_UNQUOTED st,stm32h5
#define DT_N_S_soc_P_compatible_IDX_1_STRING_TOKEN st_stm32h5
#define DT_N_S_soc_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32H5
#define DT_N_S_soc_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_2 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_2_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_2_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_2_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0) \
	fn(DT_N_S_soc, compatible, 1) \
	fn(DT_N_S_soc, compatible, 2)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 2)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 3
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v8m-nvic):
 *   $ZEPHYR_BASE\dts\bindings\interrupt-controller\arm,v8m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_UNQUOTED interrupt-controller@e000e100
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_TOKEN interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_UPPER_TOKEN INTERRUPT_CONTROLLER_E000E100

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_NODELABEL_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL(fn) fn(nvic)
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL_VARGS(fn, ...) fn(nvic, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 5
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	13, /* /soc/adc@42028000 */ \
	17, /* /soc/i2c@40005400 */ \
	19, /* /soc/i2c@40005800 */ \
	21, /* /soc/i2c@44002800 */ \
	23, /* /soc/i2c@44002c00 */ \
	53, /* /soc/timers@40000400 */ \
	58, /* /soc/adc@42028100 */ \
	59, /* /soc/aes@420c0000 */ \
	62, /* /soc/can@4000a400 */ \
	63, /* /soc/can@4000a800 */ \
	66, /* /soc/digi_dietemp@40008c00 */ \
	67, /* /soc/dma@40021000 */ \
	68, /* /soc/dma@40020000 */ \
	69, /* /soc/i2s@40003800 */ \
	70, /* /soc/i2s@40003c00 */ \
	71, /* /soc/i2s@40013000 */ \
	72, /* /soc/interrupt-controller@44022000 */ \
	78, /* /soc/rng@420c0800 */ \
	79, /* /soc/rtc@44007800 */ \
	80, /* /soc/sdmmc@46008000 */ \
	81, /* /soc/sdmmc@46008c00 */ \
	82, /* /soc/serial@40004400 */ \
	85, /* /soc/serial@40004800 */ \
	86, /* /soc/serial@40004c00 */ \
	87, /* /soc/serial@40005000 */ \
	88, /* /soc/serial@40006400 */ \
	89, /* /soc/serial@40006800 */ \
	90, /* /soc/serial@40006c00 */ \
	91, /* /soc/serial@40007800 */ \
	92, /* /soc/serial@40007c00 */ \
	93, /* /soc/serial@40008000 */ \
	94, /* /soc/serial@40008400 */ \
	95, /* /soc/serial@40013800 */ \
	98, /* /soc/serial@44002400 */ \
	99, /* /soc/spi@40003800 */ \
	100, /* /soc/spi@40003c00 */ \
	105, /* /soc/spi@40013000 */ \
	106, /* /soc/spi@40014c00 */ \
	107, /* /soc/spi@40015000 */ \
	108, /* /soc/spi@44002000 */ \
	110, /* /soc/timers@40009400 */ \
	111, /* /soc/timers@44004400 */ \
	112, /* /soc/timers@44004800 */ \
	113, /* /soc/timers@44004c00 */ \
	114, /* /soc/timers@44005000 */ \
	115, /* /soc/timers@44005400 */ \
	119, /* /soc/usb@40016000 */ \
	120, /* /soc/watchdog@40002c00 */ \
	122, /* /soc/xspi@47001400 */ \
	130, /* /soc/ethernet@40028000 */ \
	135, /* /soc/flash-controller@40022000 */ \
	147, /* /soc/timers@40000000 */ \
	151, /* /soc/timers@40000800 */ \
	154, /* /soc/timers@40000c00 */ \
	157, /* /soc/timers@40001000 */ \
	160, /* /soc/timers@40001400 */ \
	163, /* /soc/timers@40001800 */ \
	166, /* /soc/timers@40001c00 */ \
	169, /* /soc/timers@40002000 */ \
	172, /* /soc/timers@40012c00 */ \
	174, /* /soc/timers@40014000 */ \
	177, /* /soc/timers@40014400 */ \
	180, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v8m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_LEVEL 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v8m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v8m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 4
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v8m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v8m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UNQUOTED arm,v8m-nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v8m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V8M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks
 *
 * Node identifier: DT_N_S_clocks
 */

/* Node's full path: */
#define DT_N_S_clocks_PATH "/clocks"

/* Node's name with unit-address: */
#define DT_N_S_clocks_FULL_NAME "clocks"
#define DT_N_S_clocks_FULL_NAME_UNQUOTED clocks
#define DT_N_S_clocks_FULL_NAME_TOKEN clocks
#define DT_N_S_clocks_FULL_NAME_UPPER_TOKEN CLOCKS

/* Node parent (/) identifier: */
#define DT_N_S_clocks_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_NODELABEL_NUM 0
#define DT_N_S_clocks_FOREACH_NODELABEL(fn) 
#define DT_N_S_clocks_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_CHILD_NUM 9
#define DT_N_S_clocks_CHILD_NUM_STATUS_OKAY 3
#define DT_N_S_clocks_FOREACH_CHILD(fn) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_hsi) fn(DT_N_S_clocks_S_clk_hsi48) fn(DT_N_S_clocks_S_clk_csi) fn(DT_N_S_clocks_S_clk_lse) fn(DT_N_S_clocks_S_clk_lsi) fn(DT_N_S_clocks_S_pll) fn(DT_N_S_clocks_S_pll2) fn(DT_N_S_clocks_S_pll3)
#define DT_N_S_clocks_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hse) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hsi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hsi48) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_csi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lse) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lsi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll3)
#define DT_N_S_clocks_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hsi48, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_csi, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__) fn(DT_N_S_clocks_S_pll2, __VA_ARGS__) fn(DT_N_S_clocks_S_pll3, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hsi48, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_csi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll3, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_lsi) fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hse) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lsi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_clocks_ORD 6
#define DT_N_S_clocks_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_SUPPORTS_ORDS \
	7, /* /clocks/clk-hse */ \
	8, /* /clocks/pll */ \
	28, /* /clocks/clk-csi */ \
	29, /* /clocks/clk-hsi */ \
	30, /* /clocks/clk-hsi48 */ \
	31, /* /clocks/clk-lse */ \
	32, /* /clocks/clk-lsi */ \
	33, /* /clocks/pll2 */ \
	34, /* /clocks/pll3 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_REG_NUM 0
#define DT_N_S_clocks_RANGES_NUM 0
#define DT_N_S_clocks_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_IRQ_NUM 0
#define DT_N_S_clocks_IRQ_LEVEL 0
#define DT_N_S_clocks_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /clocks/clk-hse
 *
 * Node identifier: DT_N_S_clocks_S_clk_hse
 *
 * Binding (compatible = st,stm32-hse-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\st,stm32-hse-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hse_PATH "/clocks/clk-hse"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hse_FULL_NAME "clk-hse"
#define DT_N_S_clocks_S_clk_hse_FULL_NAME_UNQUOTED clk-hse
#define DT_N_S_clocks_S_clk_hse_FULL_NAME_TOKEN clk_hse
#define DT_N_S_clocks_S_clk_hse_FULL_NAME_UPPER_TOKEN CLK_HSE

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hse_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_hse_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_hse_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_hse_FOREACH_NODELABEL(fn) fn(clk_hse)
#define DT_N_S_clocks_S_clk_hse_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_hse, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_hse_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_hse_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hse_ORD 7
#define DT_N_S_clocks_S_clk_hse_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hse_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hse_SUPPORTS_ORDS \
	8, /* /clocks/pll */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hse_EXISTS 1
#define DT_N_INST_0_st_stm32_hse_clock DT_N_S_clocks_S_clk_hse
#define DT_N_NODELABEL_clk_hse         DT_N_S_clocks_S_clk_hse

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hse_REG_NUM 0
#define DT_N_S_clocks_S_clk_hse_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_hse_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_hse_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hse_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_hse_COMPAT_MATCHES_st_stm32_hse_clock 1
#define DT_N_S_clocks_S_clk_hse_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_clk_hse_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_COMPAT_MODEL_IDX_0 "stm32-hse-clock"
#define DT_N_S_clocks_S_clk_hse_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hse_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hse_P_hse_bypass 0
#define DT_N_S_clocks_S_clk_hse_P_hse_bypass_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_css_enabled 0
#define DT_N_S_clocks_S_clk_hse_P_css_enabled_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_clock_frequency 25000000
#define DT_N_S_clocks_S_clk_hse_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_status "okay"
#define DT_N_S_clocks_S_clk_hse_P_status_STRING_UNQUOTED okay
#define DT_N_S_clocks_S_clk_hse_P_status_STRING_TOKEN okay
#define DT_N_S_clocks_S_clk_hse_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_clk_hse_P_status_IDX_0 "okay"
#define DT_N_S_clocks_S_clk_hse_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_clocks_S_clk_hse_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_hse, status, 0)
#define DT_N_S_clocks_S_clk_hse_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hse, status, 0)
#define DT_N_S_clocks_S_clk_hse_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hse, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hse_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hse, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hse_P_status_LEN 1
#define DT_N_S_clocks_S_clk_hse_P_status_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_compatible {"st,stm32-hse-clock"}
#define DT_N_S_clocks_S_clk_hse_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_compatible_IDX_0 "st,stm32-hse-clock"
#define DT_N_S_clocks_S_clk_hse_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-hse-clock
#define DT_N_S_clocks_S_clk_hse_P_compatible_IDX_0_STRING_TOKEN st_stm32_hse_clock
#define DT_N_S_clocks_S_clk_hse_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_HSE_CLOCK
#define DT_N_S_clocks_S_clk_hse_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_hse, compatible, 0)
#define DT_N_S_clocks_S_clk_hse_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hse, compatible, 0)
#define DT_N_S_clocks_S_clk_hse_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hse, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hse_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hse, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hse_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_hse_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_hse_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_hse_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_hse_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/pll
 *
 * Node identifier: DT_N_S_clocks_S_pll
 *
 * Binding (compatible = st,stm32u5-pll-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\st,stm32u5-pll-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_pll_PATH "/clocks/pll"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_pll_FULL_NAME "pll"
#define DT_N_S_clocks_S_pll_FULL_NAME_UNQUOTED pll
#define DT_N_S_clocks_S_pll_FULL_NAME_TOKEN pll
#define DT_N_S_clocks_S_pll_FULL_NAME_UPPER_TOKEN PLL

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_pll_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_pll_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_pll_NODELABEL_NUM 2
#define DT_N_S_clocks_S_pll_FOREACH_NODELABEL(fn) fn(pll1) fn(pll)
#define DT_N_S_clocks_S_pll_FOREACH_NODELABEL_VARGS(fn, ...) fn(pll1, __VA_ARGS__) fn(pll, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_pll_CHILD_NUM 0
#define DT_N_S_clocks_S_pll_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_pll_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_pll_ORD 8
#define DT_N_S_clocks_S_pll_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_pll_REQUIRES_ORDS \
	6, /* /clocks */ \
	7, /* /clocks/clk-hse */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_pll_SUPPORTS_ORDS \
	9, /* /soc/rcc@44020c00 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_pll_EXISTS 1
#define DT_N_INST_0_st_stm32u5_pll_clock DT_N_S_clocks_S_pll
#define DT_N_NODELABEL_pll1              DT_N_S_clocks_S_pll
#define DT_N_NODELABEL_pll               DT_N_S_clocks_S_pll

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_pll_REG_NUM 0
#define DT_N_S_clocks_S_pll_RANGES_NUM 0
#define DT_N_S_clocks_S_pll_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_pll_IRQ_NUM 0
#define DT_N_S_clocks_S_pll_IRQ_LEVEL 0
#define DT_N_S_clocks_S_pll_COMPAT_MATCHES_st_stm32u5_pll_clock 1
#define DT_N_S_clocks_S_pll_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_pll_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_COMPAT_MODEL_IDX_0 "stm32u5-pll-clock"
#define DT_N_S_clocks_S_pll_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_pll_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_pll_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_clocks_IDX_0_PH DT_N_S_clocks_S_clk_hse
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, clocks, 0)
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll, clocks, 0)
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_clocks_LEN 1
#define DT_N_S_clocks_S_pll_P_clocks_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_m 2
#define DT_N_S_clocks_S_pll_P_div_m_EXISTS 1
#define DT_N_S_clocks_S_pll_P_mul_n 40
#define DT_N_S_clocks_S_pll_P_mul_n_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_p 2
#define DT_N_S_clocks_S_pll_P_div_p_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_q 2
#define DT_N_S_clocks_S_pll_P_div_q_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_r 2
#define DT_N_S_clocks_S_pll_P_div_r_EXISTS 1
#define DT_N_S_clocks_S_pll_P_status "okay"
#define DT_N_S_clocks_S_pll_P_status_STRING_UNQUOTED okay
#define DT_N_S_clocks_S_pll_P_status_STRING_TOKEN okay
#define DT_N_S_clocks_S_pll_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_pll_P_status_IDX_0 "okay"
#define DT_N_S_clocks_S_pll_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_clocks_S_pll_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, status, 0)
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll, status, 0)
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_status_LEN 1
#define DT_N_S_clocks_S_pll_P_status_EXISTS 1
#define DT_N_S_clocks_S_pll_P_compatible {"st,stm32u5-pll-clock"}
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0 "st,stm32u5-pll-clock"
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_STRING_UNQUOTED st,stm32u5-pll-clock
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_STRING_TOKEN st_stm32u5_pll_clock
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32U5_PLL_CLOCK
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, compatible, 0)
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll, compatible, 0)
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_compatible_LEN 1
#define DT_N_S_clocks_S_pll_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_pll_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_pll_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_pll_P_wakeup_source 0
#define DT_N_S_clocks_S_pll_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_pll_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_pll_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rcc@44020c00
 *
 * Node identifier: DT_N_S_soc_S_rcc_44020c00
 *
 * Binding (compatible = st,stm32u5-rcc):
 *   $ZEPHYR_BASE\dts\bindings\clock\st,stm32u5-rcc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rcc_44020c00_PATH "/soc/rcc@44020c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rcc_44020c00_FULL_NAME "rcc@44020c00"
#define DT_N_S_soc_S_rcc_44020c00_FULL_NAME_UNQUOTED rcc@44020c00
#define DT_N_S_soc_S_rcc_44020c00_FULL_NAME_TOKEN rcc_44020c00
#define DT_N_S_soc_S_rcc_44020c00_FULL_NAME_UPPER_TOKEN RCC_44020C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rcc_44020c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rcc_44020c00_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_rcc_44020c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_rcc_44020c00_FOREACH_NODELABEL(fn) fn(rcc)
#define DT_N_S_soc_S_rcc_44020c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(rcc, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rcc_44020c00_CHILD_NUM 1
#define DT_N_S_soc_S_rcc_44020c00_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_rcc_44020c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_rcc_44020c00_S_reset_controller)
#define DT_N_S_soc_S_rcc_44020c00_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_44020c00_S_reset_controller)
#define DT_N_S_soc_S_rcc_44020c00_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_44020c00_S_reset_controller, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_44020c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_44020c00_S_reset_controller, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_44020c00_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_rcc_44020c00_S_reset_controller)
#define DT_N_S_soc_S_rcc_44020c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_44020c00_S_reset_controller)
#define DT_N_S_soc_S_rcc_44020c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_44020c00_S_reset_controller, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_44020c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_44020c00_S_reset_controller, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rcc_44020c00_ORD 9
#define DT_N_S_soc_S_rcc_44020c00_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rcc_44020c00_REQUIRES_ORDS \
	4, /* /soc */ \
	8, /* /clocks/pll */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rcc_44020c00_SUPPORTS_ORDS \
	13, /* /soc/adc@42028000 */ \
	17, /* /soc/i2c@40005400 */ \
	19, /* /soc/i2c@40005800 */ \
	21, /* /soc/i2c@44002800 */ \
	23, /* /soc/i2c@44002c00 */ \
	40, /* /soc/pin-controller@42020000/gpio@42020800 */ \
	43, /* /soc/pin-controller@42020000/gpio@42021400 */ \
	44, /* /soc/pin-controller@42020000/gpio@42021800 */ \
	52, /* /soc/rcc@44020c00/reset-controller */ \
	53, /* /soc/timers@40000400 */ \
	58, /* /soc/adc@42028100 */ \
	59, /* /soc/aes@420c0000 */ \
	62, /* /soc/can@4000a400 */ \
	63, /* /soc/can@4000a800 */ \
	65, /* /soc/dac@42028400 */ \
	66, /* /soc/digi_dietemp@40008c00 */ \
	67, /* /soc/dma@40021000 */ \
	68, /* /soc/dma@40020000 */ \
	69, /* /soc/i2s@40003800 */ \
	70, /* /soc/i2s@40003c00 */ \
	71, /* /soc/i2s@40013000 */ \
	76, /* /soc/memory@40036400 */ \
	77, /* /soc/memory-controller@47000400 */ \
	78, /* /soc/rng@420c0800 */ \
	79, /* /soc/rtc@44007800 */ \
	80, /* /soc/sdmmc@46008000 */ \
	81, /* /soc/sdmmc@46008c00 */ \
	82, /* /soc/serial@40004400 */ \
	85, /* /soc/serial@40004800 */ \
	86, /* /soc/serial@40004c00 */ \
	87, /* /soc/serial@40005000 */ \
	88, /* /soc/serial@40006400 */ \
	89, /* /soc/serial@40006800 */ \
	90, /* /soc/serial@40006c00 */ \
	91, /* /soc/serial@40007800 */ \
	92, /* /soc/serial@40007c00 */ \
	93, /* /soc/serial@40008000 */ \
	94, /* /soc/serial@40008400 */ \
	95, /* /soc/serial@40013800 */ \
	98, /* /soc/serial@44002400 */ \
	99, /* /soc/spi@40003800 */ \
	100, /* /soc/spi@40003c00 */ \
	101, /* /soc/pin-controller@42020000/gpio@42020c00 */ \
	105, /* /soc/spi@40013000 */ \
	106, /* /soc/spi@40014c00 */ \
	107, /* /soc/spi@40015000 */ \
	108, /* /soc/spi@44002000 */ \
	110, /* /soc/timers@40009400 */ \
	111, /* /soc/timers@44004400 */ \
	112, /* /soc/timers@44004800 */ \
	113, /* /soc/timers@44004c00 */ \
	114, /* /soc/timers@44005000 */ \
	115, /* /soc/timers@44005400 */ \
	119, /* /soc/usb@40016000 */ \
	120, /* /soc/watchdog@40002c00 */ \
	122, /* /soc/xspi@47001400 */ \
	130, /* /soc/ethernet@40028000 */ \
	142, /* /soc/pin-controller@42020000/gpio@42020000 */ \
	143, /* /soc/pin-controller@42020000/gpio@42020400 */ \
	144, /* /soc/pin-controller@42020000/gpio@42021000 */ \
	145, /* /soc/pin-controller@42020000/gpio@42021c00 */ \
	146, /* /soc/pin-controller@42020000/gpio@42022000 */ \
	147, /* /soc/timers@40000000 */ \
	151, /* /soc/timers@40000800 */ \
	154, /* /soc/timers@40000c00 */ \
	157, /* /soc/timers@40001000 */ \
	160, /* /soc/timers@40001400 */ \
	163, /* /soc/timers@40001800 */ \
	166, /* /soc/timers@40001c00 */ \
	169, /* /soc/timers@40002000 */ \
	172, /* /soc/timers@40012c00 */ \
	174, /* /soc/timers@40014000 */ \
	177, /* /soc/timers@40014400 */ \
	180, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rcc_44020c00_EXISTS 1
#define DT_N_INST_0_st_stm32u5_rcc DT_N_S_soc_S_rcc_44020c00
#define DT_N_NODELABEL_rcc         DT_N_S_soc_S_rcc_44020c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rcc_44020c00_REG_NUM 1
#define DT_N_S_soc_S_rcc_44020c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_REG_IDX_0_VAL_ADDRESS 1140984832 /* 0x44020c00 */
#define DT_N_S_soc_S_rcc_44020c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rcc_44020c00_RANGES_NUM 0
#define DT_N_S_soc_S_rcc_44020c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rcc_44020c00_IRQ_NUM 0
#define DT_N_S_soc_S_rcc_44020c00_IRQ_LEVEL 0
#define DT_N_S_soc_S_rcc_44020c00_COMPAT_MATCHES_st_stm32u5_rcc 1
#define DT_N_S_soc_S_rcc_44020c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rcc_44020c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_COMPAT_MODEL_IDX_0 "stm32u5-rcc"
#define DT_N_S_soc_S_rcc_44020c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rcc_44020c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rcc_44020c00_P_apb3_prescaler 1
#define DT_N_S_soc_S_rcc_44020c00_P_apb3_prescaler_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_44020c00_P_apb3_prescaler_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_P_apb3_prescaler_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_P_apb3_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_P_reg {1140984832 /* 0x44020c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rcc_44020c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_P_reg_IDX_0 1140984832
#define DT_N_S_soc_S_rcc_44020c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rcc_44020c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_P_clock_frequency 250000000
#define DT_N_S_soc_S_rcc_44020c00_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_P_ahb_prescaler 1
#define DT_N_S_soc_S_rcc_44020c00_P_ahb_prescaler_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_44020c00_P_ahb_prescaler_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_P_ahb_prescaler_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_P_ahb_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_P_apb1_prescaler 1
#define DT_N_S_soc_S_rcc_44020c00_P_apb1_prescaler_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_44020c00_P_apb1_prescaler_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_P_apb1_prescaler_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_P_apb1_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_P_apb2_prescaler 1
#define DT_N_S_soc_S_rcc_44020c00_P_apb2_prescaler_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_44020c00_P_apb2_prescaler_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_P_apb2_prescaler_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_P_apb2_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_P_compatible {"st,stm32u5-rcc"}
#define DT_N_S_soc_S_rcc_44020c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_P_compatible_IDX_0 "st,stm32u5-rcc"
#define DT_N_S_soc_S_rcc_44020c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32u5-rcc
#define DT_N_S_soc_S_rcc_44020c00_P_compatible_IDX_0_STRING_TOKEN st_stm32u5_rcc
#define DT_N_S_soc_S_rcc_44020c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32U5_RCC
#define DT_N_S_soc_S_rcc_44020c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_44020c00, compatible, 0)
#define DT_N_S_soc_S_rcc_44020c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_44020c00, compatible, 0)
#define DT_N_S_soc_S_rcc_44020c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_44020c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_44020c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_44020c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_44020c00_P_compatible_LEN 1
#define DT_N_S_soc_S_rcc_44020c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_P_clocks_IDX_0_PH DT_N_S_clocks_S_pll
#define DT_N_S_soc_S_rcc_44020c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_44020c00, clocks, 0)
#define DT_N_S_soc_S_rcc_44020c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_44020c00, clocks, 0)
#define DT_N_S_soc_S_rcc_44020c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_44020c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_44020c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_44020c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_44020c00_P_clocks_LEN 1
#define DT_N_S_soc_S_rcc_44020c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rcc_44020c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_P_wakeup_source 0
#define DT_N_S_soc_S_rcc_44020c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rcc_44020c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000
 *
 * Binding (compatible = st,stm32-pinctrl):
 *   $ZEPHYR_BASE\dts\bindings\pinctrl\st,stm32-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_PATH "/soc/pin-controller@42020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_FULL_NAME "pin-controller@42020000"
#define DT_N_S_soc_S_pin_controller_42020000_FULL_NAME_UNQUOTED pin-controller@42020000
#define DT_N_S_soc_S_pin_controller_42020000_FULL_NAME_TOKEN pin_controller_42020000
#define DT_N_S_soc_S_pin_controller_42020000_FULL_NAME_UPPER_TOKEN PIN_CONTROLLER_42020000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_FOREACH_NODELABEL(fn) fn(pinctrl)
#define DT_N_S_soc_S_pin_controller_42020000_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinctrl, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_CHILD_NUM 35
#define DT_N_S_soc_S_pin_controller_42020000_CHILD_NUM_STATUS_OKAY 35
#define DT_N_S_soc_S_pin_controller_42020000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6) fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11) fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0) fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0) fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9) fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12)
#define DT_N_S_soc_S_pin_controller_42020000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12)
#define DT_N_S_soc_S_pin_controller_42020000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6) fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11) fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0) fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0) fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9) fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12)
#define DT_N_S_soc_S_pin_controller_42020000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12)
#define DT_N_S_soc_S_pin_controller_42020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_ORD 10
#define DT_N_S_soc_S_pin_controller_42020000_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_SUPPORTS_ORDS \
	11, /* /soc/pin-controller@42020000/adc1_inp15_pa3 */ \
	12, /* /soc/pin-controller@42020000/adc1_inp3_pa6 */ \
	15, /* /soc/pin-controller@42020000/i2c1_scl_pb8 */ \
	16, /* /soc/pin-controller@42020000/i2c1_sda_pb9 */ \
	40, /* /soc/pin-controller@42020000/gpio@42020800 */ \
	43, /* /soc/pin-controller@42020000/gpio@42021400 */ \
	44, /* /soc/pin-controller@42020000/gpio@42021800 */ \
	54, /* /soc/pin-controller@42020000/tim3_ch3_pb0 */ \
	60, /* /soc/pin-controller@42020000/fdcan1_rx_pd0 */ \
	61, /* /soc/pin-controller@42020000/fdcan1_tx_pd1 */ \
	64, /* /soc/pin-controller@42020000/dac1_out2_pa5 */ \
	83, /* /soc/pin-controller@42020000/usart3_rx_pd9 */ \
	84, /* /soc/pin-controller@42020000/usart3_tx_pd8 */ \
	96, /* /soc/pin-controller@42020000/lpuart1_rx_pb7 */ \
	97, /* /soc/pin-controller@42020000/lpuart1_tx_pb6 */ \
	101, /* /soc/pin-controller@42020000/gpio@42020c00 */ \
	102, /* /soc/pin-controller@42020000/spi1_miso_pg9 */ \
	103, /* /soc/pin-controller@42020000/spi1_mosi_pb5 */ \
	104, /* /soc/pin-controller@42020000/spi1_sck_pa5 */ \
	117, /* /soc/pin-controller@42020000/usb_dm_pa11 */ \
	118, /* /soc/pin-controller@42020000/usb_dp_pa12 */ \
	123, /* /soc/pin-controller@42020000/eth_crs_dv_pa7 */ \
	124, /* /soc/pin-controller@42020000/eth_ref_clk_pa1 */ \
	125, /* /soc/pin-controller@42020000/eth_rxd0_pc4 */ \
	126, /* /soc/pin-controller@42020000/eth_rxd1_pc5 */ \
	127, /* /soc/pin-controller@42020000/eth_tx_en_pg11 */ \
	128, /* /soc/pin-controller@42020000/eth_txd0_pg13 */ \
	129, /* /soc/pin-controller@42020000/eth_txd1_pb15 */ \
	131, /* /soc/pin-controller@42020000/eth_mdc_pc1 */ \
	132, /* /soc/pin-controller@42020000/eth_mdio_pa2 */ \
	142, /* /soc/pin-controller@42020000/gpio@42020000 */ \
	143, /* /soc/pin-controller@42020000/gpio@42020400 */ \
	144, /* /soc/pin-controller@42020000/gpio@42021000 */ \
	145, /* /soc/pin-controller@42020000/gpio@42021c00 */ \
	146, /* /soc/pin-controller@42020000/gpio@42022000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_EXISTS 1
#define DT_N_INST_0_st_stm32_pinctrl DT_N_S_soc_S_pin_controller_42020000
#define DT_N_NODELABEL_pinctrl       DT_N_S_soc_S_pin_controller_42020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_REG_IDX_0_VAL_ADDRESS 1107427328 /* 0x42020000 */
#define DT_N_S_soc_S_pin_controller_42020000_REG_IDX_0_VAL_SIZE 8192 /* 0x2000 */
#define DT_N_S_soc_S_pin_controller_42020000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_COMPAT_MATCHES_st_stm32_pinctrl 1
#define DT_N_S_soc_S_pin_controller_42020000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_42020000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_COMPAT_MODEL_IDX_0 "stm32-pinctrl"
#define DT_N_S_soc_S_pin_controller_42020000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_P_reg {1107427328 /* 0x42020000 */, 8192 /* 0x2000 */}
#define DT_N_S_soc_S_pin_controller_42020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_P_reg_IDX_0 1107427328
#define DT_N_S_soc_S_pin_controller_42020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_P_reg_IDX_1 8192
#define DT_N_S_soc_S_pin_controller_42020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_P_remap_pa11 0
#define DT_N_S_soc_S_pin_controller_42020000_P_remap_pa11_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_P_remap_pa12 0
#define DT_N_S_soc_S_pin_controller_42020000_P_remap_pa12_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_P_remap_pa11_pa12 0
#define DT_N_S_soc_S_pin_controller_42020000_P_remap_pa11_pa12_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_P_compatible {"st,stm32-pinctrl"}
#define DT_N_S_soc_S_pin_controller_42020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_P_compatible_IDX_0 "st,stm32-pinctrl"
#define DT_N_S_soc_S_pin_controller_42020000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pinctrl
#define DT_N_S_soc_S_pin_controller_42020000_P_compatible_IDX_0_STRING_TOKEN st_stm32_pinctrl
#define DT_N_S_soc_S_pin_controller_42020000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PINCTRL
#define DT_N_S_soc_S_pin_controller_42020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_42020000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_42020000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_42020000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/adc1_inp15_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_PATH "/soc/pin-controller@42020000/adc1_inp15_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_FULL_NAME "adc1_inp15_pa3"
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_FULL_NAME_UNQUOTED adc1_inp15_pa3
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_FULL_NAME_TOKEN adc1_inp15_pa3
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_FULL_NAME_UPPER_TOKEN ADC1_INP15_PA3

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_FOREACH_NODELABEL(fn) fn(adc1_inp15_pa3)
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc1_inp15_pa3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_ORD 11
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_SUPPORTS_ORDS \
	13, /* /soc/adc@42028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_EXISTS 1
#define DT_N_NODELABEL_adc1_inp15_pa3 DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_pinmux 112
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/adc1_inp3_pa6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_PATH "/soc/pin-controller@42020000/adc1_inp3_pa6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_FULL_NAME "adc1_inp3_pa6"
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_FULL_NAME_UNQUOTED adc1_inp3_pa6
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_FULL_NAME_TOKEN adc1_inp3_pa6
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_FULL_NAME_UPPER_TOKEN ADC1_INP3_PA6

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_FOREACH_NODELABEL(fn) fn(adc1_inp3_pa6)
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc1_inp3_pa6, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_ORD 12
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_SUPPORTS_ORDS \
	13, /* /soc/adc@42028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_EXISTS 1
#define DT_N_NODELABEL_adc1_inp3_pa6 DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_pinmux 208
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/adc@42028000
 *
 * Node identifier: DT_N_S_soc_S_adc_42028000
 *
 * Binding (compatible = st,stm32-adc):
 *   $ZEPHYR_BASE\dts\bindings\adc\st,stm32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_42028000_PATH "/soc/adc@42028000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_42028000_FULL_NAME "adc@42028000"
#define DT_N_S_soc_S_adc_42028000_FULL_NAME_UNQUOTED adc@42028000
#define DT_N_S_soc_S_adc_42028000_FULL_NAME_TOKEN adc_42028000
#define DT_N_S_soc_S_adc_42028000_FULL_NAME_UPPER_TOKEN ADC_42028000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_42028000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_42028000_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_42028000_NODELABEL_NUM 1
#define DT_N_S_soc_S_adc_42028000_FOREACH_NODELABEL(fn) fn(adc1)
#define DT_N_S_soc_S_adc_42028000_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_42028000_CHILD_NUM 0
#define DT_N_S_soc_S_adc_42028000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_adc_42028000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_42028000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_42028000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_42028000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_42028000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_42028000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_42028000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_42028000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_42028000_ORD 13
#define DT_N_S_soc_S_adc_42028000_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_42028000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	11, /* /soc/pin-controller@42020000/adc1_inp15_pa3 */ \
	12, /* /soc/pin-controller@42020000/adc1_inp3_pa6 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_42028000_SUPPORTS_ORDS \
	14, /* /dietemp */ \
	26, /* /vbat */ \
	27, /* /vref */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_42028000_EXISTS 1
#define DT_N_INST_0_st_stm32_adc DT_N_S_soc_S_adc_42028000
#define DT_N_NODELABEL_adc1      DT_N_S_soc_S_adc_42028000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_42028000_REG_NUM 1
#define DT_N_S_soc_S_adc_42028000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_REG_IDX_0_VAL_ADDRESS 1107460096 /* 0x42028000 */
#define DT_N_S_soc_S_adc_42028000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_adc_42028000_RANGES_NUM 0
#define DT_N_S_soc_S_adc_42028000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_42028000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_42028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_IRQ_IDX_0_VAL_irq 37
#define DT_N_S_soc_S_adc_42028000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_42028000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_adc_42028000_IRQ_LEVEL 1
#define DT_N_S_soc_S_adc_42028000_COMPAT_MATCHES_st_stm32_adc 1
#define DT_N_S_soc_S_adc_42028000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_adc_42028000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_COMPAT_MODEL_IDX_0 "stm32-adc"
#define DT_N_S_soc_S_adc_42028000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_42028000_PINCTRL_NUM 1
#define DT_N_S_soc_S_adc_42028000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_adc_42028000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_adc_42028000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_adc_42028000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6
#define DT_N_S_soc_S_adc_42028000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3

/* Generic property macros: */
#define DT_N_S_soc_S_adc_42028000_P_reg {1107460096 /* 0x42028000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_adc_42028000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_reg_IDX_0 1107460096
#define DT_N_S_soc_S_adc_42028000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_adc_42028000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_adc_42028000_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_adc_42028000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_clocks_IDX_0_VAL_bits 1024
#define DT_N_S_soc_S_adc_42028000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_adc_42028000_P_clocks_IDX_1_VAL_bus 8
#define DT_N_S_soc_S_adc_42028000_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_clocks_IDX_1_VAL_bits 57576
#define DT_N_S_soc_S_adc_42028000_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42028000, clocks, 0) \
	fn(DT_N_S_soc_S_adc_42028000, clocks, 1)
#define DT_N_S_soc_S_adc_42028000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42028000, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, clocks, 1)
#define DT_N_S_soc_S_adc_42028000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42028000, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42028000, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_clocks_LEN 2
#define DT_N_S_soc_S_adc_42028000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_interrupts {37 /* 0x25 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_42028000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_interrupts_IDX_0 37
#define DT_N_S_soc_S_adc_42028000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_42028000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_st_adc_clock_source 2
#define DT_N_S_soc_S_adc_42028000_P_st_adc_clock_source_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_adc_42028000_P_st_adc_clock_source_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_st_adc_clock_source_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_st_adc_clock_source_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_st_adc_prescaler 6
#define DT_N_S_soc_S_adc_42028000_P_st_adc_prescaler_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_adc_42028000_P_st_adc_prescaler_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_st_adc_prescaler_IDX_0_ENUM_VAL_6_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_st_adc_prescaler_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_vref_mv 3300
#define DT_N_S_soc_S_adc_42028000_P_vref_mv_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_resolutions {6316812 /* 0x60630c */, 5333772 /* 0x51630c */, 4350732 /* 0x42630c */, 3367692 /* 0x33630c */}
#define DT_N_S_soc_S_adc_42028000_P_resolutions_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_resolutions_IDX_0 6316812
#define DT_N_S_soc_S_adc_42028000_P_resolutions_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_resolutions_IDX_1 5333772
#define DT_N_S_soc_S_adc_42028000_P_resolutions_IDX_2_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_resolutions_IDX_2 4350732
#define DT_N_S_soc_S_adc_42028000_P_resolutions_IDX_3_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_resolutions_IDX_3 3367692
#define DT_N_S_soc_S_adc_42028000_P_resolutions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42028000, resolutions, 0) \
	fn(DT_N_S_soc_S_adc_42028000, resolutions, 1) \
	fn(DT_N_S_soc_S_adc_42028000, resolutions, 2) \
	fn(DT_N_S_soc_S_adc_42028000, resolutions, 3)
#define DT_N_S_soc_S_adc_42028000_P_resolutions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42028000, resolutions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, resolutions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, resolutions, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, resolutions, 3)
#define DT_N_S_soc_S_adc_42028000_P_resolutions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42028000, resolutions, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028000, resolutions, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028000, resolutions, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028000, resolutions, 3, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_resolutions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42028000, resolutions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, resolutions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, resolutions, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, resolutions, 3, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_resolutions_LEN 4
#define DT_N_S_soc_S_adc_42028000_P_resolutions_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_sampling_times {3 /* 0x3 */, 7 /* 0x7 */, 13 /* 0xd */, 25 /* 0x19 */, 48 /* 0x30 */, 93 /* 0x5d */, 248 /* 0xf8 */, 641 /* 0x281 */}
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_0 3
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_1 7
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_2_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_2 13
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_3_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_3 25
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_4_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_4 48
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_5_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_5 93
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_6_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_6 248
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_7_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_7 641
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42028000, sampling_times, 0) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 1) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 2) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 3) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 4) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 5) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 6) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 7)
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42028000, sampling_times, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 7)
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42028000, sampling_times, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42028000, sampling_times, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_LEN 8
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_st_adc_sequencer 1
#define DT_N_S_soc_S_adc_42028000_P_st_adc_sequencer_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_adc_42028000_P_st_adc_sequencer_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_st_adc_sequencer_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_st_adc_sequencer_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_status "okay"
#define DT_N_S_soc_S_adc_42028000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_adc_42028000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_adc_42028000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_42028000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_adc_42028000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_adc_42028000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42028000, status, 0)
#define DT_N_S_soc_S_adc_42028000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42028000, status, 0)
#define DT_N_S_soc_S_adc_42028000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42028000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42028000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_status_LEN 1
#define DT_N_S_soc_S_adc_42028000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_compatible {"st,stm32-adc"}
#define DT_N_S_soc_S_adc_42028000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_compatible_IDX_0 "st,stm32-adc"
#define DT_N_S_soc_S_adc_42028000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-adc
#define DT_N_S_soc_S_adc_42028000_P_compatible_IDX_0_STRING_TOKEN st_stm32_adc
#define DT_N_S_soc_S_adc_42028000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_ADC
#define DT_N_S_soc_S_adc_42028000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42028000, compatible, 0)
#define DT_N_S_soc_S_adc_42028000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42028000, compatible, 0)
#define DT_N_S_soc_S_adc_42028000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42028000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42028000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_42028000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_adc_42028000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_wakeup_source 0
#define DT_N_S_soc_S_adc_42028000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_42028000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42028000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_adc_42028000, pinctrl_0, 1)
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42028000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, pinctrl_0, 1)
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42028000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42028000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42028000, pinctrl_names, 0)
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42028000, pinctrl_names, 0)
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42028000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42028000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /dietemp
 *
 * Node identifier: DT_N_S_dietemp
 *
 * Binding (compatible = st,stm32-temp-cal):
 *   $ZEPHYR_BASE\dts\bindings\sensor\st,stm32-temp-cal.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_dietemp_PATH "/dietemp"

/* Node's name with unit-address: */
#define DT_N_S_dietemp_FULL_NAME "dietemp"
#define DT_N_S_dietemp_FULL_NAME_UNQUOTED dietemp
#define DT_N_S_dietemp_FULL_NAME_TOKEN dietemp
#define DT_N_S_dietemp_FULL_NAME_UPPER_TOKEN DIETEMP

/* Node parent (/) identifier: */
#define DT_N_S_dietemp_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_dietemp_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_dietemp_NODELABEL_NUM 1
#define DT_N_S_dietemp_FOREACH_NODELABEL(fn) fn(die_temp)
#define DT_N_S_dietemp_FOREACH_NODELABEL_VARGS(fn, ...) fn(die_temp, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_dietemp_CHILD_NUM 0
#define DT_N_S_dietemp_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_dietemp_FOREACH_CHILD(fn) 
#define DT_N_S_dietemp_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_dietemp_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_dietemp_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_dietemp_ORD 14
#define DT_N_S_dietemp_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_dietemp_REQUIRES_ORDS \
	0, /* / */ \
	13, /* /soc/adc@42028000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_dietemp_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_dietemp_EXISTS 1
#define DT_N_INST_0_st_stm32_temp_cal DT_N_S_dietemp
#define DT_N_NODELABEL_die_temp       DT_N_S_dietemp

/* Macros for properties that are special in the specification: */
#define DT_N_S_dietemp_REG_NUM 0
#define DT_N_S_dietemp_RANGES_NUM 0
#define DT_N_S_dietemp_FOREACH_RANGE(fn) 
#define DT_N_S_dietemp_IRQ_NUM 0
#define DT_N_S_dietemp_IRQ_LEVEL 0
#define DT_N_S_dietemp_COMPAT_MATCHES_st_stm32_temp_cal 1
#define DT_N_S_dietemp_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_dietemp_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_dietemp_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_dietemp_COMPAT_MODEL_IDX_0 "stm32-temp-cal"
#define DT_N_S_dietemp_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_dietemp_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_dietemp_P_ts_cal2_addr 150992920
#define DT_N_S_dietemp_P_ts_cal2_addr_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal2_temp 130
#define DT_N_S_dietemp_P_ts_cal2_temp_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal1_addr 150992916
#define DT_N_S_dietemp_P_ts_cal1_addr_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal1_temp 30
#define DT_N_S_dietemp_P_ts_cal1_temp_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal_vrefanalog 3300
#define DT_N_S_dietemp_P_ts_cal_vrefanalog_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal_resolution 12
#define DT_N_S_dietemp_P_ts_cal_resolution_IDX_0_ENUM_IDX 0
#define DT_N_S_dietemp_P_ts_cal_resolution_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal_resolution_IDX_0_ENUM_VAL_12_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal_resolution_EXISTS 1
#define DT_N_S_dietemp_P_status "disabled"
#define DT_N_S_dietemp_P_status_STRING_UNQUOTED disabled
#define DT_N_S_dietemp_P_status_STRING_TOKEN disabled
#define DT_N_S_dietemp_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_dietemp_P_status_IDX_0 "disabled"
#define DT_N_S_dietemp_P_status_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_dietemp_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dietemp, status, 0)
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dietemp, status, 0)
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dietemp, status, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dietemp, status, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_status_LEN 1
#define DT_N_S_dietemp_P_status_EXISTS 1
#define DT_N_S_dietemp_P_compatible {"st,stm32-temp-cal"}
#define DT_N_S_dietemp_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_compatible_IDX_0 "st,stm32-temp-cal"
#define DT_N_S_dietemp_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-temp-cal
#define DT_N_S_dietemp_P_compatible_IDX_0_STRING_TOKEN st_stm32_temp_cal
#define DT_N_S_dietemp_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TEMP_CAL
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dietemp, compatible, 0)
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dietemp, compatible, 0)
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dietemp, compatible, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dietemp, compatible, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_compatible_LEN 1
#define DT_N_S_dietemp_P_compatible_EXISTS 1
#define DT_N_S_dietemp_P_io_channels_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_io_channels_IDX_0_PH DT_N_S_soc_S_adc_42028000
#define DT_N_S_dietemp_P_io_channels_IDX_0_VAL_input 16
#define DT_N_S_dietemp_P_io_channels_IDX_0_VAL_input_EXISTS 1
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dietemp, io_channels, 0)
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dietemp, io_channels, 0)
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dietemp, io_channels, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dietemp, io_channels, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_io_channels_LEN 1
#define DT_N_S_dietemp_P_io_channels_EXISTS 1
#define DT_N_S_dietemp_P_zephyr_deferred_init 0
#define DT_N_S_dietemp_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_dietemp_P_wakeup_source 0
#define DT_N_S_dietemp_P_wakeup_source_EXISTS 1
#define DT_N_S_dietemp_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_dietemp_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/i2c1_scl_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_PATH "/soc/pin-controller@42020000/i2c1_scl_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FULL_NAME "i2c1_scl_pb8"
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FULL_NAME_UNQUOTED i2c1_scl_pb8
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FULL_NAME_TOKEN i2c1_scl_pb8
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FULL_NAME_UPPER_TOKEN I2C1_SCL_PB8

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_CHILD_IDX 23

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FOREACH_NODELABEL(fn) fn(i2c1_scl_pb8)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c1_scl_pb8, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_ORD 15
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_SUPPORTS_ORDS \
	17, /* /soc/i2c@40005400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_EXISTS 1
#define DT_N_NODELABEL_i2c1_scl_pb8 DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_pinmux 772
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/i2c1_sda_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_PATH "/soc/pin-controller@42020000/i2c1_sda_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FULL_NAME "i2c1_sda_pb9"
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FULL_NAME_UNQUOTED i2c1_sda_pb9
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FULL_NAME_TOKEN i2c1_sda_pb9
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FULL_NAME_UPPER_TOKEN I2C1_SDA_PB9

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_CHILD_IDX 24

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FOREACH_NODELABEL(fn) fn(i2c1_sda_pb9)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c1_sda_pb9, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_ORD 16
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_SUPPORTS_ORDS \
	17, /* /soc/i2c@40005400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_EXISTS 1
#define DT_N_NODELABEL_i2c1_sda_pb9 DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_pinmux 804
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005400
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005400
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   $ZEPHYR_BASE\dts\bindings\i2c\st,stm32-i2c-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005400_PATH "/soc/i2c@40005400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005400_FULL_NAME "i2c@40005400"
#define DT_N_S_soc_S_i2c_40005400_FULL_NAME_UNQUOTED i2c@40005400
#define DT_N_S_soc_S_i2c_40005400_FULL_NAME_TOKEN i2c_40005400
#define DT_N_S_soc_S_i2c_40005400_FULL_NAME_UPPER_TOKEN I2C_40005400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005400_CHILD_IDX 24

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_40005400_NODELABEL_NUM 2
#define DT_N_S_soc_S_i2c_40005400_FOREACH_NODELABEL(fn) fn(i2c1) fn(arduino_i2c)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c1, __VA_ARGS__) fn(arduino_i2c, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005400_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_40005400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005400_ORD 17
#define DT_N_S_soc_S_i2c_40005400_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	15, /* /soc/pin-controller@42020000/i2c1_scl_pb8 */ \
	16, /* /soc/pin-controller@42020000/i2c1_sda_pb9 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005400_SUPPORTS_ORDS \
	18, /* /smbus1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005400_EXISTS 1
#define DT_N_INST_0_st_stm32_i2c_v2 DT_N_S_soc_S_i2c_40005400
#define DT_N_NODELABEL_i2c1         DT_N_S_soc_S_i2c_40005400
#define DT_N_NODELABEL_arduino_i2c  DT_N_S_soc_S_i2c_40005400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005400_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_ADDRESS 1073763328 /* 0x40005400 */
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005400_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005400_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq 51
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq 52
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40005400_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_CONTROLLER DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_CONTROLLER DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MATCHES_st_stm32_i2c_v2 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MODEL_IDX_0 "stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005400_P_reg {1073763328 /* 0x40005400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0 1073763328
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005400_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts {51 /* 0x33 */, 0 /* 0x0 */, 52 /* 0x34 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0 51
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_2 52
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_sq_size 4
#define DT_N_S_soc_S_i2c_40005400_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_cq_size 4
#define DT_N_S_soc_S_i2c_40005400_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status "okay"
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_40005400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40005400_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, status, 0)
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, status, 0)
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible {"st,stm32-i2c-v2"}
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0 "st,stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-i2c-v2
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_STRING_TOKEN st_stm32_i2c_v2
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_I2C_V2
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_STRING_UNQUOTED event
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_STRING_TOKEN event
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN EVENT
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_STRING_UNQUOTED error
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_STRING_TOKEN error
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN ERROR
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bits 2097152
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40005400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40005400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /smbus1
 *
 * Node identifier: DT_N_S_smbus1
 *
 * Binding (compatible = st,stm32-smbus):
 *   $ZEPHYR_BASE\dts\bindings\smbus\st,stm32-smbus.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_smbus1_PATH "/smbus1"

/* Node's name with unit-address: */
#define DT_N_S_smbus1_FULL_NAME "smbus1"
#define DT_N_S_smbus1_FULL_NAME_UNQUOTED smbus1
#define DT_N_S_smbus1_FULL_NAME_TOKEN smbus1
#define DT_N_S_smbus1_FULL_NAME_UPPER_TOKEN SMBUS1

/* Node parent (/) identifier: */
#define DT_N_S_smbus1_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_smbus1_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_smbus1_NODELABEL_NUM 1
#define DT_N_S_smbus1_FOREACH_NODELABEL(fn) fn(smbus1)
#define DT_N_S_smbus1_FOREACH_NODELABEL_VARGS(fn, ...) fn(smbus1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_smbus1_CHILD_NUM 0
#define DT_N_S_smbus1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_smbus1_FOREACH_CHILD(fn) 
#define DT_N_S_smbus1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_smbus1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_smbus1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_smbus1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_smbus1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_smbus1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_smbus1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_smbus1_ORD 18
#define DT_N_S_smbus1_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_smbus1_REQUIRES_ORDS \
	0, /* / */ \
	17, /* /soc/i2c@40005400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_smbus1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_smbus1_EXISTS 1
#define DT_N_INST_0_st_stm32_smbus DT_N_S_smbus1
#define DT_N_NODELABEL_smbus1      DT_N_S_smbus1

/* Macros for properties that are special in the specification: */
#define DT_N_S_smbus1_REG_NUM 0
#define DT_N_S_smbus1_RANGES_NUM 0
#define DT_N_S_smbus1_FOREACH_RANGE(fn) 
#define DT_N_S_smbus1_IRQ_NUM 0
#define DT_N_S_smbus1_IRQ_LEVEL 0
#define DT_N_S_smbus1_COMPAT_MATCHES_st_stm32_smbus 1
#define DT_N_S_smbus1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_smbus1_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_smbus1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_smbus1_COMPAT_MODEL_IDX_0 "stm32-smbus"
#define DT_N_S_smbus1_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_smbus1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_smbus1_P_i2c DT_N_S_soc_S_i2c_40005400
#define DT_N_S_smbus1_P_i2c_IDX_0 DT_N_S_soc_S_i2c_40005400
#define DT_N_S_smbus1_P_i2c_IDX_0_PH DT_N_S_soc_S_i2c_40005400
#define DT_N_S_smbus1_P_i2c_IDX_0_EXISTS 1
#define DT_N_S_smbus1_P_i2c_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus1, i2c, 0)
#define DT_N_S_smbus1_P_i2c_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus1, i2c, 0)
#define DT_N_S_smbus1_P_i2c_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus1, i2c, 0, __VA_ARGS__)
#define DT_N_S_smbus1_P_i2c_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus1, i2c, 0, __VA_ARGS__)
#define DT_N_S_smbus1_P_i2c_LEN 1
#define DT_N_S_smbus1_P_i2c_EXISTS 1
#define DT_N_S_smbus1_P_status "disabled"
#define DT_N_S_smbus1_P_status_STRING_UNQUOTED disabled
#define DT_N_S_smbus1_P_status_STRING_TOKEN disabled
#define DT_N_S_smbus1_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_smbus1_P_status_IDX_0 "disabled"
#define DT_N_S_smbus1_P_status_IDX_0_EXISTS 1
#define DT_N_S_smbus1_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_smbus1_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_smbus1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus1, status, 0)
#define DT_N_S_smbus1_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus1, status, 0)
#define DT_N_S_smbus1_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus1, status, 0, __VA_ARGS__)
#define DT_N_S_smbus1_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus1, status, 0, __VA_ARGS__)
#define DT_N_S_smbus1_P_status_LEN 1
#define DT_N_S_smbus1_P_status_EXISTS 1
#define DT_N_S_smbus1_P_compatible {"st,stm32-smbus"}
#define DT_N_S_smbus1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_smbus1_P_compatible_IDX_0 "st,stm32-smbus"
#define DT_N_S_smbus1_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-smbus
#define DT_N_S_smbus1_P_compatible_IDX_0_STRING_TOKEN st_stm32_smbus
#define DT_N_S_smbus1_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SMBUS
#define DT_N_S_smbus1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus1, compatible, 0)
#define DT_N_S_smbus1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus1, compatible, 0)
#define DT_N_S_smbus1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus1, compatible, 0, __VA_ARGS__)
#define DT_N_S_smbus1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus1, compatible, 0, __VA_ARGS__)
#define DT_N_S_smbus1_P_compatible_LEN 1
#define DT_N_S_smbus1_P_compatible_EXISTS 1
#define DT_N_S_smbus1_P_zephyr_deferred_init 0
#define DT_N_S_smbus1_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_smbus1_P_wakeup_source 0
#define DT_N_S_smbus1_P_wakeup_source_EXISTS 1
#define DT_N_S_smbus1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_smbus1_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005800
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005800
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   $ZEPHYR_BASE\dts\bindings\i2c\st,stm32-i2c-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005800_PATH "/soc/i2c@40005800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005800_FULL_NAME "i2c@40005800"
#define DT_N_S_soc_S_i2c_40005800_FULL_NAME_UNQUOTED i2c@40005800
#define DT_N_S_soc_S_i2c_40005800_FULL_NAME_TOKEN i2c_40005800
#define DT_N_S_soc_S_i2c_40005800_FULL_NAME_UPPER_TOKEN I2C_40005800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005800_CHILD_IDX 25

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_40005800_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_40005800_FOREACH_NODELABEL(fn) fn(i2c2)
#define DT_N_S_soc_S_i2c_40005800_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005800_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_40005800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005800_ORD 19
#define DT_N_S_soc_S_i2c_40005800_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005800_SUPPORTS_ORDS \
	20, /* /smbus2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005800_EXISTS 1
#define DT_N_INST_1_st_stm32_i2c_v2 DT_N_S_soc_S_i2c_40005800
#define DT_N_NODELABEL_i2c2         DT_N_S_soc_S_i2c_40005800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005800_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_VAL_ADDRESS 1073764352 /* 0x40005800 */
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005800_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005800_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq 53
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq 54
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40005800_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_CONTROLLER DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_CONTROLLER DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MATCHES_st_stm32_i2c_v2 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MODEL_IDX_0 "stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005800_P_reg {1073764352 /* 0x40005800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_0 1073764352
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005800_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts {53 /* 0x35 */, 0 /* 0x0 */, 54 /* 0x36 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_0 53
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_2 54
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40005800_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_sq_size 4
#define DT_N_S_soc_S_i2c_40005800_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_cq_size 4
#define DT_N_S_soc_S_i2c_40005800_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_status "disabled"
#define DT_N_S_soc_S_i2c_40005800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40005800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40005800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40005800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40005800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40005800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, status, 0)
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, status, 0)
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible {"st,stm32-i2c-v2"}
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0 "st,stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-i2c-v2
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_STRING_TOKEN st_stm32_i2c_v2
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_I2C_V2
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_STRING_UNQUOTED event
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_STRING_TOKEN event
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN EVENT
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_STRING_UNQUOTED error
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_STRING_TOKEN error
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN ERROR
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bits 4194304
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40005800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40005800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /smbus2
 *
 * Node identifier: DT_N_S_smbus2
 *
 * Binding (compatible = st,stm32-smbus):
 *   $ZEPHYR_BASE\dts\bindings\smbus\st,stm32-smbus.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_smbus2_PATH "/smbus2"

/* Node's name with unit-address: */
#define DT_N_S_smbus2_FULL_NAME "smbus2"
#define DT_N_S_smbus2_FULL_NAME_UNQUOTED smbus2
#define DT_N_S_smbus2_FULL_NAME_TOKEN smbus2
#define DT_N_S_smbus2_FULL_NAME_UPPER_TOKEN SMBUS2

/* Node parent (/) identifier: */
#define DT_N_S_smbus2_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_smbus2_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_smbus2_NODELABEL_NUM 1
#define DT_N_S_smbus2_FOREACH_NODELABEL(fn) fn(smbus2)
#define DT_N_S_smbus2_FOREACH_NODELABEL_VARGS(fn, ...) fn(smbus2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_smbus2_CHILD_NUM 0
#define DT_N_S_smbus2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_smbus2_FOREACH_CHILD(fn) 
#define DT_N_S_smbus2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_smbus2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_smbus2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_smbus2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_smbus2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_smbus2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_smbus2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_smbus2_ORD 20
#define DT_N_S_smbus2_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_smbus2_REQUIRES_ORDS \
	0, /* / */ \
	19, /* /soc/i2c@40005800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_smbus2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_smbus2_EXISTS 1
#define DT_N_INST_1_st_stm32_smbus DT_N_S_smbus2
#define DT_N_NODELABEL_smbus2      DT_N_S_smbus2

/* Macros for properties that are special in the specification: */
#define DT_N_S_smbus2_REG_NUM 0
#define DT_N_S_smbus2_RANGES_NUM 0
#define DT_N_S_smbus2_FOREACH_RANGE(fn) 
#define DT_N_S_smbus2_IRQ_NUM 0
#define DT_N_S_smbus2_IRQ_LEVEL 0
#define DT_N_S_smbus2_COMPAT_MATCHES_st_stm32_smbus 1
#define DT_N_S_smbus2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_smbus2_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_smbus2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_smbus2_COMPAT_MODEL_IDX_0 "stm32-smbus"
#define DT_N_S_smbus2_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_smbus2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_smbus2_P_i2c DT_N_S_soc_S_i2c_40005800
#define DT_N_S_smbus2_P_i2c_IDX_0 DT_N_S_soc_S_i2c_40005800
#define DT_N_S_smbus2_P_i2c_IDX_0_PH DT_N_S_soc_S_i2c_40005800
#define DT_N_S_smbus2_P_i2c_IDX_0_EXISTS 1
#define DT_N_S_smbus2_P_i2c_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus2, i2c, 0)
#define DT_N_S_smbus2_P_i2c_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus2, i2c, 0)
#define DT_N_S_smbus2_P_i2c_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus2, i2c, 0, __VA_ARGS__)
#define DT_N_S_smbus2_P_i2c_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus2, i2c, 0, __VA_ARGS__)
#define DT_N_S_smbus2_P_i2c_LEN 1
#define DT_N_S_smbus2_P_i2c_EXISTS 1
#define DT_N_S_smbus2_P_status "disabled"
#define DT_N_S_smbus2_P_status_STRING_UNQUOTED disabled
#define DT_N_S_smbus2_P_status_STRING_TOKEN disabled
#define DT_N_S_smbus2_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_smbus2_P_status_IDX_0 "disabled"
#define DT_N_S_smbus2_P_status_IDX_0_EXISTS 1
#define DT_N_S_smbus2_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_smbus2_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_smbus2_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus2, status, 0)
#define DT_N_S_smbus2_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus2, status, 0)
#define DT_N_S_smbus2_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus2, status, 0, __VA_ARGS__)
#define DT_N_S_smbus2_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus2, status, 0, __VA_ARGS__)
#define DT_N_S_smbus2_P_status_LEN 1
#define DT_N_S_smbus2_P_status_EXISTS 1
#define DT_N_S_smbus2_P_compatible {"st,stm32-smbus"}
#define DT_N_S_smbus2_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_smbus2_P_compatible_IDX_0 "st,stm32-smbus"
#define DT_N_S_smbus2_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-smbus
#define DT_N_S_smbus2_P_compatible_IDX_0_STRING_TOKEN st_stm32_smbus
#define DT_N_S_smbus2_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SMBUS
#define DT_N_S_smbus2_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus2, compatible, 0)
#define DT_N_S_smbus2_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus2, compatible, 0)
#define DT_N_S_smbus2_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus2, compatible, 0, __VA_ARGS__)
#define DT_N_S_smbus2_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus2, compatible, 0, __VA_ARGS__)
#define DT_N_S_smbus2_P_compatible_LEN 1
#define DT_N_S_smbus2_P_compatible_EXISTS 1
#define DT_N_S_smbus2_P_zephyr_deferred_init 0
#define DT_N_S_smbus2_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_smbus2_P_wakeup_source 0
#define DT_N_S_smbus2_P_wakeup_source_EXISTS 1
#define DT_N_S_smbus2_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_smbus2_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@44002800
 *
 * Node identifier: DT_N_S_soc_S_i2c_44002800
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   $ZEPHYR_BASE\dts\bindings\i2c\st,stm32-i2c-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_44002800_PATH "/soc/i2c@44002800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_44002800_FULL_NAME "i2c@44002800"
#define DT_N_S_soc_S_i2c_44002800_FULL_NAME_UNQUOTED i2c@44002800
#define DT_N_S_soc_S_i2c_44002800_FULL_NAME_TOKEN i2c_44002800
#define DT_N_S_soc_S_i2c_44002800_FULL_NAME_UPPER_TOKEN I2C_44002800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_44002800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_44002800_CHILD_IDX 55

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_44002800_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_44002800_FOREACH_NODELABEL(fn) fn(i2c3)
#define DT_N_S_soc_S_i2c_44002800_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_44002800_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_44002800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_44002800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_44002800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_44002800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_44002800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_44002800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_44002800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_44002800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_44002800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_44002800_ORD 21
#define DT_N_S_soc_S_i2c_44002800_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_44002800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_44002800_SUPPORTS_ORDS \
	22, /* /smbus3 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_44002800_EXISTS 1
#define DT_N_INST_2_st_stm32_i2c_v2 DT_N_S_soc_S_i2c_44002800
#define DT_N_NODELABEL_i2c3         DT_N_S_soc_S_i2c_44002800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_44002800_REG_NUM 1
#define DT_N_S_soc_S_i2c_44002800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_REG_IDX_0_VAL_ADDRESS 1140860928 /* 0x44002800 */
#define DT_N_S_soc_S_i2c_44002800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_44002800_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_44002800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_44002800_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_44002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_IRQ_IDX_0_VAL_irq 80
#define DT_N_S_soc_S_i2c_44002800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_44002800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_44002800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_IRQ_IDX_1_VAL_irq 81
#define DT_N_S_soc_S_i2c_44002800_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_44002800_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_44002800_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_44002800_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_44002800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_44002800_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_44002800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_44002800_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_IRQ_NAME_event_CONTROLLER DT_N_S_soc_S_i2c_44002800_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_i2c_44002800_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_44002800_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_44002800_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_44002800_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_44002800_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_IRQ_NAME_error_CONTROLLER DT_N_S_soc_S_i2c_44002800_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_i2c_44002800_COMPAT_MATCHES_st_stm32_i2c_v2 1
#define DT_N_S_soc_S_i2c_44002800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_44002800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_COMPAT_MODEL_IDX_0 "stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_44002800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_44002800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_44002800_P_reg {1140860928 /* 0x44002800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_44002800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_reg_IDX_0 1140860928
#define DT_N_S_soc_S_i2c_44002800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_44002800_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_interrupts {80 /* 0x50 */, 0 /* 0x0 */, 81 /* 0x51 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_44002800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_interrupts_IDX_0 80
#define DT_N_S_soc_S_i2c_44002800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_44002800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_interrupts_IDX_2 81
#define DT_N_S_soc_S_i2c_44002800_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_44002800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_44002800_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_sq_size 4
#define DT_N_S_soc_S_i2c_44002800_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_cq_size 4
#define DT_N_S_soc_S_i2c_44002800_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_status "disabled"
#define DT_N_S_soc_S_i2c_44002800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_44002800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_44002800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_44002800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_44002800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_44002800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_44002800, status, 0)
#define DT_N_S_soc_S_i2c_44002800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_44002800, status, 0)
#define DT_N_S_soc_S_i2c_44002800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_44002800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_44002800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_44002800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_44002800_P_status_LEN 1
#define DT_N_S_soc_S_i2c_44002800_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_compatible {"st,stm32-i2c-v2"}
#define DT_N_S_soc_S_i2c_44002800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_compatible_IDX_0 "st,stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_44002800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-i2c-v2
#define DT_N_S_soc_S_i2c_44002800_P_compatible_IDX_0_STRING_TOKEN st_stm32_i2c_v2
#define DT_N_S_soc_S_i2c_44002800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_I2C_V2
#define DT_N_S_soc_S_i2c_44002800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_44002800, compatible, 0)
#define DT_N_S_soc_S_i2c_44002800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_44002800, compatible, 0)
#define DT_N_S_soc_S_i2c_44002800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_44002800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_44002800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_44002800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_44002800_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_44002800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_44002800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_44002800_P_interrupt_names_IDX_0_STRING_UNQUOTED event
#define DT_N_S_soc_S_i2c_44002800_P_interrupt_names_IDX_0_STRING_TOKEN event
#define DT_N_S_soc_S_i2c_44002800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN EVENT
#define DT_N_S_soc_S_i2c_44002800_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_44002800_P_interrupt_names_IDX_1_STRING_UNQUOTED error
#define DT_N_S_soc_S_i2c_44002800_P_interrupt_names_IDX_1_STRING_TOKEN error
#define DT_N_S_soc_S_i2c_44002800_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN ERROR
#define DT_N_S_soc_S_i2c_44002800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_44002800, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_44002800, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_44002800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_44002800, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_44002800, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_44002800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_44002800, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_44002800, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_44002800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_44002800, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_44002800, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_44002800_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_44002800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_i2c_44002800_P_clocks_IDX_0_VAL_bus 168
#define DT_N_S_soc_S_i2c_44002800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_clocks_IDX_0_VAL_bits 128
#define DT_N_S_soc_S_i2c_44002800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_44002800, clocks, 0)
#define DT_N_S_soc_S_i2c_44002800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_44002800, clocks, 0)
#define DT_N_S_soc_S_i2c_44002800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_44002800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_44002800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_44002800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_44002800_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_44002800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_44002800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_44002800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_44002800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_44002800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /smbus3
 *
 * Node identifier: DT_N_S_smbus3
 *
 * Binding (compatible = st,stm32-smbus):
 *   $ZEPHYR_BASE\dts\bindings\smbus\st,stm32-smbus.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_smbus3_PATH "/smbus3"

/* Node's name with unit-address: */
#define DT_N_S_smbus3_FULL_NAME "smbus3"
#define DT_N_S_smbus3_FULL_NAME_UNQUOTED smbus3
#define DT_N_S_smbus3_FULL_NAME_TOKEN smbus3
#define DT_N_S_smbus3_FULL_NAME_UPPER_TOKEN SMBUS3

/* Node parent (/) identifier: */
#define DT_N_S_smbus3_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_smbus3_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_smbus3_NODELABEL_NUM 1
#define DT_N_S_smbus3_FOREACH_NODELABEL(fn) fn(smbus3)
#define DT_N_S_smbus3_FOREACH_NODELABEL_VARGS(fn, ...) fn(smbus3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_smbus3_CHILD_NUM 0
#define DT_N_S_smbus3_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_smbus3_FOREACH_CHILD(fn) 
#define DT_N_S_smbus3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_smbus3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_smbus3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_smbus3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_smbus3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_smbus3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_smbus3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_smbus3_ORD 22
#define DT_N_S_smbus3_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_smbus3_REQUIRES_ORDS \
	0, /* / */ \
	21, /* /soc/i2c@44002800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_smbus3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_smbus3_EXISTS 1
#define DT_N_INST_2_st_stm32_smbus DT_N_S_smbus3
#define DT_N_NODELABEL_smbus3      DT_N_S_smbus3

/* Macros for properties that are special in the specification: */
#define DT_N_S_smbus3_REG_NUM 0
#define DT_N_S_smbus3_RANGES_NUM 0
#define DT_N_S_smbus3_FOREACH_RANGE(fn) 
#define DT_N_S_smbus3_IRQ_NUM 0
#define DT_N_S_smbus3_IRQ_LEVEL 0
#define DT_N_S_smbus3_COMPAT_MATCHES_st_stm32_smbus 1
#define DT_N_S_smbus3_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_smbus3_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_smbus3_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_smbus3_COMPAT_MODEL_IDX_0 "stm32-smbus"
#define DT_N_S_smbus3_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_smbus3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_smbus3_P_i2c DT_N_S_soc_S_i2c_44002800
#define DT_N_S_smbus3_P_i2c_IDX_0 DT_N_S_soc_S_i2c_44002800
#define DT_N_S_smbus3_P_i2c_IDX_0_PH DT_N_S_soc_S_i2c_44002800
#define DT_N_S_smbus3_P_i2c_IDX_0_EXISTS 1
#define DT_N_S_smbus3_P_i2c_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus3, i2c, 0)
#define DT_N_S_smbus3_P_i2c_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus3, i2c, 0)
#define DT_N_S_smbus3_P_i2c_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus3, i2c, 0, __VA_ARGS__)
#define DT_N_S_smbus3_P_i2c_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus3, i2c, 0, __VA_ARGS__)
#define DT_N_S_smbus3_P_i2c_LEN 1
#define DT_N_S_smbus3_P_i2c_EXISTS 1
#define DT_N_S_smbus3_P_status "disabled"
#define DT_N_S_smbus3_P_status_STRING_UNQUOTED disabled
#define DT_N_S_smbus3_P_status_STRING_TOKEN disabled
#define DT_N_S_smbus3_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_smbus3_P_status_IDX_0 "disabled"
#define DT_N_S_smbus3_P_status_IDX_0_EXISTS 1
#define DT_N_S_smbus3_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_smbus3_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_smbus3_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus3, status, 0)
#define DT_N_S_smbus3_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus3, status, 0)
#define DT_N_S_smbus3_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus3, status, 0, __VA_ARGS__)
#define DT_N_S_smbus3_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus3, status, 0, __VA_ARGS__)
#define DT_N_S_smbus3_P_status_LEN 1
#define DT_N_S_smbus3_P_status_EXISTS 1
#define DT_N_S_smbus3_P_compatible {"st,stm32-smbus"}
#define DT_N_S_smbus3_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_smbus3_P_compatible_IDX_0 "st,stm32-smbus"
#define DT_N_S_smbus3_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-smbus
#define DT_N_S_smbus3_P_compatible_IDX_0_STRING_TOKEN st_stm32_smbus
#define DT_N_S_smbus3_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SMBUS
#define DT_N_S_smbus3_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus3, compatible, 0)
#define DT_N_S_smbus3_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus3, compatible, 0)
#define DT_N_S_smbus3_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus3, compatible, 0, __VA_ARGS__)
#define DT_N_S_smbus3_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus3, compatible, 0, __VA_ARGS__)
#define DT_N_S_smbus3_P_compatible_LEN 1
#define DT_N_S_smbus3_P_compatible_EXISTS 1
#define DT_N_S_smbus3_P_zephyr_deferred_init 0
#define DT_N_S_smbus3_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_smbus3_P_wakeup_source 0
#define DT_N_S_smbus3_P_wakeup_source_EXISTS 1
#define DT_N_S_smbus3_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_smbus3_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@44002c00
 *
 * Node identifier: DT_N_S_soc_S_i2c_44002c00
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   $ZEPHYR_BASE\dts\bindings\i2c\st,stm32-i2c-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_44002c00_PATH "/soc/i2c@44002c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_44002c00_FULL_NAME "i2c@44002c00"
#define DT_N_S_soc_S_i2c_44002c00_FULL_NAME_UNQUOTED i2c@44002c00
#define DT_N_S_soc_S_i2c_44002c00_FULL_NAME_TOKEN i2c_44002c00
#define DT_N_S_soc_S_i2c_44002c00_FULL_NAME_UPPER_TOKEN I2C_44002C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_44002c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_44002c00_CHILD_IDX 56

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_44002c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_44002c00_FOREACH_NODELABEL(fn) fn(i2c4)
#define DT_N_S_soc_S_i2c_44002c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c4, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_44002c00_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_44002c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_44002c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_44002c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_44002c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_44002c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_44002c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_44002c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_44002c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_44002c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_44002c00_ORD 23
#define DT_N_S_soc_S_i2c_44002c00_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_44002c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_44002c00_SUPPORTS_ORDS \
	24, /* /smbus4 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_44002c00_EXISTS 1
#define DT_N_INST_3_st_stm32_i2c_v2 DT_N_S_soc_S_i2c_44002c00
#define DT_N_NODELABEL_i2c4         DT_N_S_soc_S_i2c_44002c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_44002c00_REG_NUM 1
#define DT_N_S_soc_S_i2c_44002c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_REG_IDX_0_VAL_ADDRESS 1140861952 /* 0x44002c00 */
#define DT_N_S_soc_S_i2c_44002c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_44002c00_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_44002c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_44002c00_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_44002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_IRQ_IDX_0_VAL_irq 125
#define DT_N_S_soc_S_i2c_44002c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_44002c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_44002c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_IRQ_IDX_1_VAL_irq 126
#define DT_N_S_soc_S_i2c_44002c00_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_44002c00_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_44002c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_44002c00_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_44002c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_44002c00_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_44002c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_44002c00_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_IRQ_NAME_event_CONTROLLER DT_N_S_soc_S_i2c_44002c00_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_i2c_44002c00_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_44002c00_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_44002c00_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_44002c00_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_44002c00_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_IRQ_NAME_error_CONTROLLER DT_N_S_soc_S_i2c_44002c00_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_i2c_44002c00_COMPAT_MATCHES_st_stm32_i2c_v2 1
#define DT_N_S_soc_S_i2c_44002c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_44002c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_COMPAT_MODEL_IDX_0 "stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_44002c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_44002c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_44002c00_P_reg {1140861952 /* 0x44002c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_44002c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_reg_IDX_0 1140861952
#define DT_N_S_soc_S_i2c_44002c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_44002c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_interrupts {125 /* 0x7d */, 0 /* 0x0 */, 126 /* 0x7e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_44002c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_interrupts_IDX_0 125
#define DT_N_S_soc_S_i2c_44002c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_44002c00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_interrupts_IDX_2 126
#define DT_N_S_soc_S_i2c_44002c00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_44002c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_44002c00_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_sq_size 4
#define DT_N_S_soc_S_i2c_44002c00_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_cq_size 4
#define DT_N_S_soc_S_i2c_44002c00_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_status "disabled"
#define DT_N_S_soc_S_i2c_44002c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_44002c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_44002c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_44002c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_44002c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_44002c00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_44002c00, status, 0)
#define DT_N_S_soc_S_i2c_44002c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_44002c00, status, 0)
#define DT_N_S_soc_S_i2c_44002c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_44002c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_44002c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_44002c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_44002c00_P_status_LEN 1
#define DT_N_S_soc_S_i2c_44002c00_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_compatible {"st,stm32-i2c-v2"}
#define DT_N_S_soc_S_i2c_44002c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_compatible_IDX_0 "st,stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_44002c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-i2c-v2
#define DT_N_S_soc_S_i2c_44002c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_i2c_v2
#define DT_N_S_soc_S_i2c_44002c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_I2C_V2
#define DT_N_S_soc_S_i2c_44002c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_44002c00, compatible, 0)
#define DT_N_S_soc_S_i2c_44002c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_44002c00, compatible, 0)
#define DT_N_S_soc_S_i2c_44002c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_44002c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_44002c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_44002c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_44002c00_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_44002c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_44002c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_44002c00_P_interrupt_names_IDX_0_STRING_UNQUOTED event
#define DT_N_S_soc_S_i2c_44002c00_P_interrupt_names_IDX_0_STRING_TOKEN event
#define DT_N_S_soc_S_i2c_44002c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN EVENT
#define DT_N_S_soc_S_i2c_44002c00_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_44002c00_P_interrupt_names_IDX_1_STRING_UNQUOTED error
#define DT_N_S_soc_S_i2c_44002c00_P_interrupt_names_IDX_1_STRING_TOKEN error
#define DT_N_S_soc_S_i2c_44002c00_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN ERROR
#define DT_N_S_soc_S_i2c_44002c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_44002c00, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_44002c00, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_44002c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_44002c00, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_44002c00, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_44002c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_44002c00, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_44002c00, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_44002c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_44002c00, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_44002c00, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_44002c00_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_44002c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_i2c_44002c00_P_clocks_IDX_0_VAL_bus 168
#define DT_N_S_soc_S_i2c_44002c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_clocks_IDX_0_VAL_bits 256
#define DT_N_S_soc_S_i2c_44002c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_44002c00, clocks, 0)
#define DT_N_S_soc_S_i2c_44002c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_44002c00, clocks, 0)
#define DT_N_S_soc_S_i2c_44002c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_44002c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_44002c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_44002c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_44002c00_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_44002c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_44002c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_44002c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_44002c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_44002c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /smbus4
 *
 * Node identifier: DT_N_S_smbus4
 *
 * Binding (compatible = st,stm32-smbus):
 *   $ZEPHYR_BASE\dts\bindings\smbus\st,stm32-smbus.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_smbus4_PATH "/smbus4"

/* Node's name with unit-address: */
#define DT_N_S_smbus4_FULL_NAME "smbus4"
#define DT_N_S_smbus4_FULL_NAME_UNQUOTED smbus4
#define DT_N_S_smbus4_FULL_NAME_TOKEN smbus4
#define DT_N_S_smbus4_FULL_NAME_UPPER_TOKEN SMBUS4

/* Node parent (/) identifier: */
#define DT_N_S_smbus4_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_smbus4_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_smbus4_NODELABEL_NUM 1
#define DT_N_S_smbus4_FOREACH_NODELABEL(fn) fn(smbus4)
#define DT_N_S_smbus4_FOREACH_NODELABEL_VARGS(fn, ...) fn(smbus4, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_smbus4_CHILD_NUM 0
#define DT_N_S_smbus4_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_smbus4_FOREACH_CHILD(fn) 
#define DT_N_S_smbus4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_smbus4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_smbus4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_smbus4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_smbus4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_smbus4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_smbus4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_smbus4_ORD 24
#define DT_N_S_smbus4_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_smbus4_REQUIRES_ORDS \
	0, /* / */ \
	23, /* /soc/i2c@44002c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_smbus4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_smbus4_EXISTS 1
#define DT_N_INST_3_st_stm32_smbus DT_N_S_smbus4
#define DT_N_NODELABEL_smbus4      DT_N_S_smbus4

/* Macros for properties that are special in the specification: */
#define DT_N_S_smbus4_REG_NUM 0
#define DT_N_S_smbus4_RANGES_NUM 0
#define DT_N_S_smbus4_FOREACH_RANGE(fn) 
#define DT_N_S_smbus4_IRQ_NUM 0
#define DT_N_S_smbus4_IRQ_LEVEL 0
#define DT_N_S_smbus4_COMPAT_MATCHES_st_stm32_smbus 1
#define DT_N_S_smbus4_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_smbus4_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_smbus4_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_smbus4_COMPAT_MODEL_IDX_0 "stm32-smbus"
#define DT_N_S_smbus4_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_smbus4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_smbus4_P_i2c DT_N_S_soc_S_i2c_44002c00
#define DT_N_S_smbus4_P_i2c_IDX_0 DT_N_S_soc_S_i2c_44002c00
#define DT_N_S_smbus4_P_i2c_IDX_0_PH DT_N_S_soc_S_i2c_44002c00
#define DT_N_S_smbus4_P_i2c_IDX_0_EXISTS 1
#define DT_N_S_smbus4_P_i2c_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus4, i2c, 0)
#define DT_N_S_smbus4_P_i2c_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus4, i2c, 0)
#define DT_N_S_smbus4_P_i2c_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus4, i2c, 0, __VA_ARGS__)
#define DT_N_S_smbus4_P_i2c_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus4, i2c, 0, __VA_ARGS__)
#define DT_N_S_smbus4_P_i2c_LEN 1
#define DT_N_S_smbus4_P_i2c_EXISTS 1
#define DT_N_S_smbus4_P_status "disabled"
#define DT_N_S_smbus4_P_status_STRING_UNQUOTED disabled
#define DT_N_S_smbus4_P_status_STRING_TOKEN disabled
#define DT_N_S_smbus4_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_smbus4_P_status_IDX_0 "disabled"
#define DT_N_S_smbus4_P_status_IDX_0_EXISTS 1
#define DT_N_S_smbus4_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_smbus4_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_smbus4_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus4, status, 0)
#define DT_N_S_smbus4_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus4, status, 0)
#define DT_N_S_smbus4_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus4, status, 0, __VA_ARGS__)
#define DT_N_S_smbus4_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus4, status, 0, __VA_ARGS__)
#define DT_N_S_smbus4_P_status_LEN 1
#define DT_N_S_smbus4_P_status_EXISTS 1
#define DT_N_S_smbus4_P_compatible {"st,stm32-smbus"}
#define DT_N_S_smbus4_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_smbus4_P_compatible_IDX_0 "st,stm32-smbus"
#define DT_N_S_smbus4_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-smbus
#define DT_N_S_smbus4_P_compatible_IDX_0_STRING_TOKEN st_stm32_smbus
#define DT_N_S_smbus4_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SMBUS
#define DT_N_S_smbus4_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus4, compatible, 0)
#define DT_N_S_smbus4_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus4, compatible, 0)
#define DT_N_S_smbus4_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus4, compatible, 0, __VA_ARGS__)
#define DT_N_S_smbus4_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus4, compatible, 0, __VA_ARGS__)
#define DT_N_S_smbus4_P_compatible_LEN 1
#define DT_N_S_smbus4_P_compatible_EXISTS 1
#define DT_N_S_smbus4_P_zephyr_deferred_init 0
#define DT_N_S_smbus4_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_smbus4_P_wakeup_source 0
#define DT_N_S_smbus4_P_wakeup_source_EXISTS 1
#define DT_N_S_smbus4_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_smbus4_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /st-morpho-header
 *
 * Node identifier: DT_N_S_st_morpho_header
 *
 * Binding (compatible = st-morpho-header):
 *   $ZEPHYR_BASE\dts\bindings\gpio\st-morpho-header.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_st_morpho_header_PATH "/st-morpho-header"

/* Node's name with unit-address: */
#define DT_N_S_st_morpho_header_FULL_NAME "st-morpho-header"
#define DT_N_S_st_morpho_header_FULL_NAME_UNQUOTED st-morpho-header
#define DT_N_S_st_morpho_header_FULL_NAME_TOKEN st_morpho_header
#define DT_N_S_st_morpho_header_FULL_NAME_UPPER_TOKEN ST_MORPHO_HEADER

/* Node parent (/) identifier: */
#define DT_N_S_st_morpho_header_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_st_morpho_header_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_st_morpho_header_NODELABEL_NUM 1
#define DT_N_S_st_morpho_header_FOREACH_NODELABEL(fn) fn(st_morpho_header)
#define DT_N_S_st_morpho_header_FOREACH_NODELABEL_VARGS(fn, ...) fn(st_morpho_header, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_st_morpho_header_CHILD_NUM 0
#define DT_N_S_st_morpho_header_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_st_morpho_header_FOREACH_CHILD(fn) 
#define DT_N_S_st_morpho_header_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_st_morpho_header_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_st_morpho_header_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_st_morpho_header_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_st_morpho_header_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_st_morpho_header_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_st_morpho_header_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_st_morpho_header_ORD 25
#define DT_N_S_st_morpho_header_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_st_morpho_header_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_st_morpho_header_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_st_morpho_header_EXISTS 1
#define DT_N_INST_0_st_morpho_header    DT_N_S_st_morpho_header
#define DT_N_NODELABEL_st_morpho_header DT_N_S_st_morpho_header

/* Macros for properties that are special in the specification: */
#define DT_N_S_st_morpho_header_REG_NUM 0
#define DT_N_S_st_morpho_header_RANGES_NUM 0
#define DT_N_S_st_morpho_header_FOREACH_RANGE(fn) 
#define DT_N_S_st_morpho_header_IRQ_NUM 0
#define DT_N_S_st_morpho_header_IRQ_LEVEL 0
#define DT_N_S_st_morpho_header_COMPAT_MATCHES_st_morpho_header 1
#define DT_N_S_st_morpho_header_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_st_morpho_header_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_st_morpho_header_P_compatible {"st-morpho-header"}
#define DT_N_S_st_morpho_header_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_st_morpho_header_P_compatible_IDX_0 "st-morpho-header"
#define DT_N_S_st_morpho_header_P_compatible_IDX_0_STRING_UNQUOTED st-morpho-header
#define DT_N_S_st_morpho_header_P_compatible_IDX_0_STRING_TOKEN st_morpho_header
#define DT_N_S_st_morpho_header_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_MORPHO_HEADER
#define DT_N_S_st_morpho_header_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_st_morpho_header, compatible, 0)
#define DT_N_S_st_morpho_header_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_st_morpho_header, compatible, 0)
#define DT_N_S_st_morpho_header_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_st_morpho_header, compatible, 0, __VA_ARGS__)
#define DT_N_S_st_morpho_header_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_st_morpho_header, compatible, 0, __VA_ARGS__)
#define DT_N_S_st_morpho_header_P_compatible_LEN 1
#define DT_N_S_st_morpho_header_P_compatible_EXISTS 1
#define DT_N_S_st_morpho_header_P_zephyr_deferred_init 0
#define DT_N_S_st_morpho_header_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_st_morpho_header_P_wakeup_source 0
#define DT_N_S_st_morpho_header_P_wakeup_source_EXISTS 1
#define DT_N_S_st_morpho_header_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_st_morpho_header_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /vbat
 *
 * Node identifier: DT_N_S_vbat
 *
 * Binding (compatible = st,stm32-vbat):
 *   $ZEPHYR_BASE\dts\bindings\sensor\st,stm32-vbat.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_vbat_PATH "/vbat"

/* Node's name with unit-address: */
#define DT_N_S_vbat_FULL_NAME "vbat"
#define DT_N_S_vbat_FULL_NAME_UNQUOTED vbat
#define DT_N_S_vbat_FULL_NAME_TOKEN vbat
#define DT_N_S_vbat_FULL_NAME_UPPER_TOKEN VBAT

/* Node parent (/) identifier: */
#define DT_N_S_vbat_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_vbat_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_vbat_NODELABEL_NUM 1
#define DT_N_S_vbat_FOREACH_NODELABEL(fn) fn(vbat)
#define DT_N_S_vbat_FOREACH_NODELABEL_VARGS(fn, ...) fn(vbat, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_vbat_CHILD_NUM 0
#define DT_N_S_vbat_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_vbat_FOREACH_CHILD(fn) 
#define DT_N_S_vbat_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_vbat_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_vbat_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_vbat_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_vbat_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_vbat_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_vbat_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_vbat_ORD 26
#define DT_N_S_vbat_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_vbat_REQUIRES_ORDS \
	0, /* / */ \
	13, /* /soc/adc@42028000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_vbat_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_vbat_EXISTS 1
#define DT_N_ALIAS_volt_sensor1   DT_N_S_vbat
#define DT_N_INST_0_st_stm32_vbat DT_N_S_vbat
#define DT_N_NODELABEL_vbat       DT_N_S_vbat

/* Macros for properties that are special in the specification: */
#define DT_N_S_vbat_REG_NUM 0
#define DT_N_S_vbat_RANGES_NUM 0
#define DT_N_S_vbat_FOREACH_RANGE(fn) 
#define DT_N_S_vbat_IRQ_NUM 0
#define DT_N_S_vbat_IRQ_LEVEL 0
#define DT_N_S_vbat_COMPAT_MATCHES_st_stm32_vbat 1
#define DT_N_S_vbat_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_vbat_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_vbat_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_vbat_COMPAT_MODEL_IDX_0 "stm32-vbat"
#define DT_N_S_vbat_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_vbat_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_vbat_P_io_channels_IDX_0_EXISTS 1
#define DT_N_S_vbat_P_io_channels_IDX_0_PH DT_N_S_soc_S_adc_42028000
#define DT_N_S_vbat_P_io_channels_IDX_0_VAL_input 2
#define DT_N_S_vbat_P_io_channels_IDX_0_VAL_input_EXISTS 1
#define DT_N_S_vbat_P_io_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbat, io_channels, 0)
#define DT_N_S_vbat_P_io_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbat, io_channels, 0)
#define DT_N_S_vbat_P_io_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbat, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vbat_P_io_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbat, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vbat_P_io_channels_LEN 1
#define DT_N_S_vbat_P_io_channels_EXISTS 1
#define DT_N_S_vbat_P_ratio 4
#define DT_N_S_vbat_P_ratio_EXISTS 1
#define DT_N_S_vbat_P_status "okay"
#define DT_N_S_vbat_P_status_STRING_UNQUOTED okay
#define DT_N_S_vbat_P_status_STRING_TOKEN okay
#define DT_N_S_vbat_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_vbat_P_status_IDX_0 "okay"
#define DT_N_S_vbat_P_status_IDX_0_EXISTS 1
#define DT_N_S_vbat_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_vbat_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_vbat_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbat, status, 0)
#define DT_N_S_vbat_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbat, status, 0)
#define DT_N_S_vbat_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbat, status, 0, __VA_ARGS__)
#define DT_N_S_vbat_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbat, status, 0, __VA_ARGS__)
#define DT_N_S_vbat_P_status_LEN 1
#define DT_N_S_vbat_P_status_EXISTS 1
#define DT_N_S_vbat_P_compatible {"st,stm32-vbat"}
#define DT_N_S_vbat_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_vbat_P_compatible_IDX_0 "st,stm32-vbat"
#define DT_N_S_vbat_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-vbat
#define DT_N_S_vbat_P_compatible_IDX_0_STRING_TOKEN st_stm32_vbat
#define DT_N_S_vbat_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_VBAT
#define DT_N_S_vbat_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbat, compatible, 0)
#define DT_N_S_vbat_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbat, compatible, 0)
#define DT_N_S_vbat_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbat, compatible, 0, __VA_ARGS__)
#define DT_N_S_vbat_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbat, compatible, 0, __VA_ARGS__)
#define DT_N_S_vbat_P_compatible_LEN 1
#define DT_N_S_vbat_P_compatible_EXISTS 1
#define DT_N_S_vbat_P_zephyr_deferred_init 0
#define DT_N_S_vbat_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_vbat_P_wakeup_source 0
#define DT_N_S_vbat_P_wakeup_source_EXISTS 1
#define DT_N_S_vbat_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_vbat_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /vref
 *
 * Node identifier: DT_N_S_vref
 *
 * Binding (compatible = st,stm32-vref):
 *   $ZEPHYR_BASE\dts\bindings\sensor\st,stm32-vref.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_vref_PATH "/vref"

/* Node's name with unit-address: */
#define DT_N_S_vref_FULL_NAME "vref"
#define DT_N_S_vref_FULL_NAME_UNQUOTED vref
#define DT_N_S_vref_FULL_NAME_TOKEN vref
#define DT_N_S_vref_FULL_NAME_UPPER_TOKEN VREF

/* Node parent (/) identifier: */
#define DT_N_S_vref_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_vref_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_vref_NODELABEL_NUM 1
#define DT_N_S_vref_FOREACH_NODELABEL(fn) fn(vref)
#define DT_N_S_vref_FOREACH_NODELABEL_VARGS(fn, ...) fn(vref, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_vref_CHILD_NUM 0
#define DT_N_S_vref_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_vref_FOREACH_CHILD(fn) 
#define DT_N_S_vref_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_vref_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_vref_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_vref_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_vref_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_vref_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_vref_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_vref_ORD 27
#define DT_N_S_vref_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_vref_REQUIRES_ORDS \
	0, /* / */ \
	13, /* /soc/adc@42028000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_vref_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_vref_EXISTS 1
#define DT_N_ALIAS_volt_sensor0   DT_N_S_vref
#define DT_N_INST_0_st_stm32_vref DT_N_S_vref
#define DT_N_NODELABEL_vref       DT_N_S_vref

/* Macros for properties that are special in the specification: */
#define DT_N_S_vref_REG_NUM 0
#define DT_N_S_vref_RANGES_NUM 0
#define DT_N_S_vref_FOREACH_RANGE(fn) 
#define DT_N_S_vref_IRQ_NUM 0
#define DT_N_S_vref_IRQ_LEVEL 0
#define DT_N_S_vref_COMPAT_MATCHES_st_stm32_vref 1
#define DT_N_S_vref_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_vref_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_vref_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_vref_COMPAT_MODEL_IDX_0 "stm32-vref"
#define DT_N_S_vref_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_vref_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_vref_P_vrefint_cal_addr 150992912
#define DT_N_S_vref_P_vrefint_cal_addr_EXISTS 1
#define DT_N_S_vref_P_vrefint_cal_mv 3300
#define DT_N_S_vref_P_vrefint_cal_mv_EXISTS 1
#define DT_N_S_vref_P_status "okay"
#define DT_N_S_vref_P_status_STRING_UNQUOTED okay
#define DT_N_S_vref_P_status_STRING_TOKEN okay
#define DT_N_S_vref_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_vref_P_status_IDX_0 "okay"
#define DT_N_S_vref_P_status_IDX_0_EXISTS 1
#define DT_N_S_vref_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_vref_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_vref_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vref, status, 0)
#define DT_N_S_vref_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vref, status, 0)
#define DT_N_S_vref_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vref, status, 0, __VA_ARGS__)
#define DT_N_S_vref_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vref, status, 0, __VA_ARGS__)
#define DT_N_S_vref_P_status_LEN 1
#define DT_N_S_vref_P_status_EXISTS 1
#define DT_N_S_vref_P_compatible {"st,stm32-vref"}
#define DT_N_S_vref_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_vref_P_compatible_IDX_0 "st,stm32-vref"
#define DT_N_S_vref_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-vref
#define DT_N_S_vref_P_compatible_IDX_0_STRING_TOKEN st_stm32_vref
#define DT_N_S_vref_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_VREF
#define DT_N_S_vref_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vref, compatible, 0)
#define DT_N_S_vref_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vref, compatible, 0)
#define DT_N_S_vref_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vref, compatible, 0, __VA_ARGS__)
#define DT_N_S_vref_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vref, compatible, 0, __VA_ARGS__)
#define DT_N_S_vref_P_compatible_LEN 1
#define DT_N_S_vref_P_compatible_EXISTS 1
#define DT_N_S_vref_P_io_channels_IDX_0_EXISTS 1
#define DT_N_S_vref_P_io_channels_IDX_0_PH DT_N_S_soc_S_adc_42028000
#define DT_N_S_vref_P_io_channels_IDX_0_VAL_input 17
#define DT_N_S_vref_P_io_channels_IDX_0_VAL_input_EXISTS 1
#define DT_N_S_vref_P_io_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vref, io_channels, 0)
#define DT_N_S_vref_P_io_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vref, io_channels, 0)
#define DT_N_S_vref_P_io_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vref, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vref_P_io_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vref, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vref_P_io_channels_LEN 1
#define DT_N_S_vref_P_io_channels_EXISTS 1
#define DT_N_S_vref_P_zephyr_deferred_init 0
#define DT_N_S_vref_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_vref_P_wakeup_source 0
#define DT_N_S_vref_P_wakeup_source_EXISTS 1
#define DT_N_S_vref_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_vref_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/clk-csi
 *
 * Node identifier: DT_N_S_clocks_S_clk_csi
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_csi_PATH "/clocks/clk-csi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_csi_FULL_NAME "clk-csi"
#define DT_N_S_clocks_S_clk_csi_FULL_NAME_UNQUOTED clk-csi
#define DT_N_S_clocks_S_clk_csi_FULL_NAME_TOKEN clk_csi
#define DT_N_S_clocks_S_clk_csi_FULL_NAME_UPPER_TOKEN CLK_CSI

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_csi_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_csi_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_csi_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_csi_FOREACH_NODELABEL(fn) fn(clk_csi)
#define DT_N_S_clocks_S_clk_csi_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_csi, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_csi_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_csi_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_csi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_csi_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_csi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_csi_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_csi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_csi_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_csi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_csi_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_csi_ORD 28
#define DT_N_S_clocks_S_clk_csi_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_csi_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_csi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_csi_EXISTS 1
#define DT_N_INST_2_fixed_clock DT_N_S_clocks_S_clk_csi
#define DT_N_NODELABEL_clk_csi  DT_N_S_clocks_S_clk_csi

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_csi_REG_NUM 0
#define DT_N_S_clocks_S_clk_csi_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_csi_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_csi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_csi_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_csi_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_csi_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_csi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_csi_P_clock_frequency 4000000
#define DT_N_S_clocks_S_clk_csi_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_clk_csi_P_status "disabled"
#define DT_N_S_clocks_S_clk_csi_P_status_STRING_UNQUOTED disabled
#define DT_N_S_clocks_S_clk_csi_P_status_STRING_TOKEN disabled
#define DT_N_S_clocks_S_clk_csi_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_clk_csi_P_status_IDX_0 "disabled"
#define DT_N_S_clocks_S_clk_csi_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_csi_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_clocks_S_clk_csi_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_clocks_S_clk_csi_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_csi, status, 0)
#define DT_N_S_clocks_S_clk_csi_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_csi, status, 0)
#define DT_N_S_clocks_S_clk_csi_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_csi, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_csi_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_csi, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_csi_P_status_LEN 1
#define DT_N_S_clocks_S_clk_csi_P_status_EXISTS 1
#define DT_N_S_clocks_S_clk_csi_P_compatible {"fixed-clock"}
#define DT_N_S_clocks_S_clk_csi_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_csi_P_compatible_IDX_0 "fixed-clock"
#define DT_N_S_clocks_S_clk_csi_P_compatible_IDX_0_STRING_UNQUOTED fixed-clock
#define DT_N_S_clocks_S_clk_csi_P_compatible_IDX_0_STRING_TOKEN fixed_clock
#define DT_N_S_clocks_S_clk_csi_P_compatible_IDX_0_STRING_UPPER_TOKEN FIXED_CLOCK
#define DT_N_S_clocks_S_clk_csi_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_csi, compatible, 0)
#define DT_N_S_clocks_S_clk_csi_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_csi, compatible, 0)
#define DT_N_S_clocks_S_clk_csi_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_csi, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_csi_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_csi, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_csi_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_csi_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_csi_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_csi_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_csi_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_csi_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_csi_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_csi_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/clk-hsi
 *
 * Node identifier: DT_N_S_clocks_S_clk_hsi
 *
 * Binding (compatible = st,stm32h7-hsi-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\st,stm32h7-hsi-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hsi_PATH "/clocks/clk-hsi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hsi_FULL_NAME "clk-hsi"
#define DT_N_S_clocks_S_clk_hsi_FULL_NAME_UNQUOTED clk-hsi
#define DT_N_S_clocks_S_clk_hsi_FULL_NAME_TOKEN clk_hsi
#define DT_N_S_clocks_S_clk_hsi_FULL_NAME_UPPER_TOKEN CLK_HSI

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hsi_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_hsi_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_hsi_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_hsi_FOREACH_NODELABEL(fn) fn(clk_hsi)
#define DT_N_S_clocks_S_clk_hsi_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_hsi, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_hsi_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_hsi_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hsi_ORD 29
#define DT_N_S_clocks_S_clk_hsi_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hsi_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hsi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hsi_EXISTS 1
#define DT_N_INST_0_st_stm32h7_hsi_clock DT_N_S_clocks_S_clk_hsi
#define DT_N_NODELABEL_clk_hsi           DT_N_S_clocks_S_clk_hsi

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hsi_REG_NUM 0
#define DT_N_S_clocks_S_clk_hsi_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_hsi_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_hsi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hsi_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_hsi_COMPAT_MATCHES_st_stm32h7_hsi_clock 1
#define DT_N_S_clocks_S_clk_hsi_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_clk_hsi_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_COMPAT_MODEL_IDX_0 "stm32h7-hsi-clock"
#define DT_N_S_clocks_S_clk_hsi_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hsi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hsi_P_hsi_div 1
#define DT_N_S_clocks_S_clk_hsi_P_hsi_div_IDX_0_ENUM_IDX 0
#define DT_N_S_clocks_S_clk_hsi_P_hsi_div_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_P_hsi_div_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_P_hsi_div_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_P_clock_frequency 64000000
#define DT_N_S_clocks_S_clk_hsi_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_P_status "disabled"
#define DT_N_S_clocks_S_clk_hsi_P_status_STRING_UNQUOTED disabled
#define DT_N_S_clocks_S_clk_hsi_P_status_STRING_TOKEN disabled
#define DT_N_S_clocks_S_clk_hsi_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_clk_hsi_P_status_IDX_0 "disabled"
#define DT_N_S_clocks_S_clk_hsi_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_clocks_S_clk_hsi_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_hsi, status, 0)
#define DT_N_S_clocks_S_clk_hsi_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hsi, status, 0)
#define DT_N_S_clocks_S_clk_hsi_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hsi, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hsi_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hsi, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hsi_P_status_LEN 1
#define DT_N_S_clocks_S_clk_hsi_P_status_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_P_compatible {"st,stm32h7-hsi-clock"}
#define DT_N_S_clocks_S_clk_hsi_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_P_compatible_IDX_0 "st,stm32h7-hsi-clock"
#define DT_N_S_clocks_S_clk_hsi_P_compatible_IDX_0_STRING_UNQUOTED st,stm32h7-hsi-clock
#define DT_N_S_clocks_S_clk_hsi_P_compatible_IDX_0_STRING_TOKEN st_stm32h7_hsi_clock
#define DT_N_S_clocks_S_clk_hsi_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32H7_HSI_CLOCK
#define DT_N_S_clocks_S_clk_hsi_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_hsi, compatible, 0)
#define DT_N_S_clocks_S_clk_hsi_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hsi, compatible, 0)
#define DT_N_S_clocks_S_clk_hsi_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hsi, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hsi_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hsi, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hsi_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_hsi_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_hsi_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_hsi_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_hsi_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/clk-hsi48
 *
 * Node identifier: DT_N_S_clocks_S_clk_hsi48
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hsi48_PATH "/clocks/clk-hsi48"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hsi48_FULL_NAME "clk-hsi48"
#define DT_N_S_clocks_S_clk_hsi48_FULL_NAME_UNQUOTED clk-hsi48
#define DT_N_S_clocks_S_clk_hsi48_FULL_NAME_TOKEN clk_hsi48
#define DT_N_S_clocks_S_clk_hsi48_FULL_NAME_UPPER_TOKEN CLK_HSI48

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hsi48_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_hsi48_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_hsi48_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_hsi48_FOREACH_NODELABEL(fn) fn(clk_hsi48)
#define DT_N_S_clocks_S_clk_hsi48_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_hsi48, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_hsi48_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_hsi48_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_hsi48_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hsi48_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hsi48_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hsi48_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_hsi48_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hsi48_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hsi48_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hsi48_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hsi48_ORD 30
#define DT_N_S_clocks_S_clk_hsi48_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hsi48_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hsi48_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hsi48_EXISTS 1
#define DT_N_INST_1_fixed_clock  DT_N_S_clocks_S_clk_hsi48
#define DT_N_NODELABEL_clk_hsi48 DT_N_S_clocks_S_clk_hsi48

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hsi48_REG_NUM 0
#define DT_N_S_clocks_S_clk_hsi48_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_hsi48_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_hsi48_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hsi48_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_hsi48_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_hsi48_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hsi48_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hsi48_P_clock_frequency 48000000
#define DT_N_S_clocks_S_clk_hsi48_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi48_P_status "disabled"
#define DT_N_S_clocks_S_clk_hsi48_P_status_STRING_UNQUOTED disabled
#define DT_N_S_clocks_S_clk_hsi48_P_status_STRING_TOKEN disabled
#define DT_N_S_clocks_S_clk_hsi48_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_clk_hsi48_P_status_IDX_0 "disabled"
#define DT_N_S_clocks_S_clk_hsi48_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi48_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_clocks_S_clk_hsi48_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi48_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_hsi48, status, 0)
#define DT_N_S_clocks_S_clk_hsi48_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hsi48, status, 0)
#define DT_N_S_clocks_S_clk_hsi48_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hsi48, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hsi48_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hsi48, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hsi48_P_status_LEN 1
#define DT_N_S_clocks_S_clk_hsi48_P_status_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi48_P_compatible {"fixed-clock"}
#define DT_N_S_clocks_S_clk_hsi48_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi48_P_compatible_IDX_0 "fixed-clock"
#define DT_N_S_clocks_S_clk_hsi48_P_compatible_IDX_0_STRING_UNQUOTED fixed-clock
#define DT_N_S_clocks_S_clk_hsi48_P_compatible_IDX_0_STRING_TOKEN fixed_clock
#define DT_N_S_clocks_S_clk_hsi48_P_compatible_IDX_0_STRING_UPPER_TOKEN FIXED_CLOCK
#define DT_N_S_clocks_S_clk_hsi48_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_hsi48, compatible, 0)
#define DT_N_S_clocks_S_clk_hsi48_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hsi48, compatible, 0)
#define DT_N_S_clocks_S_clk_hsi48_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hsi48, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hsi48_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hsi48, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hsi48_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_hsi48_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi48_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_hsi48_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi48_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_hsi48_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_hsi48_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_hsi48_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/clk-lse
 *
 * Node identifier: DT_N_S_clocks_S_clk_lse
 *
 * Binding (compatible = st,stm32-lse-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\st,stm32-lse-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_lse_PATH "/clocks/clk-lse"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_lse_FULL_NAME "clk-lse"
#define DT_N_S_clocks_S_clk_lse_FULL_NAME_UNQUOTED clk-lse
#define DT_N_S_clocks_S_clk_lse_FULL_NAME_TOKEN clk_lse
#define DT_N_S_clocks_S_clk_lse_FULL_NAME_UPPER_TOKEN CLK_LSE

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_lse_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_lse_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_lse_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_lse_FOREACH_NODELABEL(fn) fn(clk_lse)
#define DT_N_S_clocks_S_clk_lse_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_lse, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_lse_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_lse_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_lse_ORD 31
#define DT_N_S_clocks_S_clk_lse_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_lse_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_lse_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_lse_EXISTS 1
#define DT_N_INST_0_st_stm32_lse_clock DT_N_S_clocks_S_clk_lse
#define DT_N_NODELABEL_clk_lse         DT_N_S_clocks_S_clk_lse

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_lse_REG_NUM 0
#define DT_N_S_clocks_S_clk_lse_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_lse_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_lse_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_lse_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_lse_COMPAT_MATCHES_st_stm32_lse_clock 1
#define DT_N_S_clocks_S_clk_lse_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_clk_lse_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_COMPAT_MODEL_IDX_0 "stm32-lse-clock"
#define DT_N_S_clocks_S_clk_lse_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_lse_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_lse_P_driving_capability 2
#define DT_N_S_clocks_S_clk_lse_P_driving_capability_IDX_0_ENUM_IDX 2
#define DT_N_S_clocks_S_clk_lse_P_driving_capability_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_driving_capability_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_driving_capability_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_lse_bypass 0
#define DT_N_S_clocks_S_clk_lse_P_lse_bypass_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_clock_frequency 32768
#define DT_N_S_clocks_S_clk_lse_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_status "disabled"
#define DT_N_S_clocks_S_clk_lse_P_status_STRING_UNQUOTED disabled
#define DT_N_S_clocks_S_clk_lse_P_status_STRING_TOKEN disabled
#define DT_N_S_clocks_S_clk_lse_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_clk_lse_P_status_IDX_0 "disabled"
#define DT_N_S_clocks_S_clk_lse_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_clocks_S_clk_lse_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_lse, status, 0)
#define DT_N_S_clocks_S_clk_lse_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_lse, status, 0)
#define DT_N_S_clocks_S_clk_lse_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_lse, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_lse_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_lse, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_lse_P_status_LEN 1
#define DT_N_S_clocks_S_clk_lse_P_status_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_compatible {"st,stm32-lse-clock"}
#define DT_N_S_clocks_S_clk_lse_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_compatible_IDX_0 "st,stm32-lse-clock"
#define DT_N_S_clocks_S_clk_lse_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-lse-clock
#define DT_N_S_clocks_S_clk_lse_P_compatible_IDX_0_STRING_TOKEN st_stm32_lse_clock
#define DT_N_S_clocks_S_clk_lse_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_LSE_CLOCK
#define DT_N_S_clocks_S_clk_lse_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_lse, compatible, 0)
#define DT_N_S_clocks_S_clk_lse_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_lse, compatible, 0)
#define DT_N_S_clocks_S_clk_lse_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_lse, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_lse_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_lse, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_lse_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_lse_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_lse_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_lse_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_lse_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/clk-lsi
 *
 * Node identifier: DT_N_S_clocks_S_clk_lsi
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_lsi_PATH "/clocks/clk-lsi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_lsi_FULL_NAME "clk-lsi"
#define DT_N_S_clocks_S_clk_lsi_FULL_NAME_UNQUOTED clk-lsi
#define DT_N_S_clocks_S_clk_lsi_FULL_NAME_TOKEN clk_lsi
#define DT_N_S_clocks_S_clk_lsi_FULL_NAME_UPPER_TOKEN CLK_LSI

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_lsi_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_lsi_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_lsi_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_lsi_FOREACH_NODELABEL(fn) fn(clk_lsi)
#define DT_N_S_clocks_S_clk_lsi_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_lsi, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_lsi_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_lsi_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_lsi_ORD 32
#define DT_N_S_clocks_S_clk_lsi_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_lsi_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_lsi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_lsi_EXISTS 1
#define DT_N_INST_0_fixed_clock DT_N_S_clocks_S_clk_lsi
#define DT_N_NODELABEL_clk_lsi  DT_N_S_clocks_S_clk_lsi

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_lsi_REG_NUM 0
#define DT_N_S_clocks_S_clk_lsi_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_lsi_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_lsi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_lsi_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_lsi_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_lsi_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_lsi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_lsi_P_clock_frequency 32000
#define DT_N_S_clocks_S_clk_lsi_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_clk_lsi_P_status "okay"
#define DT_N_S_clocks_S_clk_lsi_P_status_STRING_UNQUOTED okay
#define DT_N_S_clocks_S_clk_lsi_P_status_STRING_TOKEN okay
#define DT_N_S_clocks_S_clk_lsi_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_clk_lsi_P_status_IDX_0 "okay"
#define DT_N_S_clocks_S_clk_lsi_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_lsi_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_clocks_S_clk_lsi_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_clocks_S_clk_lsi_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_lsi, status, 0)
#define DT_N_S_clocks_S_clk_lsi_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_lsi, status, 0)
#define DT_N_S_clocks_S_clk_lsi_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_lsi, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_lsi_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_lsi, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_lsi_P_status_LEN 1
#define DT_N_S_clocks_S_clk_lsi_P_status_EXISTS 1
#define DT_N_S_clocks_S_clk_lsi_P_compatible {"fixed-clock"}
#define DT_N_S_clocks_S_clk_lsi_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_lsi_P_compatible_IDX_0 "fixed-clock"
#define DT_N_S_clocks_S_clk_lsi_P_compatible_IDX_0_STRING_UNQUOTED fixed-clock
#define DT_N_S_clocks_S_clk_lsi_P_compatible_IDX_0_STRING_TOKEN fixed_clock
#define DT_N_S_clocks_S_clk_lsi_P_compatible_IDX_0_STRING_UPPER_TOKEN FIXED_CLOCK
#define DT_N_S_clocks_S_clk_lsi_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_lsi, compatible, 0)
#define DT_N_S_clocks_S_clk_lsi_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_lsi, compatible, 0)
#define DT_N_S_clocks_S_clk_lsi_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_lsi, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_lsi_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_lsi, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_lsi_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_lsi_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_lsi_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_lsi_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_lsi_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_lsi_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_lsi_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_lsi_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/pll2
 *
 * Node identifier: DT_N_S_clocks_S_pll2
 *
 * Binding (compatible = st,stm32u5-pll-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\st,stm32u5-pll-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_pll2_PATH "/clocks/pll2"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_pll2_FULL_NAME "pll2"
#define DT_N_S_clocks_S_pll2_FULL_NAME_UNQUOTED pll2
#define DT_N_S_clocks_S_pll2_FULL_NAME_TOKEN pll2
#define DT_N_S_clocks_S_pll2_FULL_NAME_UPPER_TOKEN PLL2

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_pll2_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_pll2_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_pll2_NODELABEL_NUM 1
#define DT_N_S_clocks_S_pll2_FOREACH_NODELABEL(fn) fn(pll2)
#define DT_N_S_clocks_S_pll2_FOREACH_NODELABEL_VARGS(fn, ...) fn(pll2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_pll2_CHILD_NUM 0
#define DT_N_S_clocks_S_pll2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_pll2_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_pll2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_pll2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_pll2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_pll2_ORD 33
#define DT_N_S_clocks_S_pll2_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_pll2_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_pll2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_pll2_EXISTS 1
#define DT_N_INST_1_st_stm32u5_pll_clock DT_N_S_clocks_S_pll2
#define DT_N_NODELABEL_pll2              DT_N_S_clocks_S_pll2

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_pll2_REG_NUM 0
#define DT_N_S_clocks_S_pll2_RANGES_NUM 0
#define DT_N_S_clocks_S_pll2_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_pll2_IRQ_NUM 0
#define DT_N_S_clocks_S_pll2_IRQ_LEVEL 0
#define DT_N_S_clocks_S_pll2_COMPAT_MATCHES_st_stm32u5_pll_clock 1
#define DT_N_S_clocks_S_pll2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll2_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_pll2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll2_COMPAT_MODEL_IDX_0 "stm32u5-pll-clock"
#define DT_N_S_clocks_S_pll2_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_pll2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_pll2_P_status "disabled"
#define DT_N_S_clocks_S_pll2_P_status_STRING_UNQUOTED disabled
#define DT_N_S_clocks_S_pll2_P_status_STRING_TOKEN disabled
#define DT_N_S_clocks_S_pll2_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_pll2_P_status_IDX_0 "disabled"
#define DT_N_S_clocks_S_pll2_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll2_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_clocks_S_pll2_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_clocks_S_pll2_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll2, status, 0)
#define DT_N_S_clocks_S_pll2_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll2, status, 0)
#define DT_N_S_clocks_S_pll2_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll2, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll2_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll2, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll2_P_status_LEN 1
#define DT_N_S_clocks_S_pll2_P_status_EXISTS 1
#define DT_N_S_clocks_S_pll2_P_compatible {"st,stm32u5-pll-clock"}
#define DT_N_S_clocks_S_pll2_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll2_P_compatible_IDX_0 "st,stm32u5-pll-clock"
#define DT_N_S_clocks_S_pll2_P_compatible_IDX_0_STRING_UNQUOTED st,stm32u5-pll-clock
#define DT_N_S_clocks_S_pll2_P_compatible_IDX_0_STRING_TOKEN st_stm32u5_pll_clock
#define DT_N_S_clocks_S_pll2_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32U5_PLL_CLOCK
#define DT_N_S_clocks_S_pll2_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll2, compatible, 0)
#define DT_N_S_clocks_S_pll2_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll2, compatible, 0)
#define DT_N_S_clocks_S_pll2_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll2, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll2_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll2, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll2_P_compatible_LEN 1
#define DT_N_S_clocks_S_pll2_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_pll2_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_pll2_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_pll2_P_wakeup_source 0
#define DT_N_S_clocks_S_pll2_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_pll2_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_pll2_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/pll3
 *
 * Node identifier: DT_N_S_clocks_S_pll3
 *
 * Binding (compatible = st,stm32u5-pll-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\st,stm32u5-pll-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_pll3_PATH "/clocks/pll3"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_pll3_FULL_NAME "pll3"
#define DT_N_S_clocks_S_pll3_FULL_NAME_UNQUOTED pll3
#define DT_N_S_clocks_S_pll3_FULL_NAME_TOKEN pll3
#define DT_N_S_clocks_S_pll3_FULL_NAME_UPPER_TOKEN PLL3

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_pll3_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_pll3_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_pll3_NODELABEL_NUM 1
#define DT_N_S_clocks_S_pll3_FOREACH_NODELABEL(fn) fn(pll3)
#define DT_N_S_clocks_S_pll3_FOREACH_NODELABEL_VARGS(fn, ...) fn(pll3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_pll3_CHILD_NUM 0
#define DT_N_S_clocks_S_pll3_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_pll3_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_pll3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_pll3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_pll3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_pll3_ORD 34
#define DT_N_S_clocks_S_pll3_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_pll3_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_pll3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_pll3_EXISTS 1
#define DT_N_INST_2_st_stm32u5_pll_clock DT_N_S_clocks_S_pll3
#define DT_N_NODELABEL_pll3              DT_N_S_clocks_S_pll3

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_pll3_REG_NUM 0
#define DT_N_S_clocks_S_pll3_RANGES_NUM 0
#define DT_N_S_clocks_S_pll3_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_pll3_IRQ_NUM 0
#define DT_N_S_clocks_S_pll3_IRQ_LEVEL 0
#define DT_N_S_clocks_S_pll3_COMPAT_MATCHES_st_stm32u5_pll_clock 1
#define DT_N_S_clocks_S_pll3_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll3_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_pll3_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll3_COMPAT_MODEL_IDX_0 "stm32u5-pll-clock"
#define DT_N_S_clocks_S_pll3_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_pll3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_pll3_P_status "disabled"
#define DT_N_S_clocks_S_pll3_P_status_STRING_UNQUOTED disabled
#define DT_N_S_clocks_S_pll3_P_status_STRING_TOKEN disabled
#define DT_N_S_clocks_S_pll3_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_pll3_P_status_IDX_0 "disabled"
#define DT_N_S_clocks_S_pll3_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll3_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_clocks_S_pll3_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_clocks_S_pll3_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll3, status, 0)
#define DT_N_S_clocks_S_pll3_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll3, status, 0)
#define DT_N_S_clocks_S_pll3_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll3, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll3_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll3, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll3_P_status_LEN 1
#define DT_N_S_clocks_S_pll3_P_status_EXISTS 1
#define DT_N_S_clocks_S_pll3_P_compatible {"st,stm32u5-pll-clock"}
#define DT_N_S_clocks_S_pll3_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll3_P_compatible_IDX_0 "st,stm32u5-pll-clock"
#define DT_N_S_clocks_S_pll3_P_compatible_IDX_0_STRING_UNQUOTED st,stm32u5-pll-clock
#define DT_N_S_clocks_S_pll3_P_compatible_IDX_0_STRING_TOKEN st_stm32u5_pll_clock
#define DT_N_S_clocks_S_pll3_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32U5_PLL_CLOCK
#define DT_N_S_clocks_S_pll3_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll3, compatible, 0)
#define DT_N_S_clocks_S_pll3_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll3, compatible, 0)
#define DT_N_S_clocks_S_pll3_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll3, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll3_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll3, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll3_P_compatible_LEN 1
#define DT_N_S_clocks_S_pll3_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_pll3_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_pll3_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_pll3_P_wakeup_source 0
#define DT_N_S_clocks_S_pll3_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_pll3_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_pll3_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"
#define DT_N_S_cpus_FULL_NAME_UNQUOTED cpus
#define DT_N_S_cpus_FULL_NAME_TOKEN cpus
#define DT_N_S_cpus_FULL_NAME_UPPER_TOKEN CPUS

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_NODELABEL_NUM 0
#define DT_N_S_cpus_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_CHILD_NUM 1
#define DT_N_S_cpus_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 35
#define DT_N_S_cpus_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	38, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_IRQ_LEVEL 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/power-states
 *
 * Node identifier: DT_N_S_soc_S_power_states
 */

/* Node's full path: */
#define DT_N_S_soc_S_power_states_PATH "/soc/power-states"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_power_states_FULL_NAME "power-states"
#define DT_N_S_soc_S_power_states_FULL_NAME_UNQUOTED power-states
#define DT_N_S_soc_S_power_states_FULL_NAME_TOKEN power_states
#define DT_N_S_soc_S_power_states_FULL_NAME_UPPER_TOKEN POWER_STATES

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_power_states_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_power_states_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_power_states_NODELABEL_NUM 0
#define DT_N_S_soc_S_power_states_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_power_states_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_power_states_CHILD_NUM 1
#define DT_N_S_soc_S_power_states_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_power_states_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_power_states_S_state0)
#define DT_N_S_soc_S_power_states_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_power_states_S_state0)
#define DT_N_S_soc_S_power_states_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_power_states_S_state0, __VA_ARGS__)
#define DT_N_S_soc_S_power_states_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_states_S_state0, __VA_ARGS__)
#define DT_N_S_soc_S_power_states_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_power_states_S_state0)
#define DT_N_S_soc_S_power_states_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_power_states_S_state0)
#define DT_N_S_soc_S_power_states_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_power_states_S_state0, __VA_ARGS__)
#define DT_N_S_soc_S_power_states_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_states_S_state0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_power_states_ORD 36
#define DT_N_S_soc_S_power_states_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_power_states_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_power_states_SUPPORTS_ORDS \
	37, /* /soc/power-states/state0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_power_states_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_power_states_REG_NUM 0
#define DT_N_S_soc_S_power_states_RANGES_NUM 0
#define DT_N_S_soc_S_power_states_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_power_states_IRQ_NUM 0
#define DT_N_S_soc_S_power_states_IRQ_LEVEL 0
#define DT_N_S_soc_S_power_states_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_power_states_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/power-states/state0
 *
 * Node identifier: DT_N_S_soc_S_power_states_S_state0
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE\dts\bindings\power\zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_power_states_S_state0_PATH "/soc/power-states/state0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_power_states_S_state0_FULL_NAME "state0"
#define DT_N_S_soc_S_power_states_S_state0_FULL_NAME_UNQUOTED state0
#define DT_N_S_soc_S_power_states_S_state0_FULL_NAME_TOKEN state0
#define DT_N_S_soc_S_power_states_S_state0_FULL_NAME_UPPER_TOKEN STATE0

/* Node parent (/soc/power-states) identifier: */
#define DT_N_S_soc_S_power_states_S_state0_PARENT DT_N_S_soc_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_power_states_S_state0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_power_states_S_state0_NODELABEL_NUM 1
#define DT_N_S_soc_S_power_states_S_state0_FOREACH_NODELABEL(fn) fn(stop)
#define DT_N_S_soc_S_power_states_S_state0_FOREACH_NODELABEL_VARGS(fn, ...) fn(stop, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_power_states_S_state0_CHILD_NUM 0
#define DT_N_S_soc_S_power_states_S_state0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_power_states_S_state0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_power_states_S_state0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_power_states_S_state0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_power_states_S_state0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_power_states_S_state0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_power_states_S_state0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_power_states_S_state0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_power_states_S_state0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_power_states_S_state0_ORD 37
#define DT_N_S_soc_S_power_states_S_state0_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_power_states_S_state0_REQUIRES_ORDS \
	36, /* /soc/power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_power_states_S_state0_SUPPORTS_ORDS \
	38, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_power_states_S_state0_EXISTS 1
#define DT_N_INST_0_zephyr_power_state DT_N_S_soc_S_power_states_S_state0
#define DT_N_NODELABEL_stop            DT_N_S_soc_S_power_states_S_state0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_power_states_S_state0_REG_NUM 0
#define DT_N_S_soc_S_power_states_S_state0_RANGES_NUM 0
#define DT_N_S_soc_S_power_states_S_state0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_power_states_S_state0_IRQ_NUM 0
#define DT_N_S_soc_S_power_states_S_state0_IRQ_LEVEL 0
#define DT_N_S_soc_S_power_states_S_state0_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_soc_S_power_states_S_state0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_states_S_state0_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_power_states_S_state0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_states_S_state0_COMPAT_MODEL_IDX_0 "power-state"
#define DT_N_S_soc_S_power_states_S_state0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_power_states_S_state0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_power_states_S_state0_P_power_state_name "suspend-to-idle"
#define DT_N_S_soc_S_power_states_S_state0_P_power_state_name_STRING_UNQUOTED suspend-to-idle
#define DT_N_S_soc_S_power_states_S_state0_P_power_state_name_STRING_TOKEN suspend_to_idle
#define DT_N_S_soc_S_power_states_S_state0_P_power_state_name_STRING_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_soc_S_power_states_S_state0_P_power_state_name_IDX_0 "suspend-to-idle"
#define DT_N_S_soc_S_power_states_S_state0_P_power_state_name_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_states_S_state0_P_power_state_name_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_power_states_S_state0_P_power_state_name_IDX_0_ENUM_VAL_suspend_to_idle_EXISTS 1
#define DT_N_S_soc_S_power_states_S_state0_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_states_S_state0, power_state_name, 0)
#define DT_N_S_soc_S_power_states_S_state0_P_power_state_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_states_S_state0, power_state_name, 0)
#define DT_N_S_soc_S_power_states_S_state0_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_states_S_state0, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_states_S_state0_P_power_state_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_states_S_state0, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_states_S_state0_P_power_state_name_LEN 1
#define DT_N_S_soc_S_power_states_S_state0_P_power_state_name_EXISTS 1
#define DT_N_S_soc_S_power_states_S_state0_P_substate_id 1
#define DT_N_S_soc_S_power_states_S_state0_P_substate_id_EXISTS 1
#define DT_N_S_soc_S_power_states_S_state0_P_min_residency_us 20
#define DT_N_S_soc_S_power_states_S_state0_P_min_residency_us_EXISTS 1
#define DT_N_S_soc_S_power_states_S_state0_P_zephyr_pm_device_disabled 0
#define DT_N_S_soc_S_power_states_S_state0_P_zephyr_pm_device_disabled_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m33):
 *   $ZEPHYR_BASE\dts\bindings\cpu\arm,cortex-m33.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UNQUOTED cpu@0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_TOKEN cpu_0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UPPER_TOKEN CPU_0

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_0_NODELABEL_NUM 1
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL(fn) fn(cpu0)
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(cpu0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM 1
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 38
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	35, /* /cpus */ \
	37, /* /soc/power-states/state0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS \
	39, /* /cpus/cpu@0/mpu@e000ed90 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m33 DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0        DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m33 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-m33"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0 DT_N_S_soc_S_power_states_S_state0
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_PH DT_N_S_soc_S_power_states_S_state0
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m33"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m33"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m33
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m33
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M33
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0/mpu@e000ed90
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90
 *
 * Binding (compatible = arm,armv8m-mpu):
 *   $ZEPHYR_BASE\dts\bindings\mmu_mpu\arm,armv8m-mpu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_PATH "/cpus/cpu@0/mpu@e000ed90"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FULL_NAME "mpu@e000ed90"
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FULL_NAME_UNQUOTED mpu@e000ed90
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FULL_NAME_TOKEN mpu_e000ed90
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FULL_NAME_UPPER_TOKEN MPU_E000ED90

/* Node parent (/cpus/cpu@0) identifier: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_PARENT DT_N_S_cpus_S_cpu_0

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_NODELABEL_NUM 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_NODELABEL(fn) fn(mpu)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_NODELABEL_VARGS(fn, ...) fn(mpu, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_ORD 39
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REQUIRES_ORDS \
	38, /* /cpus/cpu@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_EXISTS 1
#define DT_N_INST_0_arm_armv8m_mpu DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90
#define DT_N_NODELABEL_mpu         DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_IDX_0_VAL_ADDRESS 3758157200 /* 0xe000ed90 */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_MATCHES_arm_armv8m_mpu 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_MODEL_IDX_0 "armv8m-mpu"
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg {3758157200 /* 0xe000ed90 */, 64 /* 0x40 */}
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_0 3758157200
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_1 64
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible {"arm,armv8m-mpu"}
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0 "arm,armv8m-mpu"
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0_STRING_UNQUOTED arm,armv8m-mpu
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0_STRING_TOKEN arm_armv8m_mpu
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV8M_MPU
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/gpio@42020800
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_PATH "/soc/pin-controller@42020000/gpio@42020800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FULL_NAME "gpio@42020800"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FULL_NAME_UNQUOTED gpio@42020800
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FULL_NAME_TOKEN gpio_42020800
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FULL_NAME_UPPER_TOKEN GPIO_42020800

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FOREACH_NODELABEL(fn) fn(gpioc)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpioc, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_ORD 40
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_REQUIRES_ORDS \
	9, /* /soc/rcc@44020c00 */ \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_SUPPORTS_ORDS \
	41, /* /gpio_keys */ \
	42, /* /gpio_keys/button */ \
	45, /* /leds */ \
	46, /* /leds/led_1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_EXISTS 1
#define DT_N_INST_2_st_stm32_gpio DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800
#define DT_N_NODELABEL_gpioc      DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_REG_IDX_0_VAL_ADDRESS 1107429376 /* 0x42020800 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_reg {1107429376 /* 0x42020800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_reg_IDX_0 1107429376
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_clocks_IDX_0_VAL_bits 4
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /gpio_keys
 *
 * Node identifier: DT_N_S_gpio_keys
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE\dts\bindings\input\gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_PATH "/gpio_keys"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_FULL_NAME "gpio_keys"
#define DT_N_S_gpio_keys_FULL_NAME_UNQUOTED gpio_keys
#define DT_N_S_gpio_keys_FULL_NAME_TOKEN gpio_keys
#define DT_N_S_gpio_keys_FULL_NAME_UPPER_TOKEN GPIO_KEYS

/* Node parent (/) identifier: */
#define DT_N_S_gpio_keys_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_gpio_keys_NODELABEL_NUM 0
#define DT_N_S_gpio_keys_FOREACH_NODELABEL(fn) 
#define DT_N_S_gpio_keys_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_CHILD_NUM 1
#define DT_N_S_gpio_keys_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_gpio_keys_FOREACH_CHILD(fn) fn(DT_N_S_gpio_keys_S_button)
#define DT_N_S_gpio_keys_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button)
#define DT_N_S_gpio_keys_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_gpio_keys_S_button)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_ORD 41
#define DT_N_S_gpio_keys_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_REQUIRES_ORDS \
	0, /* / */ \
	40, /* /soc/pin-controller@42020000/gpio@42020800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_SUPPORTS_ORDS \
	42, /* /gpio_keys/button */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_EXISTS 1
#define DT_N_INST_0_gpio_keys DT_N_S_gpio_keys

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_REG_NUM 0
#define DT_N_S_gpio_keys_RANGES_NUM 0
#define DT_N_S_gpio_keys_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_IRQ_NUM 0
#define DT_N_S_gpio_keys_IRQ_LEVEL 0
#define DT_N_S_gpio_keys_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_gpio_keys_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_P_debounce_interval_ms 30
#define DT_N_S_gpio_keys_P_debounce_interval_ms_EXISTS 1
#define DT_N_S_gpio_keys_P_polling_mode 0
#define DT_N_S_gpio_keys_P_polling_mode_EXISTS 1
#define DT_N_S_gpio_keys_P_no_disconnect 0
#define DT_N_S_gpio_keys_P_no_disconnect_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible {"gpio-keys"}
#define DT_N_S_gpio_keys_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_UNQUOTED gpio-keys
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_TOKEN gpio_keys
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_KEYS
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_LEN 1
#define DT_N_S_gpio_keys_P_compatible_EXISTS 1
#define DT_N_S_gpio_keys_P_zephyr_deferred_init 0
#define DT_N_S_gpio_keys_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_gpio_keys_P_wakeup_source 0
#define DT_N_S_gpio_keys_P_wakeup_source_EXISTS 1
#define DT_N_S_gpio_keys_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_gpio_keys_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button
 *
 * Node identifier: DT_N_S_gpio_keys_S_button
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_PATH "/gpio_keys/button"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_FULL_NAME "button"
#define DT_N_S_gpio_keys_S_button_FULL_NAME_UNQUOTED button
#define DT_N_S_gpio_keys_S_button_FULL_NAME_TOKEN button
#define DT_N_S_gpio_keys_S_button_FULL_NAME_UPPER_TOKEN BUTTON

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_button_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_gpio_keys_S_button_NODELABEL_NUM 1
#define DT_N_S_gpio_keys_S_button_FOREACH_NODELABEL(fn) fn(user_button)
#define DT_N_S_gpio_keys_S_button_FOREACH_NODELABEL_VARGS(fn, ...) fn(user_button, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_S_button_CHILD_NUM 0
#define DT_N_S_gpio_keys_S_button_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_ORD 42
#define DT_N_S_gpio_keys_S_button_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_REQUIRES_ORDS \
	40, /* /soc/pin-controller@42020000/gpio@42020800 */ \
	41, /* /gpio_keys */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_EXISTS 1
#define DT_N_ALIAS_sw0             DT_N_S_gpio_keys_S_button
#define DT_N_NODELABEL_user_button DT_N_S_gpio_keys_S_button

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_button_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_button_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_button_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_IRQ_LEVEL 0
#define DT_N_S_gpio_keys_S_button_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_button_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_pin 13
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button, gpios, 0)
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button, gpios, 0)
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_label "User"
#define DT_N_S_gpio_keys_S_button_P_label_STRING_UNQUOTED User
#define DT_N_S_gpio_keys_S_button_P_label_STRING_TOKEN User
#define DT_N_S_gpio_keys_S_button_P_label_STRING_UPPER_TOKEN USER
#define DT_N_S_gpio_keys_S_button_P_label_IDX_0 "User"
#define DT_N_S_gpio_keys_S_button_P_label_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button, label, 0)
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button, label, 0)
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, label, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button, label, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_P_label_LEN 1
#define DT_N_S_gpio_keys_S_button_P_label_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_zephyr_code 11
#define DT_N_S_gpio_keys_S_button_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/gpio@42021400
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_PATH "/soc/pin-controller@42020000/gpio@42021400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FULL_NAME "gpio@42021400"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FULL_NAME_UNQUOTED gpio@42021400
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FULL_NAME_TOKEN gpio_42021400
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FULL_NAME_UPPER_TOKEN GPIO_42021400

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FOREACH_NODELABEL(fn) fn(gpiof)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpiof, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_ORD 43
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_REQUIRES_ORDS \
	9, /* /soc/rcc@44020c00 */ \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_SUPPORTS_ORDS \
	45, /* /leds */ \
	47, /* /leds/led_2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_EXISTS 1
#define DT_N_INST_6_st_stm32_gpio DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400
#define DT_N_NODELABEL_gpiof      DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_REG_IDX_0_VAL_ADDRESS 1107432448 /* 0x42021400 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_reg {1107432448 /* 0x42021400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_reg_IDX_0 1107432448
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/gpio@42021800
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_PATH "/soc/pin-controller@42020000/gpio@42021800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FULL_NAME "gpio@42021800"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FULL_NAME_UNQUOTED gpio@42021800
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FULL_NAME_TOKEN gpio_42021800
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FULL_NAME_UPPER_TOKEN GPIO_42021800

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FOREACH_NODELABEL(fn) fn(gpiog)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpiog, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_ORD 44
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_REQUIRES_ORDS \
	9, /* /soc/rcc@44020c00 */ \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_SUPPORTS_ORDS \
	45, /* /leds */ \
	48, /* /leds/led_3 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_EXISTS 1
#define DT_N_INST_7_st_stm32_gpio DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800
#define DT_N_NODELABEL_gpiog      DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_REG_IDX_0_VAL_ADDRESS 1107433472 /* 0x42021800 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_reg {1107433472 /* 0x42021800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_reg_IDX_0 1107433472
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_clocks_IDX_0_VAL_bits 64
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE\dts\bindings\led\gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"
#define DT_N_S_leds_FULL_NAME_UNQUOTED leds
#define DT_N_S_leds_FULL_NAME_TOKEN leds
#define DT_N_S_leds_FULL_NAME_UPPER_TOKEN LEDS

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_NODELABEL_NUM 1
#define DT_N_S_leds_FOREACH_NODELABEL(fn) fn(leds)
#define DT_N_S_leds_FOREACH_NODELABEL_VARGS(fn, ...) fn(leds, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_CHILD_NUM 3
#define DT_N_S_leds_CHILD_NUM_STATUS_OKAY 3
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2) fn(DT_N_S_leds_S_led_3)
#define DT_N_S_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_leds_S_led_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_3)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__) fn(DT_N_S_leds_S_led_3, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_3, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2) fn(DT_N_S_leds_S_led_3)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_leds_S_led_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_3)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__) fn(DT_N_S_leds_S_led_3, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_3, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 45
#define DT_N_S_leds_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */ \
	40, /* /soc/pin-controller@42020000/gpio@42020800 */ \
	43, /* /soc/pin-controller@42020000/gpio@42021400 */ \
	44, /* /soc/pin-controller@42020000/gpio@42021800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	46, /* /leds/led_1 */ \
	47, /* /leds/led_2 */ \
	48, /* /leds/led_3 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds
#define DT_N_NODELABEL_leds   DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_IRQ_LEVEL 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /leds/led_1
 *
 * Node identifier: DT_N_S_leds_S_led_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_1_PATH "/leds/led_1"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_1_FULL_NAME "led_1"
#define DT_N_S_leds_S_led_1_FULL_NAME_UNQUOTED led_1
#define DT_N_S_leds_S_led_1_FULL_NAME_TOKEN led_1
#define DT_N_S_leds_S_led_1_FULL_NAME_UPPER_TOKEN LED_1

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_1_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_1_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_1_FOREACH_NODELABEL(fn) fn(green_led_1)
#define DT_N_S_leds_S_led_1_FOREACH_NODELABEL_VARGS(fn, ...) fn(green_led_1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_1_CHILD_NUM 0
#define DT_N_S_leds_S_led_1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_1_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_1_ORD 46
#define DT_N_S_leds_S_led_1_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_1_REQUIRES_ORDS \
	40, /* /soc/pin-controller@42020000/gpio@42020800 */ \
	45, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_1_EXISTS 1
#define DT_N_ALIAS_led0            DT_N_S_leds_S_led_1
#define DT_N_NODELABEL_green_led_1 DT_N_S_leds_S_led_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_1_REG_NUM 0
#define DT_N_S_leds_S_led_1_RANGES_NUM 0
#define DT_N_S_leds_S_led_1_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_1_IRQ_NUM 0
#define DT_N_S_leds_S_led_1_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin 0
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_LEN 1
#define DT_N_S_leds_S_led_1_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label "User LD1"
#define DT_N_S_leds_S_led_1_P_label_STRING_UNQUOTED User LD1
#define DT_N_S_leds_S_led_1_P_label_STRING_TOKEN User_LD1
#define DT_N_S_leds_S_led_1_P_label_STRING_UPPER_TOKEN USER_LD1
#define DT_N_S_leds_S_led_1_P_label_IDX_0 "User LD1"
#define DT_N_S_leds_S_led_1_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, label, 0)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_1, label, 0)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_LEN 1
#define DT_N_S_leds_S_led_1_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_2
 *
 * Node identifier: DT_N_S_leds_S_led_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_2_PATH "/leds/led_2"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_2_FULL_NAME "led_2"
#define DT_N_S_leds_S_led_2_FULL_NAME_UNQUOTED led_2
#define DT_N_S_leds_S_led_2_FULL_NAME_TOKEN led_2
#define DT_N_S_leds_S_led_2_FULL_NAME_UPPER_TOKEN LED_2

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_2_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_2_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_2_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_2_FOREACH_NODELABEL(fn) fn(yellow_led_1)
#define DT_N_S_leds_S_led_2_FOREACH_NODELABEL_VARGS(fn, ...) fn(yellow_led_1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_2_CHILD_NUM 0
#define DT_N_S_leds_S_led_2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_2_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_2_ORD 47
#define DT_N_S_leds_S_led_2_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_2_REQUIRES_ORDS \
	43, /* /soc/pin-controller@42020000/gpio@42021400 */ \
	45, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_2_EXISTS 1
#define DT_N_NODELABEL_yellow_led_1 DT_N_S_leds_S_led_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_2_REG_NUM 0
#define DT_N_S_leds_S_led_2_RANGES_NUM 0
#define DT_N_S_leds_S_led_2_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_2_IRQ_NUM 0
#define DT_N_S_leds_S_led_2_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_pin 4
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_2, gpios, 0)
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_2, gpios, 0)
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_gpios_LEN 1
#define DT_N_S_leds_S_led_2_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_2_P_label "User LD2"
#define DT_N_S_leds_S_led_2_P_label_STRING_UNQUOTED User LD2
#define DT_N_S_leds_S_led_2_P_label_STRING_TOKEN User_LD2
#define DT_N_S_leds_S_led_2_P_label_STRING_UPPER_TOKEN USER_LD2
#define DT_N_S_leds_S_led_2_P_label_IDX_0 "User LD2"
#define DT_N_S_leds_S_led_2_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_2, label, 0)
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_2, label, 0)
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_2, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_2, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_label_LEN 1
#define DT_N_S_leds_S_led_2_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_3
 *
 * Node identifier: DT_N_S_leds_S_led_3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_3_PATH "/leds/led_3"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_3_FULL_NAME "led_3"
#define DT_N_S_leds_S_led_3_FULL_NAME_UNQUOTED led_3
#define DT_N_S_leds_S_led_3_FULL_NAME_TOKEN led_3
#define DT_N_S_leds_S_led_3_FULL_NAME_UPPER_TOKEN LED_3

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_3_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_3_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_3_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_3_FOREACH_NODELABEL(fn) fn(red_led_1)
#define DT_N_S_leds_S_led_3_FOREACH_NODELABEL_VARGS(fn, ...) fn(red_led_1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_3_CHILD_NUM 0
#define DT_N_S_leds_S_led_3_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_3_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_3_ORD 48
#define DT_N_S_leds_S_led_3_ORD_STR_SORTABLE 00048

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_3_REQUIRES_ORDS \
	44, /* /soc/pin-controller@42020000/gpio@42021800 */ \
	45, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_3_EXISTS 1
#define DT_N_NODELABEL_red_led_1 DT_N_S_leds_S_led_3

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_3_REG_NUM 0
#define DT_N_S_leds_S_led_3_RANGES_NUM 0
#define DT_N_S_leds_S_led_3_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_3_IRQ_NUM 0
#define DT_N_S_leds_S_led_3_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_pin 4
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_3, gpios, 0)
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_3, gpios, 0)
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_3, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_gpios_LEN 1
#define DT_N_S_leds_S_led_3_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_3_P_label "User LD3"
#define DT_N_S_leds_S_led_3_P_label_STRING_UNQUOTED User LD3
#define DT_N_S_leds_S_led_3_P_label_STRING_TOKEN User_LD3
#define DT_N_S_leds_S_led_3_P_label_STRING_UPPER_TOKEN USER_LD3
#define DT_N_S_leds_S_led_3_P_label_IDX_0 "User LD3"
#define DT_N_S_leds_S_led_3_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_3, label, 0)
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_3, label, 0)
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_3, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_label_LEN 1
#define DT_N_S_leds_S_led_3_P_label_EXISTS 1

/*
 * Devicetree node: /mcos
 *
 * Node identifier: DT_N_S_mcos
 */

/* Node's full path: */
#define DT_N_S_mcos_PATH "/mcos"

/* Node's name with unit-address: */
#define DT_N_S_mcos_FULL_NAME "mcos"
#define DT_N_S_mcos_FULL_NAME_UNQUOTED mcos
#define DT_N_S_mcos_FULL_NAME_TOKEN mcos
#define DT_N_S_mcos_FULL_NAME_UPPER_TOKEN MCOS

/* Node parent (/) identifier: */
#define DT_N_S_mcos_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_mcos_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_mcos_NODELABEL_NUM 0
#define DT_N_S_mcos_FOREACH_NODELABEL(fn) 
#define DT_N_S_mcos_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_mcos_CHILD_NUM 2
#define DT_N_S_mcos_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_mcos_FOREACH_CHILD(fn) fn(DT_N_S_mcos_S_mco1) fn(DT_N_S_mcos_S_mco2)
#define DT_N_S_mcos_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_mcos_S_mco1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mcos_S_mco2)
#define DT_N_S_mcos_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_mcos_S_mco1, __VA_ARGS__) fn(DT_N_S_mcos_S_mco2, __VA_ARGS__)
#define DT_N_S_mcos_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mcos_S_mco1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mcos_S_mco2, __VA_ARGS__)
#define DT_N_S_mcos_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_mcos_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_mcos_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_mcos_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_mcos_ORD 49
#define DT_N_S_mcos_ORD_STR_SORTABLE 00049

/* Ordinals for what this node depends on directly: */
#define DT_N_S_mcos_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_mcos_SUPPORTS_ORDS \
	50, /* /mcos/mco1 */ \
	51, /* /mcos/mco2 */

/* Existence and alternate IDs: */
#define DT_N_S_mcos_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_mcos_REG_NUM 0
#define DT_N_S_mcos_RANGES_NUM 0
#define DT_N_S_mcos_FOREACH_RANGE(fn) 
#define DT_N_S_mcos_IRQ_NUM 0
#define DT_N_S_mcos_IRQ_LEVEL 0
#define DT_N_S_mcos_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_mcos_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /mcos/mco1
 *
 * Node identifier: DT_N_S_mcos_S_mco1
 *
 * Binding (compatible = st,stm32-clock-mco):
 *   $ZEPHYR_BASE\dts\bindings\clock\st,stm32-clock-mco.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_mcos_S_mco1_PATH "/mcos/mco1"

/* Node's name with unit-address: */
#define DT_N_S_mcos_S_mco1_FULL_NAME "mco1"
#define DT_N_S_mcos_S_mco1_FULL_NAME_UNQUOTED mco1
#define DT_N_S_mcos_S_mco1_FULL_NAME_TOKEN mco1
#define DT_N_S_mcos_S_mco1_FULL_NAME_UPPER_TOKEN MCO1

/* Node parent (/mcos) identifier: */
#define DT_N_S_mcos_S_mco1_PARENT DT_N_S_mcos

/* Node's index in its parent's list of children: */
#define DT_N_S_mcos_S_mco1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_mcos_S_mco1_NODELABEL_NUM 1
#define DT_N_S_mcos_S_mco1_FOREACH_NODELABEL(fn) fn(mco1)
#define DT_N_S_mcos_S_mco1_FOREACH_NODELABEL_VARGS(fn, ...) fn(mco1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_mcos_S_mco1_CHILD_NUM 0
#define DT_N_S_mcos_S_mco1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_mcos_S_mco1_FOREACH_CHILD(fn) 
#define DT_N_S_mcos_S_mco1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_mcos_S_mco1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_mcos_S_mco1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_mcos_S_mco1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_mcos_S_mco1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_mcos_S_mco1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_mcos_S_mco1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_mcos_S_mco1_ORD 50
#define DT_N_S_mcos_S_mco1_ORD_STR_SORTABLE 00050

/* Ordinals for what this node depends on directly: */
#define DT_N_S_mcos_S_mco1_REQUIRES_ORDS \
	49, /* /mcos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_mcos_S_mco1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_mcos_S_mco1_EXISTS 1
#define DT_N_INST_0_st_stm32_clock_mco DT_N_S_mcos_S_mco1
#define DT_N_NODELABEL_mco1            DT_N_S_mcos_S_mco1

/* Macros for properties that are special in the specification: */
#define DT_N_S_mcos_S_mco1_REG_NUM 0
#define DT_N_S_mcos_S_mco1_RANGES_NUM 0
#define DT_N_S_mcos_S_mco1_FOREACH_RANGE(fn) 
#define DT_N_S_mcos_S_mco1_IRQ_NUM 0
#define DT_N_S_mcos_S_mco1_IRQ_LEVEL 0
#define DT_N_S_mcos_S_mco1_COMPAT_MATCHES_st_stm32_clock_mco 1
#define DT_N_S_mcos_S_mco1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_mcos_S_mco1_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_mcos_S_mco1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_mcos_S_mco1_COMPAT_MODEL_IDX_0 "stm32-clock-mco"
#define DT_N_S_mcos_S_mco1_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_mcos_S_mco1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_mcos_S_mco1_P_status "disabled"
#define DT_N_S_mcos_S_mco1_P_status_STRING_UNQUOTED disabled
#define DT_N_S_mcos_S_mco1_P_status_STRING_TOKEN disabled
#define DT_N_S_mcos_S_mco1_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_mcos_S_mco1_P_status_IDX_0 "disabled"
#define DT_N_S_mcos_S_mco1_P_status_IDX_0_EXISTS 1
#define DT_N_S_mcos_S_mco1_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_mcos_S_mco1_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_mcos_S_mco1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mcos_S_mco1, status, 0)
#define DT_N_S_mcos_S_mco1_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mcos_S_mco1, status, 0)
#define DT_N_S_mcos_S_mco1_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mcos_S_mco1, status, 0, __VA_ARGS__)
#define DT_N_S_mcos_S_mco1_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mcos_S_mco1, status, 0, __VA_ARGS__)
#define DT_N_S_mcos_S_mco1_P_status_LEN 1
#define DT_N_S_mcos_S_mco1_P_status_EXISTS 1
#define DT_N_S_mcos_S_mco1_P_compatible {"st,stm32-clock-mco"}
#define DT_N_S_mcos_S_mco1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_mcos_S_mco1_P_compatible_IDX_0 "st,stm32-clock-mco"
#define DT_N_S_mcos_S_mco1_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-clock-mco
#define DT_N_S_mcos_S_mco1_P_compatible_IDX_0_STRING_TOKEN st_stm32_clock_mco
#define DT_N_S_mcos_S_mco1_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_CLOCK_MCO
#define DT_N_S_mcos_S_mco1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mcos_S_mco1, compatible, 0)
#define DT_N_S_mcos_S_mco1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mcos_S_mco1, compatible, 0)
#define DT_N_S_mcos_S_mco1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mcos_S_mco1, compatible, 0, __VA_ARGS__)
#define DT_N_S_mcos_S_mco1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mcos_S_mco1, compatible, 0, __VA_ARGS__)
#define DT_N_S_mcos_S_mco1_P_compatible_LEN 1
#define DT_N_S_mcos_S_mco1_P_compatible_EXISTS 1
#define DT_N_S_mcos_S_mco1_P_zephyr_deferred_init 0
#define DT_N_S_mcos_S_mco1_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_mcos_S_mco1_P_wakeup_source 0
#define DT_N_S_mcos_S_mco1_P_wakeup_source_EXISTS 1
#define DT_N_S_mcos_S_mco1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_mcos_S_mco1_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /mcos/mco2
 *
 * Node identifier: DT_N_S_mcos_S_mco2
 *
 * Binding (compatible = st,stm32-clock-mco):
 *   $ZEPHYR_BASE\dts\bindings\clock\st,stm32-clock-mco.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_mcos_S_mco2_PATH "/mcos/mco2"

/* Node's name with unit-address: */
#define DT_N_S_mcos_S_mco2_FULL_NAME "mco2"
#define DT_N_S_mcos_S_mco2_FULL_NAME_UNQUOTED mco2
#define DT_N_S_mcos_S_mco2_FULL_NAME_TOKEN mco2
#define DT_N_S_mcos_S_mco2_FULL_NAME_UPPER_TOKEN MCO2

/* Node parent (/mcos) identifier: */
#define DT_N_S_mcos_S_mco2_PARENT DT_N_S_mcos

/* Node's index in its parent's list of children: */
#define DT_N_S_mcos_S_mco2_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_mcos_S_mco2_NODELABEL_NUM 1
#define DT_N_S_mcos_S_mco2_FOREACH_NODELABEL(fn) fn(mco2)
#define DT_N_S_mcos_S_mco2_FOREACH_NODELABEL_VARGS(fn, ...) fn(mco2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_mcos_S_mco2_CHILD_NUM 0
#define DT_N_S_mcos_S_mco2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_mcos_S_mco2_FOREACH_CHILD(fn) 
#define DT_N_S_mcos_S_mco2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_mcos_S_mco2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_mcos_S_mco2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_mcos_S_mco2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_mcos_S_mco2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_mcos_S_mco2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_mcos_S_mco2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_mcos_S_mco2_ORD 51
#define DT_N_S_mcos_S_mco2_ORD_STR_SORTABLE 00051

/* Ordinals for what this node depends on directly: */
#define DT_N_S_mcos_S_mco2_REQUIRES_ORDS \
	49, /* /mcos */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_mcos_S_mco2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_mcos_S_mco2_EXISTS 1
#define DT_N_INST_1_st_stm32_clock_mco DT_N_S_mcos_S_mco2
#define DT_N_NODELABEL_mco2            DT_N_S_mcos_S_mco2

/* Macros for properties that are special in the specification: */
#define DT_N_S_mcos_S_mco2_REG_NUM 0
#define DT_N_S_mcos_S_mco2_RANGES_NUM 0
#define DT_N_S_mcos_S_mco2_FOREACH_RANGE(fn) 
#define DT_N_S_mcos_S_mco2_IRQ_NUM 0
#define DT_N_S_mcos_S_mco2_IRQ_LEVEL 0
#define DT_N_S_mcos_S_mco2_COMPAT_MATCHES_st_stm32_clock_mco 1
#define DT_N_S_mcos_S_mco2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_mcos_S_mco2_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_mcos_S_mco2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_mcos_S_mco2_COMPAT_MODEL_IDX_0 "stm32-clock-mco"
#define DT_N_S_mcos_S_mco2_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_mcos_S_mco2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_mcos_S_mco2_P_status "disabled"
#define DT_N_S_mcos_S_mco2_P_status_STRING_UNQUOTED disabled
#define DT_N_S_mcos_S_mco2_P_status_STRING_TOKEN disabled
#define DT_N_S_mcos_S_mco2_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_mcos_S_mco2_P_status_IDX_0 "disabled"
#define DT_N_S_mcos_S_mco2_P_status_IDX_0_EXISTS 1
#define DT_N_S_mcos_S_mco2_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_mcos_S_mco2_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_mcos_S_mco2_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mcos_S_mco2, status, 0)
#define DT_N_S_mcos_S_mco2_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mcos_S_mco2, status, 0)
#define DT_N_S_mcos_S_mco2_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mcos_S_mco2, status, 0, __VA_ARGS__)
#define DT_N_S_mcos_S_mco2_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mcos_S_mco2, status, 0, __VA_ARGS__)
#define DT_N_S_mcos_S_mco2_P_status_LEN 1
#define DT_N_S_mcos_S_mco2_P_status_EXISTS 1
#define DT_N_S_mcos_S_mco2_P_compatible {"st,stm32-clock-mco"}
#define DT_N_S_mcos_S_mco2_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_mcos_S_mco2_P_compatible_IDX_0 "st,stm32-clock-mco"
#define DT_N_S_mcos_S_mco2_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-clock-mco
#define DT_N_S_mcos_S_mco2_P_compatible_IDX_0_STRING_TOKEN st_stm32_clock_mco
#define DT_N_S_mcos_S_mco2_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_CLOCK_MCO
#define DT_N_S_mcos_S_mco2_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mcos_S_mco2, compatible, 0)
#define DT_N_S_mcos_S_mco2_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mcos_S_mco2, compatible, 0)
#define DT_N_S_mcos_S_mco2_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mcos_S_mco2, compatible, 0, __VA_ARGS__)
#define DT_N_S_mcos_S_mco2_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mcos_S_mco2, compatible, 0, __VA_ARGS__)
#define DT_N_S_mcos_S_mco2_P_compatible_LEN 1
#define DT_N_S_mcos_S_mco2_P_compatible_EXISTS 1
#define DT_N_S_mcos_S_mco2_P_zephyr_deferred_init 0
#define DT_N_S_mcos_S_mco2_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_mcos_S_mco2_P_wakeup_source 0
#define DT_N_S_mcos_S_mco2_P_wakeup_source_EXISTS 1
#define DT_N_S_mcos_S_mco2_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_mcos_S_mco2_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rcc@44020c00/reset-controller
 *
 * Node identifier: DT_N_S_soc_S_rcc_44020c00_S_reset_controller
 *
 * Binding (compatible = st,stm32-rcc-rctl):
 *   $ZEPHYR_BASE\dts\bindings\reset\st,stm32-rcc-rctl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_PATH "/soc/rcc@44020c00/reset-controller"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_FULL_NAME "reset-controller"
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_FULL_NAME_UNQUOTED reset-controller
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_FULL_NAME_TOKEN reset_controller
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_FULL_NAME_UPPER_TOKEN RESET_CONTROLLER

/* Node parent (/soc/rcc@44020c00) identifier: */
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_PARENT DT_N_S_soc_S_rcc_44020c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_NODELABEL_NUM 1
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_FOREACH_NODELABEL(fn) fn(rctl)
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_FOREACH_NODELABEL_VARGS(fn, ...) fn(rctl, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_CHILD_NUM 0
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_ORD 52
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_ORD_STR_SORTABLE 00052

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_REQUIRES_ORDS \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_SUPPORTS_ORDS \
	53, /* /soc/timers@40000400 */ \
	59, /* /soc/aes@420c0000 */ \
	80, /* /soc/sdmmc@46008000 */ \
	81, /* /soc/sdmmc@46008c00 */ \
	82, /* /soc/serial@40004400 */ \
	85, /* /soc/serial@40004800 */ \
	86, /* /soc/serial@40004c00 */ \
	87, /* /soc/serial@40005000 */ \
	88, /* /soc/serial@40006400 */ \
	89, /* /soc/serial@40006800 */ \
	90, /* /soc/serial@40006c00 */ \
	91, /* /soc/serial@40007800 */ \
	92, /* /soc/serial@40007c00 */ \
	93, /* /soc/serial@40008000 */ \
	94, /* /soc/serial@40008400 */ \
	95, /* /soc/serial@40013800 */ \
	98, /* /soc/serial@44002400 */ \
	147, /* /soc/timers@40000000 */ \
	151, /* /soc/timers@40000800 */ \
	154, /* /soc/timers@40000c00 */ \
	157, /* /soc/timers@40001000 */ \
	160, /* /soc/timers@40001400 */ \
	163, /* /soc/timers@40001800 */ \
	166, /* /soc/timers@40001c00 */ \
	169, /* /soc/timers@40002000 */ \
	172, /* /soc/timers@40012c00 */ \
	174, /* /soc/timers@40014000 */ \
	177, /* /soc/timers@40014400 */ \
	180, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_EXISTS 1
#define DT_N_INST_0_st_stm32_rcc_rctl DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_NODELABEL_rctl           DT_N_S_soc_S_rcc_44020c00_S_reset_controller

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_REG_NUM 0
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_RANGES_NUM 0
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_IRQ_NUM 0
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_IRQ_LEVEL 0
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_COMPAT_MATCHES_st_stm32_rcc_rctl 1
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_COMPAT_MODEL_IDX_0 "stm32-rcc-rctl"
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_P_set_bit_to_deassert 0
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_P_set_bit_to_deassert_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_P_compatible {"st,stm32-rcc-rctl"}
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_P_compatible_IDX_0 "st,stm32-rcc-rctl"
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-rcc-rctl
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_P_compatible_IDX_0_STRING_TOKEN st_stm32_rcc_rctl
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_RCC_RCTL
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_44020c00_S_reset_controller, compatible, 0)
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_44020c00_S_reset_controller, compatible, 0)
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_44020c00_S_reset_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_44020c00_S_reset_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_P_compatible_LEN 1
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_P_wakeup_source 0
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rcc_44020c00_S_reset_controller_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_PATH "/soc/timers@40000400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_FULL_NAME "timers@40000400"
#define DT_N_S_soc_S_timers_40000400_FULL_NAME_UNQUOTED timers@40000400
#define DT_N_S_soc_S_timers_40000400_FULL_NAME_TOKEN timers_40000400
#define DT_N_S_soc_S_timers_40000400_FULL_NAME_UPPER_TOKEN TIMERS_40000400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000400_CHILD_IDX 21

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000400_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40000400_FOREACH_NODELABEL(fn) fn(timers3)
#define DT_N_S_soc_S_timers_40000400_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000400_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40000400_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm) fn(DT_N_S_soc_S_timers_40000400_S_counter)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400_S_counter)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_pwm)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_ORD 53
#define DT_N_S_soc_S_timers_40000400_ORD_STR_SORTABLE 00053

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_SUPPORTS_ORDS \
	55, /* /soc/timers@40000400/pwm */ \
	150, /* /soc/timers@40000400/counter */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_EXISTS 1
#define DT_N_INST_0_st_stm32_timers DT_N_S_soc_S_timers_40000400
#define DT_N_NODELABEL_timers3      DT_N_S_soc_S_timers_40000400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000400_REG_NUM 1
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_VAL_ADDRESS 1073742848 /* 0x40000400 */
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq 46
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40000400_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40000400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40000400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_P_reg {1073742848 /* 0x40000400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_0 1073742848
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, clocks, 0)
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, clocks, 0)
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_timers_40000400_P_resets_IDX_0_VAL_id 3713
#define DT_N_S_soc_S_timers_40000400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, resets, 0)
#define DT_N_S_soc_S_timers_40000400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, resets, 0)
#define DT_N_S_soc_S_timers_40000400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40000400_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000400_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_status "okay"
#define DT_N_S_soc_S_timers_40000400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timers_40000400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timers_40000400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timers_40000400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_timers_40000400_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, status, 0)
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, status, 0)
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts {46 /* 0x2e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_0 46
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/tim3_ch3_pb0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_PATH "/soc/pin-controller@42020000/tim3_ch3_pb0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_FULL_NAME "tim3_ch3_pb0"
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_FULL_NAME_UNQUOTED tim3_ch3_pb0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_FULL_NAME_TOKEN tim3_ch3_pb0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_FULL_NAME_UPPER_TOKEN TIM3_CH3_PB0

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_CHILD_IDX 28

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_FOREACH_NODELABEL(fn) fn(tim3_ch3_pb0)
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_FOREACH_NODELABEL_VARGS(fn, ...) fn(tim3_ch3_pb0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_ORD 54
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_ORD_STR_SORTABLE 00054

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_SUPPORTS_ORDS \
	55, /* /soc/timers@40000400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_EXISTS 1
#define DT_N_NODELABEL_tim3_ch3_pb0 DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_pinmux 514
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PATH "/soc/timers@40000400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timers_40000400_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timers_40000400_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timers_40000400_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timers@40000400) identifier: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PARENT DT_N_S_soc_S_timers_40000400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_NODELABEL(fn) fn(pwm3)
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000400_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_ORD 55
#define DT_N_S_soc_S_timers_40000400_S_pwm_ORD_STR_SORTABLE 00055

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_REQUIRES_ORDS \
	53, /* /soc/timers@40000400 */ \
	54, /* /soc/pin-controller@42020000/tim3_ch3_pb0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_SUPPORTS_ORDS \
	56, /* /pwmleds */ \
	57, /* /pwmleds/green_led_1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_EXISTS 1
#define DT_N_INST_0_st_stm32_pwm DT_N_S_soc_S_timers_40000400_S_pwm
#define DT_N_NODELABEL_pwm3      DT_N_S_soc_S_timers_40000400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40000400_S_pwm_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PINCTRL_NUM 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_timers_40000400_S_pwm_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timers_40000400_S_pwm_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, pinctrl_0, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_pwm, pinctrl_0, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status "okay"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /pwmleds
 *
 * Node identifier: DT_N_S_pwmleds
 *
 * Binding (compatible = pwm-leds):
 *   $ZEPHYR_BASE\dts\bindings\led\pwm-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_PATH "/pwmleds"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_FULL_NAME "pwmleds"
#define DT_N_S_pwmleds_FULL_NAME_UNQUOTED pwmleds
#define DT_N_S_pwmleds_FULL_NAME_TOKEN pwmleds
#define DT_N_S_pwmleds_FULL_NAME_UPPER_TOKEN PWMLEDS

/* Node parent (/) identifier: */
#define DT_N_S_pwmleds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_pwmleds_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_pwmleds_NODELABEL_NUM 1
#define DT_N_S_pwmleds_FOREACH_NODELABEL(fn) fn(pwmleds)
#define DT_N_S_pwmleds_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwmleds, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwmleds_CHILD_NUM 1
#define DT_N_S_pwmleds_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pwmleds_FOREACH_CHILD(fn) fn(DT_N_S_pwmleds_S_green_led_1)
#define DT_N_S_pwmleds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pwmleds_S_green_led_1)
#define DT_N_S_pwmleds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_green_led_1, __VA_ARGS__)
#define DT_N_S_pwmleds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_green_led_1, __VA_ARGS__)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pwmleds_S_green_led_1)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pwmleds_S_green_led_1)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_green_led_1, __VA_ARGS__)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_green_led_1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_ORD 56
#define DT_N_S_pwmleds_ORD_STR_SORTABLE 00056

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_REQUIRES_ORDS \
	0, /* / */ \
	55, /* /soc/timers@40000400/pwm */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_SUPPORTS_ORDS \
	57, /* /pwmleds/green_led_1 */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_EXISTS 1
#define DT_N_INST_0_pwm_leds   DT_N_S_pwmleds
#define DT_N_NODELABEL_pwmleds DT_N_S_pwmleds

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_REG_NUM 0
#define DT_N_S_pwmleds_RANGES_NUM 0
#define DT_N_S_pwmleds_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_IRQ_NUM 0
#define DT_N_S_pwmleds_IRQ_LEVEL 0
#define DT_N_S_pwmleds_COMPAT_MATCHES_pwm_leds 1
#define DT_N_S_pwmleds_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_P_compatible {"pwm-leds"}
#define DT_N_S_pwmleds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_P_compatible_IDX_0 "pwm-leds"
#define DT_N_S_pwmleds_P_compatible_IDX_0_STRING_UNQUOTED pwm-leds
#define DT_N_S_pwmleds_P_compatible_IDX_0_STRING_TOKEN pwm_leds
#define DT_N_S_pwmleds_P_compatible_IDX_0_STRING_UPPER_TOKEN PWM_LEDS
#define DT_N_S_pwmleds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds, compatible, 0)
#define DT_N_S_pwmleds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds, compatible, 0)
#define DT_N_S_pwmleds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds, compatible, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds, compatible, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_P_compatible_LEN 1
#define DT_N_S_pwmleds_P_compatible_EXISTS 1
#define DT_N_S_pwmleds_P_status "disabled"
#define DT_N_S_pwmleds_P_status_STRING_UNQUOTED disabled
#define DT_N_S_pwmleds_P_status_STRING_TOKEN disabled
#define DT_N_S_pwmleds_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_pwmleds_P_status_IDX_0 "disabled"
#define DT_N_S_pwmleds_P_status_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_pwmleds_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_pwmleds_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds, status, 0)
#define DT_N_S_pwmleds_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds, status, 0)
#define DT_N_S_pwmleds_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds, status, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds, status, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_P_status_LEN 1
#define DT_N_S_pwmleds_P_status_EXISTS 1

/*
 * Devicetree node: /pwmleds/green_led_1
 *
 * Node identifier: DT_N_S_pwmleds_S_green_led_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_S_green_led_1_PATH "/pwmleds/green_led_1"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_S_green_led_1_FULL_NAME "green_led_1"
#define DT_N_S_pwmleds_S_green_led_1_FULL_NAME_UNQUOTED green_led_1
#define DT_N_S_pwmleds_S_green_led_1_FULL_NAME_TOKEN green_led_1
#define DT_N_S_pwmleds_S_green_led_1_FULL_NAME_UPPER_TOKEN GREEN_LED_1

/* Node parent (/pwmleds) identifier: */
#define DT_N_S_pwmleds_S_green_led_1_PARENT DT_N_S_pwmleds

/* Node's index in its parent's list of children: */
#define DT_N_S_pwmleds_S_green_led_1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pwmleds_S_green_led_1_NODELABEL_NUM 1
#define DT_N_S_pwmleds_S_green_led_1_FOREACH_NODELABEL(fn) fn(pwm_led_1)
#define DT_N_S_pwmleds_S_green_led_1_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm_led_1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwmleds_S_green_led_1_CHILD_NUM 0
#define DT_N_S_pwmleds_S_green_led_1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pwmleds_S_green_led_1_FOREACH_CHILD(fn) 
#define DT_N_S_pwmleds_S_green_led_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_green_led_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_green_led_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pwmleds_S_green_led_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwmleds_S_green_led_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_green_led_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_green_led_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_S_green_led_1_ORD 57
#define DT_N_S_pwmleds_S_green_led_1_ORD_STR_SORTABLE 00057

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_S_green_led_1_REQUIRES_ORDS \
	55, /* /soc/timers@40000400/pwm */ \
	56, /* /pwmleds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_S_green_led_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_S_green_led_1_EXISTS 1
#define DT_N_ALIAS_pwm_led0      DT_N_S_pwmleds_S_green_led_1
#define DT_N_NODELABEL_pwm_led_1 DT_N_S_pwmleds_S_green_led_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_S_green_led_1_REG_NUM 0
#define DT_N_S_pwmleds_S_green_led_1_RANGES_NUM 0
#define DT_N_S_pwmleds_S_green_led_1_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_S_green_led_1_IRQ_NUM 0
#define DT_N_S_pwmleds_S_green_led_1_IRQ_LEVEL 0
#define DT_N_S_pwmleds_S_green_led_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_S_green_led_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_S_green_led_1_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_green_led_1_P_pwms_IDX_0_PH DT_N_S_soc_S_timers_40000400_S_pwm
#define DT_N_S_pwmleds_S_green_led_1_P_pwms_IDX_0_VAL_channel 3
#define DT_N_S_pwmleds_S_green_led_1_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwmleds_S_green_led_1_P_pwms_IDX_0_VAL_period 20000000
#define DT_N_S_pwmleds_S_green_led_1_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwmleds_S_green_led_1_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_pwmleds_S_green_led_1_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwmleds_S_green_led_1_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_green_led_1, pwms, 0)
#define DT_N_S_pwmleds_S_green_led_1_P_pwms_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds_S_green_led_1, pwms, 0)
#define DT_N_S_pwmleds_S_green_led_1_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_green_led_1, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_green_led_1_P_pwms_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_green_led_1, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_green_led_1_P_pwms_LEN 1
#define DT_N_S_pwmleds_S_green_led_1_P_pwms_EXISTS 1
#define DT_N_S_pwmleds_S_green_led_1_P_label "green led"
#define DT_N_S_pwmleds_S_green_led_1_P_label_STRING_UNQUOTED green led
#define DT_N_S_pwmleds_S_green_led_1_P_label_STRING_TOKEN green_led
#define DT_N_S_pwmleds_S_green_led_1_P_label_STRING_UPPER_TOKEN GREEN_LED
#define DT_N_S_pwmleds_S_green_led_1_P_label_IDX_0 "green led"
#define DT_N_S_pwmleds_S_green_led_1_P_label_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_green_led_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_green_led_1, label, 0)
#define DT_N_S_pwmleds_S_green_led_1_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds_S_green_led_1, label, 0)
#define DT_N_S_pwmleds_S_green_led_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_green_led_1, label, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_green_led_1_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_green_led_1, label, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_green_led_1_P_label_LEN 1
#define DT_N_S_pwmleds_S_green_led_1_P_label_EXISTS 1

/*
 * Devicetree node: /soc/adc@42028100
 *
 * Node identifier: DT_N_S_soc_S_adc_42028100
 *
 * Binding (compatible = st,stm32-adc):
 *   $ZEPHYR_BASE\dts\bindings\adc\st,stm32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_42028100_PATH "/soc/adc@42028100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_42028100_FULL_NAME "adc@42028100"
#define DT_N_S_soc_S_adc_42028100_FULL_NAME_UNQUOTED adc@42028100
#define DT_N_S_soc_S_adc_42028100_FULL_NAME_TOKEN adc_42028100
#define DT_N_S_soc_S_adc_42028100_FULL_NAME_UPPER_TOKEN ADC_42028100

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_42028100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_42028100_CHILD_IDX 61

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_42028100_NODELABEL_NUM 1
#define DT_N_S_soc_S_adc_42028100_FOREACH_NODELABEL(fn) fn(adc2)
#define DT_N_S_soc_S_adc_42028100_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_42028100_CHILD_NUM 0
#define DT_N_S_soc_S_adc_42028100_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_adc_42028100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_42028100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_42028100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_42028100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_42028100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_42028100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_42028100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_42028100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_42028100_ORD 58
#define DT_N_S_soc_S_adc_42028100_ORD_STR_SORTABLE 00058

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_42028100_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_42028100_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_42028100_EXISTS 1
#define DT_N_INST_1_st_stm32_adc DT_N_S_soc_S_adc_42028100
#define DT_N_NODELABEL_adc2      DT_N_S_soc_S_adc_42028100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_42028100_REG_NUM 1
#define DT_N_S_soc_S_adc_42028100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_REG_IDX_0_VAL_ADDRESS 1107460352 /* 0x42028100 */
#define DT_N_S_soc_S_adc_42028100_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_adc_42028100_RANGES_NUM 0
#define DT_N_S_soc_S_adc_42028100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_42028100_IRQ_NUM 1
#define DT_N_S_soc_S_adc_42028100_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_IRQ_IDX_0_VAL_irq 69
#define DT_N_S_soc_S_adc_42028100_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_42028100_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_adc_42028100_IRQ_LEVEL 1
#define DT_N_S_soc_S_adc_42028100_COMPAT_MATCHES_st_stm32_adc 1
#define DT_N_S_soc_S_adc_42028100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_adc_42028100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_COMPAT_MODEL_IDX_0 "stm32-adc"
#define DT_N_S_soc_S_adc_42028100_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_42028100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_42028100_P_reg {1107460352 /* 0x42028100 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_adc_42028100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_reg_IDX_0 1107460352
#define DT_N_S_soc_S_adc_42028100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_reg_IDX_1 1024
#define DT_N_S_soc_S_adc_42028100_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_adc_42028100_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_adc_42028100_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_clocks_IDX_0_VAL_bits 1024
#define DT_N_S_soc_S_adc_42028100_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42028100, clocks, 0)
#define DT_N_S_soc_S_adc_42028100_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42028100, clocks, 0)
#define DT_N_S_soc_S_adc_42028100_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42028100, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028100_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42028100, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028100_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_42028100_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_interrupts {69 /* 0x45 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_42028100_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_interrupts_IDX_0 69
#define DT_N_S_soc_S_adc_42028100_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_42028100_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_vref_mv 3300
#define DT_N_S_soc_S_adc_42028100_P_vref_mv_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_resolutions {6316812 /* 0x60630c */, 5333772 /* 0x51630c */, 4350732 /* 0x42630c */, 3367692 /* 0x33630c */}
#define DT_N_S_soc_S_adc_42028100_P_resolutions_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_resolutions_IDX_0 6316812
#define DT_N_S_soc_S_adc_42028100_P_resolutions_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_resolutions_IDX_1 5333772
#define DT_N_S_soc_S_adc_42028100_P_resolutions_IDX_2_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_resolutions_IDX_2 4350732
#define DT_N_S_soc_S_adc_42028100_P_resolutions_IDX_3_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_resolutions_IDX_3 3367692
#define DT_N_S_soc_S_adc_42028100_P_resolutions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42028100, resolutions, 0) \
	fn(DT_N_S_soc_S_adc_42028100, resolutions, 1) \
	fn(DT_N_S_soc_S_adc_42028100, resolutions, 2) \
	fn(DT_N_S_soc_S_adc_42028100, resolutions, 3)
#define DT_N_S_soc_S_adc_42028100_P_resolutions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42028100, resolutions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028100, resolutions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028100, resolutions, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028100, resolutions, 3)
#define DT_N_S_soc_S_adc_42028100_P_resolutions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42028100, resolutions, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028100, resolutions, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028100, resolutions, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028100, resolutions, 3, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028100_P_resolutions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42028100, resolutions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028100, resolutions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028100, resolutions, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028100, resolutions, 3, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028100_P_resolutions_LEN 4
#define DT_N_S_soc_S_adc_42028100_P_resolutions_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_sampling_times {3 /* 0x3 */, 7 /* 0x7 */, 13 /* 0xd */, 25 /* 0x19 */, 48 /* 0x30 */, 93 /* 0x5d */, 248 /* 0xf8 */, 641 /* 0x281 */}
#define DT_N_S_soc_S_adc_42028100_P_sampling_times_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_sampling_times_IDX_0 3
#define DT_N_S_soc_S_adc_42028100_P_sampling_times_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_sampling_times_IDX_1 7
#define DT_N_S_soc_S_adc_42028100_P_sampling_times_IDX_2_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_sampling_times_IDX_2 13
#define DT_N_S_soc_S_adc_42028100_P_sampling_times_IDX_3_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_sampling_times_IDX_3 25
#define DT_N_S_soc_S_adc_42028100_P_sampling_times_IDX_4_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_sampling_times_IDX_4 48
#define DT_N_S_soc_S_adc_42028100_P_sampling_times_IDX_5_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_sampling_times_IDX_5 93
#define DT_N_S_soc_S_adc_42028100_P_sampling_times_IDX_6_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_sampling_times_IDX_6 248
#define DT_N_S_soc_S_adc_42028100_P_sampling_times_IDX_7_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_sampling_times_IDX_7 641
#define DT_N_S_soc_S_adc_42028100_P_sampling_times_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42028100, sampling_times, 0) \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 1) \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 2) \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 3) \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 4) \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 5) \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 6) \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 7)
#define DT_N_S_soc_S_adc_42028100_P_sampling_times_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42028100, sampling_times, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 7)
#define DT_N_S_soc_S_adc_42028100_P_sampling_times_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42028100, sampling_times, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028100_P_sampling_times_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42028100, sampling_times, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028100, sampling_times, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028100_P_sampling_times_LEN 8
#define DT_N_S_soc_S_adc_42028100_P_sampling_times_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_st_adc_sequencer 1
#define DT_N_S_soc_S_adc_42028100_P_st_adc_sequencer_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_adc_42028100_P_st_adc_sequencer_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_st_adc_sequencer_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_st_adc_sequencer_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_status "disabled"
#define DT_N_S_soc_S_adc_42028100_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_adc_42028100_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_adc_42028100_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_42028100_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_adc_42028100_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_adc_42028100_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42028100, status, 0)
#define DT_N_S_soc_S_adc_42028100_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42028100, status, 0)
#define DT_N_S_soc_S_adc_42028100_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42028100, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028100_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42028100, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028100_P_status_LEN 1
#define DT_N_S_soc_S_adc_42028100_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_compatible {"st,stm32-adc"}
#define DT_N_S_soc_S_adc_42028100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_compatible_IDX_0 "st,stm32-adc"
#define DT_N_S_soc_S_adc_42028100_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-adc
#define DT_N_S_soc_S_adc_42028100_P_compatible_IDX_0_STRING_TOKEN st_stm32_adc
#define DT_N_S_soc_S_adc_42028100_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_ADC
#define DT_N_S_soc_S_adc_42028100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42028100, compatible, 0)
#define DT_N_S_soc_S_adc_42028100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42028100, compatible, 0)
#define DT_N_S_soc_S_adc_42028100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42028100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42028100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028100_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_42028100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_adc_42028100_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_wakeup_source 0
#define DT_N_S_soc_S_adc_42028100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_42028100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_42028100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/aes@420c0000
 *
 * Node identifier: DT_N_S_soc_S_aes_420c0000
 *
 * Binding (compatible = st,stm32-aes):
 *   $ZEPHYR_BASE\dts\bindings\crypto\st,stm32-aes.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_aes_420c0000_PATH "/soc/aes@420c0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_aes_420c0000_FULL_NAME "aes@420c0000"
#define DT_N_S_soc_S_aes_420c0000_FULL_NAME_UNQUOTED aes@420c0000
#define DT_N_S_soc_S_aes_420c0000_FULL_NAME_TOKEN aes_420c0000
#define DT_N_S_soc_S_aes_420c0000_FULL_NAME_UPPER_TOKEN AES_420C0000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_aes_420c0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_aes_420c0000_CHILD_IDX 70

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_aes_420c0000_NODELABEL_NUM 1
#define DT_N_S_soc_S_aes_420c0000_FOREACH_NODELABEL(fn) fn(aes)
#define DT_N_S_soc_S_aes_420c0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(aes, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_aes_420c0000_CHILD_NUM 0
#define DT_N_S_soc_S_aes_420c0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_aes_420c0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_aes_420c0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_aes_420c0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_aes_420c0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_aes_420c0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_aes_420c0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_aes_420c0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_aes_420c0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_aes_420c0000_ORD 59
#define DT_N_S_soc_S_aes_420c0000_ORD_STR_SORTABLE 00059

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_aes_420c0000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_aes_420c0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_aes_420c0000_EXISTS 1
#define DT_N_INST_0_st_stm32_aes DT_N_S_soc_S_aes_420c0000
#define DT_N_NODELABEL_aes       DT_N_S_soc_S_aes_420c0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_aes_420c0000_REG_NUM 1
#define DT_N_S_soc_S_aes_420c0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_REG_IDX_0_VAL_ADDRESS 1108082688 /* 0x420c0000 */
#define DT_N_S_soc_S_aes_420c0000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_aes_420c0000_RANGES_NUM 0
#define DT_N_S_soc_S_aes_420c0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_aes_420c0000_IRQ_NUM 1
#define DT_N_S_soc_S_aes_420c0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_IRQ_IDX_0_VAL_irq 116
#define DT_N_S_soc_S_aes_420c0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_aes_420c0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_aes_420c0000_IRQ_LEVEL 1
#define DT_N_S_soc_S_aes_420c0000_COMPAT_MATCHES_st_stm32_aes 1
#define DT_N_S_soc_S_aes_420c0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_aes_420c0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_COMPAT_MODEL_IDX_0 "stm32-aes"
#define DT_N_S_soc_S_aes_420c0000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_aes_420c0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_aes_420c0000_P_reg {1108082688 /* 0x420c0000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_aes_420c0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_reg_IDX_0 1108082688
#define DT_N_S_soc_S_aes_420c0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_aes_420c0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_interrupts {116 /* 0x74 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_aes_420c0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_interrupts_IDX_0 116
#define DT_N_S_soc_S_aes_420c0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_aes_420c0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_aes_420c0000_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_aes_420c0000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_clocks_IDX_0_VAL_bits 65536
#define DT_N_S_soc_S_aes_420c0000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_aes_420c0000, clocks, 0)
#define DT_N_S_soc_S_aes_420c0000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_aes_420c0000, clocks, 0)
#define DT_N_S_soc_S_aes_420c0000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_aes_420c0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_aes_420c0000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_aes_420c0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_aes_420c0000_P_clocks_LEN 1
#define DT_N_S_soc_S_aes_420c0000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_aes_420c0000_P_resets_IDX_0_VAL_id 3216
#define DT_N_S_soc_S_aes_420c0000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_aes_420c0000, resets, 0)
#define DT_N_S_soc_S_aes_420c0000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_aes_420c0000, resets, 0)
#define DT_N_S_soc_S_aes_420c0000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_aes_420c0000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_aes_420c0000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_aes_420c0000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_aes_420c0000_P_resets_LEN 1
#define DT_N_S_soc_S_aes_420c0000_P_resets_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_status "disabled"
#define DT_N_S_soc_S_aes_420c0000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_aes_420c0000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_aes_420c0000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_aes_420c0000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_aes_420c0000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_aes_420c0000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_aes_420c0000, status, 0)
#define DT_N_S_soc_S_aes_420c0000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_aes_420c0000, status, 0)
#define DT_N_S_soc_S_aes_420c0000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_aes_420c0000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_aes_420c0000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_aes_420c0000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_aes_420c0000_P_status_LEN 1
#define DT_N_S_soc_S_aes_420c0000_P_status_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_compatible {"st,stm32-aes"}
#define DT_N_S_soc_S_aes_420c0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_compatible_IDX_0 "st,stm32-aes"
#define DT_N_S_soc_S_aes_420c0000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-aes
#define DT_N_S_soc_S_aes_420c0000_P_compatible_IDX_0_STRING_TOKEN st_stm32_aes
#define DT_N_S_soc_S_aes_420c0000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_AES
#define DT_N_S_soc_S_aes_420c0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_aes_420c0000, compatible, 0)
#define DT_N_S_soc_S_aes_420c0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_aes_420c0000, compatible, 0)
#define DT_N_S_soc_S_aes_420c0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_aes_420c0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_aes_420c0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_aes_420c0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_aes_420c0000_P_compatible_LEN 1
#define DT_N_S_soc_S_aes_420c0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_aes_420c0000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_wakeup_source 0
#define DT_N_S_soc_S_aes_420c0000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_aes_420c0000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/fdcan1_rx_pd0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_PATH "/soc/pin-controller@42020000/fdcan1_rx_pd0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_FULL_NAME "fdcan1_rx_pd0"
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_FULL_NAME_UNQUOTED fdcan1_rx_pd0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_FULL_NAME_TOKEN fdcan1_rx_pd0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_FULL_NAME_UPPER_TOKEN FDCAN1_RX_PD0

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_CHILD_IDX 21

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_FOREACH_NODELABEL(fn) fn(fdcan1_rx_pd0)
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_FOREACH_NODELABEL_VARGS(fn, ...) fn(fdcan1_rx_pd0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_ORD 60
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_ORD_STR_SORTABLE 00060

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_SUPPORTS_ORDS \
	62, /* /soc/can@4000a400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_EXISTS 1
#define DT_N_NODELABEL_fdcan1_rx_pd0 DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_pinmux 1545
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/fdcan1_tx_pd1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_PATH "/soc/pin-controller@42020000/fdcan1_tx_pd1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_FULL_NAME "fdcan1_tx_pd1"
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_FULL_NAME_UNQUOTED fdcan1_tx_pd1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_FULL_NAME_TOKEN fdcan1_tx_pd1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_FULL_NAME_UPPER_TOKEN FDCAN1_TX_PD1

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_CHILD_IDX 22

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_FOREACH_NODELABEL(fn) fn(fdcan1_tx_pd1)
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_FOREACH_NODELABEL_VARGS(fn, ...) fn(fdcan1_tx_pd1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_ORD 61
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_ORD_STR_SORTABLE 00061

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_SUPPORTS_ORDS \
	62, /* /soc/can@4000a400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_EXISTS 1
#define DT_N_NODELABEL_fdcan1_tx_pd1 DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_pinmux 1577
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/can@4000a400
 *
 * Node identifier: DT_N_S_soc_S_can_4000a400
 *
 * Binding (compatible = st,stm32-fdcan):
 *   $ZEPHYR_BASE\dts\bindings\can\st,stm32-fdcan.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_can_4000a400_PATH "/soc/can@4000a400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_can_4000a400_FULL_NAME "can@4000a400"
#define DT_N_S_soc_S_can_4000a400_FULL_NAME_UNQUOTED can@4000a400
#define DT_N_S_soc_S_can_4000a400_FULL_NAME_TOKEN can_4000a400
#define DT_N_S_soc_S_can_4000a400_FULL_NAME_UPPER_TOKEN CAN_4000A400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_can_4000a400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_can_4000a400_CHILD_IDX 29

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_can_4000a400_NODELABEL_NUM 1
#define DT_N_S_soc_S_can_4000a400_FOREACH_NODELABEL(fn) fn(fdcan1)
#define DT_N_S_soc_S_can_4000a400_FOREACH_NODELABEL_VARGS(fn, ...) fn(fdcan1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_can_4000a400_CHILD_NUM 0
#define DT_N_S_soc_S_can_4000a400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_can_4000a400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_can_4000a400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_can_4000a400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_4000a400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_can_4000a400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_can_4000a400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_can_4000a400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_4000a400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_can_4000a400_ORD 62
#define DT_N_S_soc_S_can_4000a400_ORD_STR_SORTABLE 00062

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_can_4000a400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	60, /* /soc/pin-controller@42020000/fdcan1_rx_pd0 */ \
	61, /* /soc/pin-controller@42020000/fdcan1_tx_pd1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_can_4000a400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_can_4000a400_EXISTS 1
#define DT_N_INST_0_st_stm32_fdcan DT_N_S_soc_S_can_4000a400
#define DT_N_NODELABEL_fdcan1      DT_N_S_soc_S_can_4000a400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_can_4000a400_REG_NUM 2
#define DT_N_S_soc_S_can_4000a400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_REG_IDX_0_VAL_ADDRESS 1073783808 /* 0x4000a400 */
#define DT_N_S_soc_S_can_4000a400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_can_4000a400_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_REG_IDX_1_VAL_ADDRESS 1073785856 /* 0x4000ac00 */
#define DT_N_S_soc_S_can_4000a400_REG_IDX_1_VAL_SIZE 848 /* 0x350 */
#define DT_N_S_soc_S_can_4000a400_REG_NAME_m_can_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_REG_NAME_m_can_VAL_ADDRESS DT_N_S_soc_S_can_4000a400_REG_IDX_0_VAL_ADDRESS
#define DT_N_S_soc_S_can_4000a400_REG_NAME_m_can_VAL_SIZE DT_N_S_soc_S_can_4000a400_REG_IDX_0_VAL_SIZE
#define DT_N_S_soc_S_can_4000a400_REG_NAME_message_ram_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_REG_NAME_message_ram_VAL_ADDRESS DT_N_S_soc_S_can_4000a400_REG_IDX_1_VAL_ADDRESS
#define DT_N_S_soc_S_can_4000a400_REG_NAME_message_ram_VAL_SIZE DT_N_S_soc_S_can_4000a400_REG_IDX_1_VAL_SIZE
#define DT_N_S_soc_S_can_4000a400_RANGES_NUM 0
#define DT_N_S_soc_S_can_4000a400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_can_4000a400_IRQ_NUM 2
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_0_VAL_irq 39
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_1_VAL_irq 40
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_can_4000a400_IRQ_LEVEL 1
#define DT_N_S_soc_S_can_4000a400_IRQ_NAME_int0_VAL_irq DT_N_S_soc_S_can_4000a400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_can_4000a400_IRQ_NAME_int0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_IRQ_NAME_int0_VAL_priority DT_N_S_soc_S_can_4000a400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_can_4000a400_IRQ_NAME_int0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_IRQ_NAME_int0_CONTROLLER DT_N_S_soc_S_can_4000a400_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_can_4000a400_IRQ_NAME_int1_VAL_irq DT_N_S_soc_S_can_4000a400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_can_4000a400_IRQ_NAME_int1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_IRQ_NAME_int1_VAL_priority DT_N_S_soc_S_can_4000a400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_can_4000a400_IRQ_NAME_int1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_IRQ_NAME_int1_CONTROLLER DT_N_S_soc_S_can_4000a400_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_can_4000a400_COMPAT_MATCHES_st_stm32_fdcan 1
#define DT_N_S_soc_S_can_4000a400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_can_4000a400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_COMPAT_MODEL_IDX_0 "stm32-fdcan"
#define DT_N_S_soc_S_can_4000a400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_can_4000a400_PINCTRL_NUM 1
#define DT_N_S_soc_S_can_4000a400_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_can_4000a400_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_can_4000a400_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_can_4000a400_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0
#define DT_N_S_soc_S_can_4000a400_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1

/* Generic property macros: */
#define DT_N_S_soc_S_can_4000a400_P_reg {1073783808 /* 0x4000a400 */, 1024 /* 0x400 */, 1073785856 /* 0x4000ac00 */, 848 /* 0x350 */}
#define DT_N_S_soc_S_can_4000a400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_reg_IDX_0 1073783808
#define DT_N_S_soc_S_can_4000a400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_can_4000a400_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_reg_IDX_2 1073785856
#define DT_N_S_soc_S_can_4000a400_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_reg_IDX_3 848
#define DT_N_S_soc_S_can_4000a400_P_reg_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_interrupts {39 /* 0x27 */, 0 /* 0x0 */, 40 /* 0x28 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_can_4000a400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_interrupts_IDX_0 39
#define DT_N_S_soc_S_can_4000a400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_can_4000a400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_interrupts_IDX_2 40
#define DT_N_S_soc_S_can_4000a400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_can_4000a400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names {"int0", "int1"}
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_IDX_0 "int0"
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_IDX_0_STRING_UNQUOTED int0
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_IDX_0_STRING_TOKEN int0
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN INT0
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_IDX_1 "int1"
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_IDX_1_STRING_UNQUOTED int1
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_IDX_1_STRING_TOKEN int1
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN INT1
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_4000a400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_can_4000a400, interrupt_names, 1)
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_4000a400, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, interrupt_names, 1)
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_4000a400, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a400, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_4000a400, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_can_4000a400_P_clocks_IDX_0_VAL_bus 160
#define DT_N_S_soc_S_can_4000a400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_clocks_IDX_0_VAL_bits 512
#define DT_N_S_soc_S_can_4000a400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_can_4000a400_P_clocks_IDX_1_VAL_bus 13
#define DT_N_S_soc_S_can_4000a400_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_clocks_IDX_1_VAL_bits 92392
#define DT_N_S_soc_S_can_4000a400_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_4000a400, clocks, 0) \
	fn(DT_N_S_soc_S_can_4000a400, clocks, 1)
#define DT_N_S_soc_S_can_4000a400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_4000a400, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, clocks, 1)
#define DT_N_S_soc_S_can_4000a400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_4000a400, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a400, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_4000a400, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_clocks_LEN 2
#define DT_N_S_soc_S_can_4000a400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_clk_divider 2
#define DT_N_S_soc_S_can_4000a400_P_clk_divider_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_can_4000a400_P_clk_divider_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_clk_divider_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_clk_divider_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg {0 /* 0x0 */, 28 /* 0x1c */, 8 /* 0x8 */, 3 /* 0x3 */, 3 /* 0x3 */, 0 /* 0x0 */, 3 /* 0x3 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_0 0
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_1 28
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_2 8
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_3 3
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_4_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_4 3
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_5_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_5 0
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_6_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_6 3
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_7_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_7 3
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 0) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 1) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 2) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 3) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 4) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 5) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 6) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 7)
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 7)
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 7, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 7, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_LEN 8
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_status "okay"
#define DT_N_S_soc_S_can_4000a400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_can_4000a400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_can_4000a400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_can_4000a400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_can_4000a400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_can_4000a400_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_4000a400, status, 0)
#define DT_N_S_soc_S_can_4000a400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_4000a400, status, 0)
#define DT_N_S_soc_S_can_4000a400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_4000a400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_4000a400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_status_LEN 1
#define DT_N_S_soc_S_can_4000a400_P_status_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_compatible {"st,stm32-fdcan"}
#define DT_N_S_soc_S_can_4000a400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_compatible_IDX_0 "st,stm32-fdcan"
#define DT_N_S_soc_S_can_4000a400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-fdcan
#define DT_N_S_soc_S_can_4000a400_P_compatible_IDX_0_STRING_TOKEN st_stm32_fdcan
#define DT_N_S_soc_S_can_4000a400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_FDCAN
#define DT_N_S_soc_S_can_4000a400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_4000a400, compatible, 0)
#define DT_N_S_soc_S_can_4000a400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_4000a400, compatible, 0)
#define DT_N_S_soc_S_can_4000a400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_4000a400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_4000a400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_compatible_LEN 1
#define DT_N_S_soc_S_can_4000a400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_reg_names {"m_can", "message_ram"}
#define DT_N_S_soc_S_can_4000a400_P_reg_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_reg_names_IDX_0 "m_can"
#define DT_N_S_soc_S_can_4000a400_P_reg_names_IDX_0_STRING_UNQUOTED m_can
#define DT_N_S_soc_S_can_4000a400_P_reg_names_IDX_0_STRING_TOKEN m_can
#define DT_N_S_soc_S_can_4000a400_P_reg_names_IDX_0_STRING_UPPER_TOKEN M_CAN
#define DT_N_S_soc_S_can_4000a400_P_reg_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_reg_names_IDX_1 "message_ram"
#define DT_N_S_soc_S_can_4000a400_P_reg_names_IDX_1_STRING_UNQUOTED message_ram
#define DT_N_S_soc_S_can_4000a400_P_reg_names_IDX_1_STRING_TOKEN message_ram
#define DT_N_S_soc_S_can_4000a400_P_reg_names_IDX_1_STRING_UPPER_TOKEN MESSAGE_RAM
#define DT_N_S_soc_S_can_4000a400_P_reg_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_4000a400, reg_names, 0) \
	fn(DT_N_S_soc_S_can_4000a400, reg_names, 1)
#define DT_N_S_soc_S_can_4000a400_P_reg_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_4000a400, reg_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, reg_names, 1)
#define DT_N_S_soc_S_can_4000a400_P_reg_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_4000a400, reg_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a400, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_reg_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_4000a400, reg_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_reg_names_LEN 2
#define DT_N_S_soc_S_can_4000a400_P_reg_names_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_can_4000a400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_wakeup_source 0
#define DT_N_S_soc_S_can_4000a400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_can_4000a400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0
#define DT_N_S_soc_S_can_4000a400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0
#define DT_N_S_soc_S_can_4000a400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1
#define DT_N_S_soc_S_can_4000a400_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1
#define DT_N_S_soc_S_can_4000a400_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_4000a400, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_can_4000a400, pinctrl_0, 1)
#define DT_N_S_soc_S_can_4000a400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_4000a400, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, pinctrl_0, 1)
#define DT_N_S_soc_S_can_4000a400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_4000a400, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_4000a400, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_can_4000a400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_can_4000a400_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_can_4000a400_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_can_4000a400_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_can_4000a400_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_can_4000a400_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_4000a400, pinctrl_names, 0)
#define DT_N_S_soc_S_can_4000a400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_4000a400, pinctrl_names, 0)
#define DT_N_S_soc_S_can_4000a400_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_4000a400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_4000a400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_can_4000a400_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/can@4000a800
 *
 * Node identifier: DT_N_S_soc_S_can_4000a800
 *
 * Binding (compatible = st,stm32-fdcan):
 *   $ZEPHYR_BASE\dts\bindings\can\st,stm32-fdcan.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_can_4000a800_PATH "/soc/can@4000a800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_can_4000a800_FULL_NAME "can@4000a800"
#define DT_N_S_soc_S_can_4000a800_FULL_NAME_UNQUOTED can@4000a800
#define DT_N_S_soc_S_can_4000a800_FULL_NAME_TOKEN can_4000a800
#define DT_N_S_soc_S_can_4000a800_FULL_NAME_UPPER_TOKEN CAN_4000A800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_can_4000a800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_can_4000a800_CHILD_IDX 71

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_can_4000a800_NODELABEL_NUM 1
#define DT_N_S_soc_S_can_4000a800_FOREACH_NODELABEL(fn) fn(fdcan2)
#define DT_N_S_soc_S_can_4000a800_FOREACH_NODELABEL_VARGS(fn, ...) fn(fdcan2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_can_4000a800_CHILD_NUM 0
#define DT_N_S_soc_S_can_4000a800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_can_4000a800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_can_4000a800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_can_4000a800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_4000a800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_can_4000a800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_can_4000a800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_can_4000a800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_4000a800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_can_4000a800_ORD 63
#define DT_N_S_soc_S_can_4000a800_ORD_STR_SORTABLE 00063

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_can_4000a800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_can_4000a800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_can_4000a800_EXISTS 1
#define DT_N_INST_1_st_stm32_fdcan DT_N_S_soc_S_can_4000a800
#define DT_N_NODELABEL_fdcan2      DT_N_S_soc_S_can_4000a800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_can_4000a800_REG_NUM 2
#define DT_N_S_soc_S_can_4000a800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_REG_IDX_0_VAL_ADDRESS 1073784832 /* 0x4000a800 */
#define DT_N_S_soc_S_can_4000a800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_can_4000a800_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_REG_IDX_1_VAL_ADDRESS 1073785856 /* 0x4000ac00 */
#define DT_N_S_soc_S_can_4000a800_REG_IDX_1_VAL_SIZE 1696 /* 0x6a0 */
#define DT_N_S_soc_S_can_4000a800_REG_NAME_m_can_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_REG_NAME_m_can_VAL_ADDRESS DT_N_S_soc_S_can_4000a800_REG_IDX_0_VAL_ADDRESS
#define DT_N_S_soc_S_can_4000a800_REG_NAME_m_can_VAL_SIZE DT_N_S_soc_S_can_4000a800_REG_IDX_0_VAL_SIZE
#define DT_N_S_soc_S_can_4000a800_REG_NAME_message_ram_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_REG_NAME_message_ram_VAL_ADDRESS DT_N_S_soc_S_can_4000a800_REG_IDX_1_VAL_ADDRESS
#define DT_N_S_soc_S_can_4000a800_REG_NAME_message_ram_VAL_SIZE DT_N_S_soc_S_can_4000a800_REG_IDX_1_VAL_SIZE
#define DT_N_S_soc_S_can_4000a800_RANGES_NUM 0
#define DT_N_S_soc_S_can_4000a800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_can_4000a800_IRQ_NUM 2
#define DT_N_S_soc_S_can_4000a800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_IRQ_IDX_0_VAL_irq 109
#define DT_N_S_soc_S_can_4000a800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_can_4000a800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_can_4000a800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_IRQ_IDX_1_VAL_irq 110
#define DT_N_S_soc_S_can_4000a800_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_can_4000a800_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_can_4000a800_IRQ_LEVEL 1
#define DT_N_S_soc_S_can_4000a800_IRQ_NAME_int0_VAL_irq DT_N_S_soc_S_can_4000a800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_can_4000a800_IRQ_NAME_int0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_IRQ_NAME_int0_VAL_priority DT_N_S_soc_S_can_4000a800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_can_4000a800_IRQ_NAME_int0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_IRQ_NAME_int0_CONTROLLER DT_N_S_soc_S_can_4000a800_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_can_4000a800_IRQ_NAME_int1_VAL_irq DT_N_S_soc_S_can_4000a800_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_can_4000a800_IRQ_NAME_int1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_IRQ_NAME_int1_VAL_priority DT_N_S_soc_S_can_4000a800_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_can_4000a800_IRQ_NAME_int1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_IRQ_NAME_int1_CONTROLLER DT_N_S_soc_S_can_4000a800_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_can_4000a800_COMPAT_MATCHES_st_stm32_fdcan 1
#define DT_N_S_soc_S_can_4000a800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_can_4000a800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_COMPAT_MODEL_IDX_0 "stm32-fdcan"
#define DT_N_S_soc_S_can_4000a800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_can_4000a800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_can_4000a800_P_reg {1073784832 /* 0x4000a800 */, 1024 /* 0x400 */, 1073785856 /* 0x4000ac00 */, 1696 /* 0x6a0 */}
#define DT_N_S_soc_S_can_4000a800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_reg_IDX_0 1073784832
#define DT_N_S_soc_S_can_4000a800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_can_4000a800_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_reg_IDX_2 1073785856
#define DT_N_S_soc_S_can_4000a800_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_reg_IDX_3 1696
#define DT_N_S_soc_S_can_4000a800_P_reg_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_interrupts {109 /* 0x6d */, 0 /* 0x0 */, 110 /* 0x6e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_can_4000a800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_interrupts_IDX_0 109
#define DT_N_S_soc_S_can_4000a800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_can_4000a800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_interrupts_IDX_2 110
#define DT_N_S_soc_S_can_4000a800_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_can_4000a800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_interrupt_names {"int0", "int1"}
#define DT_N_S_soc_S_can_4000a800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_interrupt_names_IDX_0 "int0"
#define DT_N_S_soc_S_can_4000a800_P_interrupt_names_IDX_0_STRING_UNQUOTED int0
#define DT_N_S_soc_S_can_4000a800_P_interrupt_names_IDX_0_STRING_TOKEN int0
#define DT_N_S_soc_S_can_4000a800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN INT0
#define DT_N_S_soc_S_can_4000a800_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_interrupt_names_IDX_1 "int1"
#define DT_N_S_soc_S_can_4000a800_P_interrupt_names_IDX_1_STRING_UNQUOTED int1
#define DT_N_S_soc_S_can_4000a800_P_interrupt_names_IDX_1_STRING_TOKEN int1
#define DT_N_S_soc_S_can_4000a800_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN INT1
#define DT_N_S_soc_S_can_4000a800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_4000a800, interrupt_names, 0) \
	fn(DT_N_S_soc_S_can_4000a800, interrupt_names, 1)
#define DT_N_S_soc_S_can_4000a800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_4000a800, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a800, interrupt_names, 1)
#define DT_N_S_soc_S_can_4000a800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_4000a800, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a800, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_4000a800, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a800, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a800_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_can_4000a800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_can_4000a800_P_clocks_IDX_0_VAL_bus 160
#define DT_N_S_soc_S_can_4000a800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_clocks_IDX_0_VAL_bits 512
#define DT_N_S_soc_S_can_4000a800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_4000a800, clocks, 0)
#define DT_N_S_soc_S_can_4000a800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_4000a800, clocks, 0)
#define DT_N_S_soc_S_can_4000a800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_4000a800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_4000a800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a800_P_clocks_LEN 1
#define DT_N_S_soc_S_can_4000a800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_bosch_mram_cfg {848 /* 0x350 */, 28 /* 0x1c */, 8 /* 0x8 */, 3 /* 0x3 */, 3 /* 0x3 */, 0 /* 0x0 */, 3 /* 0x3 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_can_4000a800_P_bosch_mram_cfg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_bosch_mram_cfg_IDX_0 848
#define DT_N_S_soc_S_can_4000a800_P_bosch_mram_cfg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_bosch_mram_cfg_IDX_1 28
#define DT_N_S_soc_S_can_4000a800_P_bosch_mram_cfg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_bosch_mram_cfg_IDX_2 8
#define DT_N_S_soc_S_can_4000a800_P_bosch_mram_cfg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_bosch_mram_cfg_IDX_3 3
#define DT_N_S_soc_S_can_4000a800_P_bosch_mram_cfg_IDX_4_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_bosch_mram_cfg_IDX_4 3
#define DT_N_S_soc_S_can_4000a800_P_bosch_mram_cfg_IDX_5_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_bosch_mram_cfg_IDX_5 0
#define DT_N_S_soc_S_can_4000a800_P_bosch_mram_cfg_IDX_6_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_bosch_mram_cfg_IDX_6 3
#define DT_N_S_soc_S_can_4000a800_P_bosch_mram_cfg_IDX_7_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_bosch_mram_cfg_IDX_7 3
#define DT_N_S_soc_S_can_4000a800_P_bosch_mram_cfg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 0) \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 1) \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 2) \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 3) \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 4) \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 5) \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 6) \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 7)
#define DT_N_S_soc_S_can_4000a800_P_bosch_mram_cfg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 7)
#define DT_N_S_soc_S_can_4000a800_P_bosch_mram_cfg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 7, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a800_P_bosch_mram_cfg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a800, bosch_mram_cfg, 7, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a800_P_bosch_mram_cfg_LEN 8
#define DT_N_S_soc_S_can_4000a800_P_bosch_mram_cfg_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_status "disabled"
#define DT_N_S_soc_S_can_4000a800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_can_4000a800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_can_4000a800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_can_4000a800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_can_4000a800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_can_4000a800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_4000a800, status, 0)
#define DT_N_S_soc_S_can_4000a800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_4000a800, status, 0)
#define DT_N_S_soc_S_can_4000a800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_4000a800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_4000a800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a800_P_status_LEN 1
#define DT_N_S_soc_S_can_4000a800_P_status_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_compatible {"st,stm32-fdcan"}
#define DT_N_S_soc_S_can_4000a800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_compatible_IDX_0 "st,stm32-fdcan"
#define DT_N_S_soc_S_can_4000a800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-fdcan
#define DT_N_S_soc_S_can_4000a800_P_compatible_IDX_0_STRING_TOKEN st_stm32_fdcan
#define DT_N_S_soc_S_can_4000a800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_FDCAN
#define DT_N_S_soc_S_can_4000a800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_4000a800, compatible, 0)
#define DT_N_S_soc_S_can_4000a800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_4000a800, compatible, 0)
#define DT_N_S_soc_S_can_4000a800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_4000a800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_4000a800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a800_P_compatible_LEN 1
#define DT_N_S_soc_S_can_4000a800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_reg_names {"m_can", "message_ram"}
#define DT_N_S_soc_S_can_4000a800_P_reg_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_reg_names_IDX_0 "m_can"
#define DT_N_S_soc_S_can_4000a800_P_reg_names_IDX_0_STRING_UNQUOTED m_can
#define DT_N_S_soc_S_can_4000a800_P_reg_names_IDX_0_STRING_TOKEN m_can
#define DT_N_S_soc_S_can_4000a800_P_reg_names_IDX_0_STRING_UPPER_TOKEN M_CAN
#define DT_N_S_soc_S_can_4000a800_P_reg_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_reg_names_IDX_1 "message_ram"
#define DT_N_S_soc_S_can_4000a800_P_reg_names_IDX_1_STRING_UNQUOTED message_ram
#define DT_N_S_soc_S_can_4000a800_P_reg_names_IDX_1_STRING_TOKEN message_ram
#define DT_N_S_soc_S_can_4000a800_P_reg_names_IDX_1_STRING_UPPER_TOKEN MESSAGE_RAM
#define DT_N_S_soc_S_can_4000a800_P_reg_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_4000a800, reg_names, 0) \
	fn(DT_N_S_soc_S_can_4000a800, reg_names, 1)
#define DT_N_S_soc_S_can_4000a800_P_reg_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_4000a800, reg_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a800, reg_names, 1)
#define DT_N_S_soc_S_can_4000a800_P_reg_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_4000a800, reg_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a800, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a800_P_reg_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_4000a800, reg_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a800, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a800_P_reg_names_LEN 2
#define DT_N_S_soc_S_can_4000a800_P_reg_names_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_can_4000a800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_wakeup_source 0
#define DT_N_S_soc_S_can_4000a800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_can_4000a800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_can_4000a800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/dac1_out2_pa5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_PATH "/soc/pin-controller@42020000/dac1_out2_pa5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_FULL_NAME "dac1_out2_pa5"
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_FULL_NAME_UNQUOTED dac1_out2_pa5
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_FULL_NAME_TOKEN dac1_out2_pa5
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_FULL_NAME_UPPER_TOKEN DAC1_OUT2_PA5

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_FOREACH_NODELABEL(fn) fn(dac1_out2_pa5)
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_FOREACH_NODELABEL_VARGS(fn, ...) fn(dac1_out2_pa5, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_ORD 64
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_ORD_STR_SORTABLE 00064

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_SUPPORTS_ORDS \
	65, /* /soc/dac@42028400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_EXISTS 1
#define DT_N_NODELABEL_dac1_out2_pa5 DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_pinmux 176
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/dac@42028400
 *
 * Node identifier: DT_N_S_soc_S_dac_42028400
 *
 * Binding (compatible = st,stm32-dac):
 *   $ZEPHYR_BASE\dts\bindings\dac\st,stm32-dac.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dac_42028400_PATH "/soc/dac@42028400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dac_42028400_FULL_NAME "dac@42028400"
#define DT_N_S_soc_S_dac_42028400_FULL_NAME_UNQUOTED dac@42028400
#define DT_N_S_soc_S_dac_42028400_FULL_NAME_TOKEN dac_42028400
#define DT_N_S_soc_S_dac_42028400_FULL_NAME_UPPER_TOKEN DAC_42028400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dac_42028400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dac_42028400_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dac_42028400_NODELABEL_NUM 1
#define DT_N_S_soc_S_dac_42028400_FOREACH_NODELABEL(fn) fn(dac1)
#define DT_N_S_soc_S_dac_42028400_FOREACH_NODELABEL_VARGS(fn, ...) fn(dac1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dac_42028400_CHILD_NUM 0
#define DT_N_S_soc_S_dac_42028400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dac_42028400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dac_42028400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dac_42028400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dac_42028400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dac_42028400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dac_42028400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dac_42028400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dac_42028400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dac_42028400_ORD 65
#define DT_N_S_soc_S_dac_42028400_ORD_STR_SORTABLE 00065

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dac_42028400_REQUIRES_ORDS \
	4, /* /soc */ \
	9, /* /soc/rcc@44020c00 */ \
	64, /* /soc/pin-controller@42020000/dac1_out2_pa5 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dac_42028400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dac_42028400_EXISTS 1
#define DT_N_INST_0_st_stm32_dac DT_N_S_soc_S_dac_42028400
#define DT_N_NODELABEL_dac1      DT_N_S_soc_S_dac_42028400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dac_42028400_REG_NUM 1
#define DT_N_S_soc_S_dac_42028400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_42028400_REG_IDX_0_VAL_ADDRESS 1107461120 /* 0x42028400 */
#define DT_N_S_soc_S_dac_42028400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dac_42028400_RANGES_NUM 0
#define DT_N_S_soc_S_dac_42028400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dac_42028400_IRQ_NUM 0
#define DT_N_S_soc_S_dac_42028400_IRQ_LEVEL 0
#define DT_N_S_soc_S_dac_42028400_COMPAT_MATCHES_st_stm32_dac 1
#define DT_N_S_soc_S_dac_42028400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_42028400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_dac_42028400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_42028400_COMPAT_MODEL_IDX_0 "stm32-dac"
#define DT_N_S_soc_S_dac_42028400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dac_42028400_PINCTRL_NUM 1
#define DT_N_S_soc_S_dac_42028400_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_42028400_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_dac_42028400_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_dac_42028400_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_dac_42028400_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_dac_42028400_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5

/* Generic property macros: */
#define DT_N_S_soc_S_dac_42028400_P_reg {1107461120 /* 0x42028400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dac_42028400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_42028400_P_reg_IDX_0 1107461120
#define DT_N_S_soc_S_dac_42028400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dac_42028400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dac_42028400_P_reg_EXISTS 1
#define DT_N_S_soc_S_dac_42028400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_42028400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_dac_42028400_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_dac_42028400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dac_42028400_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_dac_42028400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dac_42028400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_42028400, clocks, 0)
#define DT_N_S_soc_S_dac_42028400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_42028400, clocks, 0)
#define DT_N_S_soc_S_dac_42028400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_42028400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_42028400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_42028400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_42028400_P_clocks_LEN 1
#define DT_N_S_soc_S_dac_42028400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dac_42028400_P_status "okay"
#define DT_N_S_soc_S_dac_42028400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_dac_42028400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_dac_42028400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_dac_42028400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_dac_42028400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_42028400_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_dac_42028400_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_dac_42028400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_42028400, status, 0)
#define DT_N_S_soc_S_dac_42028400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_42028400, status, 0)
#define DT_N_S_soc_S_dac_42028400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_42028400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_42028400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_42028400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_42028400_P_status_LEN 1
#define DT_N_S_soc_S_dac_42028400_P_status_EXISTS 1
#define DT_N_S_soc_S_dac_42028400_P_compatible {"st,stm32-dac"}
#define DT_N_S_soc_S_dac_42028400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_42028400_P_compatible_IDX_0 "st,stm32-dac"
#define DT_N_S_soc_S_dac_42028400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-dac
#define DT_N_S_soc_S_dac_42028400_P_compatible_IDX_0_STRING_TOKEN st_stm32_dac
#define DT_N_S_soc_S_dac_42028400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_DAC
#define DT_N_S_soc_S_dac_42028400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_42028400, compatible, 0)
#define DT_N_S_soc_S_dac_42028400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_42028400, compatible, 0)
#define DT_N_S_soc_S_dac_42028400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_42028400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_42028400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_42028400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_42028400_P_compatible_LEN 1
#define DT_N_S_soc_S_dac_42028400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dac_42028400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dac_42028400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dac_42028400_P_wakeup_source 0
#define DT_N_S_soc_S_dac_42028400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dac_42028400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dac_42028400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_dac_42028400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5
#define DT_N_S_soc_S_dac_42028400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5
#define DT_N_S_soc_S_dac_42028400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_42028400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_42028400, pinctrl_0, 0)
#define DT_N_S_soc_S_dac_42028400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_42028400, pinctrl_0, 0)
#define DT_N_S_soc_S_dac_42028400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_42028400, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_42028400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_42028400, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_42028400_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_dac_42028400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_dac_42028400_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_dac_42028400_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_42028400_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_dac_42028400_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_dac_42028400_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_dac_42028400_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_dac_42028400_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_42028400, pinctrl_names, 0)
#define DT_N_S_soc_S_dac_42028400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_42028400, pinctrl_names, 0)
#define DT_N_S_soc_S_dac_42028400_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_42028400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_42028400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_42028400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_42028400_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_dac_42028400_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/digi_dietemp@40008c00
 *
 * Node identifier: DT_N_S_soc_S_digi_dietemp_40008c00
 *
 * Binding (compatible = st,stm32-digi-temp):
 *   $ZEPHYR_BASE\dts\bindings\sensor\st,stm32-digi-temp.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_digi_dietemp_40008c00_PATH "/soc/digi_dietemp@40008c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_digi_dietemp_40008c00_FULL_NAME "digi_dietemp@40008c00"
#define DT_N_S_soc_S_digi_dietemp_40008c00_FULL_NAME_UNQUOTED digi_dietemp@40008c00
#define DT_N_S_soc_S_digi_dietemp_40008c00_FULL_NAME_TOKEN digi_dietemp_40008c00
#define DT_N_S_soc_S_digi_dietemp_40008c00_FULL_NAME_UPPER_TOKEN DIGI_DIETEMP_40008C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_digi_dietemp_40008c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_digi_dietemp_40008c00_CHILD_IDX 38

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_digi_dietemp_40008c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_FOREACH_NODELABEL(fn) fn(digi_die_temp)
#define DT_N_S_soc_S_digi_dietemp_40008c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(digi_die_temp, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_digi_dietemp_40008c00_CHILD_NUM 0
#define DT_N_S_soc_S_digi_dietemp_40008c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_digi_dietemp_40008c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_digi_dietemp_40008c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_digi_dietemp_40008c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_digi_dietemp_40008c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_digi_dietemp_40008c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_digi_dietemp_40008c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_digi_dietemp_40008c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_digi_dietemp_40008c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_digi_dietemp_40008c00_ORD 66
#define DT_N_S_soc_S_digi_dietemp_40008c00_ORD_STR_SORTABLE 00066

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_digi_dietemp_40008c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_digi_dietemp_40008c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_digi_dietemp_40008c00_EXISTS 1
#define DT_N_INST_0_st_stm32_digi_temp DT_N_S_soc_S_digi_dietemp_40008c00
#define DT_N_NODELABEL_digi_die_temp   DT_N_S_soc_S_digi_dietemp_40008c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_digi_dietemp_40008c00_REG_NUM 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_REG_IDX_0_VAL_ADDRESS 1073777664 /* 0x40008c00 */
#define DT_N_S_soc_S_digi_dietemp_40008c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_digi_dietemp_40008c00_RANGES_NUM 0
#define DT_N_S_soc_S_digi_dietemp_40008c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_digi_dietemp_40008c00_IRQ_NUM 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_IRQ_IDX_0_VAL_irq 113
#define DT_N_S_soc_S_digi_dietemp_40008c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_digi_dietemp_40008c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_digi_dietemp_40008c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_IRQ_NAME_digi_temp_VAL_irq DT_N_S_soc_S_digi_dietemp_40008c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_digi_dietemp_40008c00_IRQ_NAME_digi_temp_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_IRQ_NAME_digi_temp_VAL_priority DT_N_S_soc_S_digi_dietemp_40008c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_digi_dietemp_40008c00_IRQ_NAME_digi_temp_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_IRQ_NAME_digi_temp_CONTROLLER DT_N_S_soc_S_digi_dietemp_40008c00_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_digi_dietemp_40008c00_COMPAT_MATCHES_st_stm32_digi_temp 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_digi_dietemp_40008c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_COMPAT_MODEL_IDX_0 "stm32-digi-temp"
#define DT_N_S_soc_S_digi_dietemp_40008c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_digi_dietemp_40008c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_reg {1073777664 /* 0x40008c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_reg_IDX_0 1073777664
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_interrupts {113 /* 0x71 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_interrupts_IDX_0 113
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_clocks_IDX_0_VAL_bus 160
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_clocks_IDX_0_VAL_bits 8
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_digi_dietemp_40008c00, clocks, 0)
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_digi_dietemp_40008c00, clocks, 0)
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_digi_dietemp_40008c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_digi_dietemp_40008c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_clocks_LEN 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_status "disabled"
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_digi_dietemp_40008c00, status, 0)
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_digi_dietemp_40008c00, status, 0)
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_digi_dietemp_40008c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_digi_dietemp_40008c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_status_LEN 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_status_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_compatible {"st,stm32-digi-temp"}
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_compatible_IDX_0 "st,stm32-digi-temp"
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-digi-temp
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_digi_temp
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_DIGI_TEMP
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_digi_dietemp_40008c00, compatible, 0)
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_digi_dietemp_40008c00, compatible, 0)
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_digi_dietemp_40008c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_digi_dietemp_40008c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_compatible_LEN 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_interrupt_names {"digi_temp"}
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_interrupt_names_IDX_0 "digi_temp"
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_interrupt_names_IDX_0_STRING_UNQUOTED digi_temp
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_interrupt_names_IDX_0_STRING_TOKEN digi_temp
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN DIGI_TEMP
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_digi_dietemp_40008c00, interrupt_names, 0)
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_digi_dietemp_40008c00, interrupt_names, 0)
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_digi_dietemp_40008c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_digi_dietemp_40008c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_wakeup_source 0
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_digi_dietemp_40008c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/dma@40021000
 *
 * Node identifier: DT_N_S_soc_S_dma_40021000
 *
 * Binding (compatible = st,stm32u5-dma):
 *   $ZEPHYR_BASE\dts\bindings\dma\st,stm32u5-dma.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_40021000_PATH "/soc/dma@40021000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_40021000_FULL_NAME "dma@40021000"
#define DT_N_S_soc_S_dma_40021000_FULL_NAME_UNQUOTED dma@40021000
#define DT_N_S_soc_S_dma_40021000_FULL_NAME_TOKEN dma_40021000
#define DT_N_S_soc_S_dma_40021000_FULL_NAME_UPPER_TOKEN DMA_40021000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_40021000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dma_40021000_CHILD_IDX 33

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dma_40021000_NODELABEL_NUM 1
#define DT_N_S_soc_S_dma_40021000_FOREACH_NODELABEL(fn) fn(gpdma2)
#define DT_N_S_soc_S_dma_40021000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpdma2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dma_40021000_CHILD_NUM 0
#define DT_N_S_soc_S_dma_40021000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dma_40021000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_40021000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40021000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40021000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dma_40021000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_40021000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40021000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40021000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_40021000_ORD 67
#define DT_N_S_soc_S_dma_40021000_ORD_STR_SORTABLE 00067

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_40021000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_40021000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_40021000_EXISTS 1
#define DT_N_INST_1_st_stm32u5_dma DT_N_S_soc_S_dma_40021000
#define DT_N_NODELABEL_gpdma2      DT_N_S_soc_S_dma_40021000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_40021000_REG_NUM 1
#define DT_N_S_soc_S_dma_40021000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_REG_IDX_0_VAL_ADDRESS 1073876992 /* 0x40021000 */
#define DT_N_S_soc_S_dma_40021000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_dma_40021000_RANGES_NUM 0
#define DT_N_S_soc_S_dma_40021000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dma_40021000_IRQ_NUM 8
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_0_VAL_irq 90
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_1_VAL_irq 91
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_2_VAL_irq 92
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_3_VAL_irq 93
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_4_VAL_irq 94
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_5_VAL_irq 95
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_5_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_6_VAL_irq 96
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_6_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_7_VAL_irq 97
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_7_VAL_priority 0
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_IRQ_IDX_7_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40021000_IRQ_LEVEL 1
#define DT_N_S_soc_S_dma_40021000_COMPAT_MATCHES_st_stm32u5_dma 1
#define DT_N_S_soc_S_dma_40021000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_dma_40021000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_COMPAT_MODEL_IDX_0 "stm32u5-dma"
#define DT_N_S_soc_S_dma_40021000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_40021000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_40021000_P_reg {1073876992 /* 0x40021000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_dma_40021000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_reg_IDX_0 1073876992
#define DT_N_S_soc_S_dma_40021000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_dma_40021000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_interrupts {90 /* 0x5a */, 0 /* 0x0 */, 91 /* 0x5b */, 0 /* 0x0 */, 92 /* 0x5c */, 0 /* 0x0 */, 93 /* 0x5d */, 0 /* 0x0 */, 94 /* 0x5e */, 0 /* 0x0 */, 95 /* 0x5f */, 0 /* 0x0 */, 96 /* 0x60 */, 0 /* 0x0 */, 97 /* 0x61 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_0 90
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_2 91
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_4 92
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_6 93
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_8 94
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_10 95
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_12 96
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_14 97
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_interrupts_IDX_15 0
#define DT_N_S_soc_S_dma_40021000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_st_mem2mem 0
#define DT_N_S_soc_S_dma_40021000_P_st_mem2mem_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_dma_offset 8
#define DT_N_S_soc_S_dma_40021000_P_dma_offset_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_dma_channels 8
#define DT_N_S_soc_S_dma_40021000_P_dma_channels_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_dma_requests 140
#define DT_N_S_soc_S_dma_40021000_P_dma_requests_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_status "okay"
#define DT_N_S_soc_S_dma_40021000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_dma_40021000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_dma_40021000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_dma_40021000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_dma_40021000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_dma_40021000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40021000, status, 0)
#define DT_N_S_soc_S_dma_40021000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40021000, status, 0)
#define DT_N_S_soc_S_dma_40021000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40021000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40021000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40021000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40021000_P_status_LEN 1
#define DT_N_S_soc_S_dma_40021000_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_compatible {"st,stm32u5-dma"}
#define DT_N_S_soc_S_dma_40021000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_compatible_IDX_0 "st,stm32u5-dma"
#define DT_N_S_soc_S_dma_40021000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32u5-dma
#define DT_N_S_soc_S_dma_40021000_P_compatible_IDX_0_STRING_TOKEN st_stm32u5_dma
#define DT_N_S_soc_S_dma_40021000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32U5_DMA
#define DT_N_S_soc_S_dma_40021000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40021000, compatible, 0)
#define DT_N_S_soc_S_dma_40021000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40021000, compatible, 0)
#define DT_N_S_soc_S_dma_40021000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40021000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40021000_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_40021000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_dma_40021000_P_clocks_IDX_0_VAL_bus 136
#define DT_N_S_soc_S_dma_40021000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_dma_40021000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40021000, clocks, 0)
#define DT_N_S_soc_S_dma_40021000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40021000, clocks, 0)
#define DT_N_S_soc_S_dma_40021000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40021000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40021000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40021000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40021000_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_40021000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dma_40021000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_wakeup_source 0
#define DT_N_S_soc_S_dma_40021000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dma_40021000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dma_40021000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/dma@40020000
 *
 * Node identifier: DT_N_S_soc_S_dma_40020000
 *
 * Binding (compatible = st,stm32u5-dma):
 *   $ZEPHYR_BASE\dts\bindings\dma\st,stm32u5-dma.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_40020000_PATH "/soc/dma@40020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_40020000_FULL_NAME "dma@40020000"
#define DT_N_S_soc_S_dma_40020000_FULL_NAME_UNQUOTED dma@40020000
#define DT_N_S_soc_S_dma_40020000_FULL_NAME_TOKEN dma_40020000
#define DT_N_S_soc_S_dma_40020000_FULL_NAME_UPPER_TOKEN DMA_40020000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_40020000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dma_40020000_CHILD_IDX 32

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dma_40020000_NODELABEL_NUM 1
#define DT_N_S_soc_S_dma_40020000_FOREACH_NODELABEL(fn) fn(gpdma1)
#define DT_N_S_soc_S_dma_40020000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpdma1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dma_40020000_CHILD_NUM 0
#define DT_N_S_soc_S_dma_40020000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_40020000_ORD 68
#define DT_N_S_soc_S_dma_40020000_ORD_STR_SORTABLE 00068

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_40020000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_40020000_SUPPORTS_ORDS \
	69, /* /soc/i2s@40003800 */ \
	70, /* /soc/i2s@40003c00 */ \
	71, /* /soc/i2s@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_40020000_EXISTS 1
#define DT_N_INST_0_st_stm32u5_dma DT_N_S_soc_S_dma_40020000
#define DT_N_NODELABEL_gpdma1      DT_N_S_soc_S_dma_40020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_40020000_REG_NUM 1
#define DT_N_S_soc_S_dma_40020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_REG_IDX_0_VAL_ADDRESS 1073872896 /* 0x40020000 */
#define DT_N_S_soc_S_dma_40020000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_dma_40020000_RANGES_NUM 0
#define DT_N_S_soc_S_dma_40020000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dma_40020000_IRQ_NUM 8
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_irq 27
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_irq 28
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_irq 29
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_irq 30
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_irq 31
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_VAL_irq 32
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_VAL_irq 33
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_7_VAL_irq 34
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_7_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_7_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40020000_IRQ_LEVEL 1
#define DT_N_S_soc_S_dma_40020000_COMPAT_MATCHES_st_stm32u5_dma 1
#define DT_N_S_soc_S_dma_40020000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_dma_40020000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_COMPAT_MODEL_IDX_0 "stm32u5-dma"
#define DT_N_S_soc_S_dma_40020000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_40020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_40020000_P_reg {1073872896 /* 0x40020000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_0 1073872896
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_dma_40020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts {27 /* 0x1b */, 0 /* 0x0 */, 28 /* 0x1c */, 0 /* 0x0 */, 29 /* 0x1d */, 0 /* 0x0 */, 30 /* 0x1e */, 0 /* 0x0 */, 31 /* 0x1f */, 0 /* 0x0 */, 32 /* 0x20 */, 0 /* 0x0 */, 33 /* 0x21 */, 0 /* 0x0 */, 34 /* 0x22 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_0 27
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_2 28
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_4 29
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_6 30
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_8 31
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_10 32
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_12 33
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_14 34
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_15 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_st_mem2mem 0
#define DT_N_S_soc_S_dma_40020000_P_st_mem2mem_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_dma_offset 0
#define DT_N_S_soc_S_dma_40020000_P_dma_offset_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_dma_channels 8
#define DT_N_S_soc_S_dma_40020000_P_dma_channels_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_dma_requests 140
#define DT_N_S_soc_S_dma_40020000_P_dma_requests_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_status "okay"
#define DT_N_S_soc_S_dma_40020000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_dma_40020000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_dma_40020000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_dma_40020000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_dma_40020000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_dma_40020000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020000, status, 0)
#define DT_N_S_soc_S_dma_40020000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020000, status, 0)
#define DT_N_S_soc_S_dma_40020000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_status_LEN 1
#define DT_N_S_soc_S_dma_40020000_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_compatible {"st,stm32u5-dma"}
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0 "st,stm32u5-dma"
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32u5-dma
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0_STRING_TOKEN st_stm32u5_dma
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32U5_DMA
#define DT_N_S_soc_S_dma_40020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020000, compatible, 0)
#define DT_N_S_soc_S_dma_40020000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020000, compatible, 0)
#define DT_N_S_soc_S_dma_40020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_40020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bus 136
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020000, clocks, 0)
#define DT_N_S_soc_S_dma_40020000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020000, clocks, 0)
#define DT_N_S_soc_S_dma_40020000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dma_40020000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_wakeup_source 0
#define DT_N_S_soc_S_dma_40020000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dma_40020000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2s@40003800
 *
 * Node identifier: DT_N_S_soc_S_i2s_40003800
 *
 * Binding (compatible = st,stm32h7-i2s):
 *   $ZEPHYR_BASE\dts\bindings\i2s\st,stm32h7-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_40003800_PATH "/soc/i2s@40003800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_40003800_FULL_NAME "i2s@40003800"
#define DT_N_S_soc_S_i2s_40003800_FULL_NAME_UNQUOTED i2s@40003800
#define DT_N_S_soc_S_i2s_40003800_FULL_NAME_TOKEN i2s_40003800
#define DT_N_S_soc_S_i2s_40003800_FULL_NAME_UPPER_TOKEN I2S_40003800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_40003800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2s_40003800_CHILD_IDX 35

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2s_40003800_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2s_40003800_FOREACH_NODELABEL(fn) fn(i2s2)
#define DT_N_S_soc_S_i2s_40003800_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2s2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2s_40003800_CHILD_NUM 0
#define DT_N_S_soc_S_i2s_40003800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_40003800_ORD 69
#define DT_N_S_soc_S_i2s_40003800_ORD_STR_SORTABLE 00069

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_40003800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	68, /* /soc/dma@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_40003800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_40003800_EXISTS 1
#define DT_N_INST_1_st_stm32h7_i2s DT_N_S_soc_S_i2s_40003800
#define DT_N_INST_1_st_stm32_i2s   DT_N_S_soc_S_i2s_40003800
#define DT_N_NODELABEL_i2s2        DT_N_S_soc_S_i2s_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2s_40003800_REG_NUM 1
#define DT_N_S_soc_S_i2s_40003800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_REG_IDX_0_VAL_ADDRESS 1073756160 /* 0x40003800 */
#define DT_N_S_soc_S_i2s_40003800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2s_40003800_RANGES_NUM 0
#define DT_N_S_soc_S_i2s_40003800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2s_40003800_IRQ_NUM 1
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_VAL_irq 56
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2s_40003800_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2s_40003800_COMPAT_MATCHES_st_stm32h7_i2s 1
#define DT_N_S_soc_S_i2s_40003800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2s_40003800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_COMPAT_MODEL_IDX_0 "stm32h7-i2s"
#define DT_N_S_soc_S_i2s_40003800_COMPAT_MATCHES_st_stm32_i2s 1
#define DT_N_S_soc_S_i2s_40003800_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_i2s_40003800_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_COMPAT_MODEL_IDX_1 "stm32-i2s"
#define DT_N_S_soc_S_i2s_40003800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2s_40003800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_40003800_P_reg {1073756160 /* 0x40003800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2s_40003800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_reg_IDX_0 1073756160
#define DT_N_S_soc_S_i2s_40003800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2s_40003800_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_interrupts {56 /* 0x38 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_IDX_0 56
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_IDX_1 3
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_40020000
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel 2
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_slot 9
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel_config 142400
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_40020000
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_channel DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_slot DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_slot
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_channel_config DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel_config
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_40020000
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel 3
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_slot 8
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel_config 142464
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_40020000
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_channel DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_slot DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_slot
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_channel_config DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel_config
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, dmas, 0) \
	fn(DT_N_S_soc_S_i2s_40003800, dmas, 1)
#define DT_N_S_soc_S_i2s_40003800_P_dmas_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40003800, dmas, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40003800, dmas, 1)
#define DT_N_S_soc_S_i2s_40003800_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_dmas_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40003800, dmas, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40003800, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_dmas_LEN 2
#define DT_N_S_soc_S_i2s_40003800_P_dmas_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_0_STRING_UNQUOTED tx
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_0_STRING_TOKEN tx
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_0_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_1_STRING_UNQUOTED rx
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_1_STRING_TOKEN rx
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_1_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, dma_names, 0) \
	fn(DT_N_S_soc_S_i2s_40003800, dma_names, 1)
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40003800, dma_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40003800, dma_names, 1)
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40003800, dma_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40003800, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_LEN 2
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_mck_enabled 0
#define DT_N_S_soc_S_i2s_40003800_P_mck_enabled_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_status "disabled"
#define DT_N_S_soc_S_i2s_40003800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2s_40003800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2s_40003800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40003800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2s_40003800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_i2s_40003800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, status, 0)
#define DT_N_S_soc_S_i2s_40003800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40003800, status, 0)
#define DT_N_S_soc_S_i2s_40003800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40003800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_status_LEN 1
#define DT_N_S_soc_S_i2s_40003800_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_compatible {"st,stm32h7-i2s", "st,stm32-i2s"}
#define DT_N_S_soc_S_i2s_40003800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_compatible_IDX_0 "st,stm32h7-i2s"
#define DT_N_S_soc_S_i2s_40003800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32h7-i2s
#define DT_N_S_soc_S_i2s_40003800_P_compatible_IDX_0_STRING_TOKEN st_stm32h7_i2s
#define DT_N_S_soc_S_i2s_40003800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32H7_I2S
#define DT_N_S_soc_S_i2s_40003800_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_compatible_IDX_1 "st,stm32-i2s"
#define DT_N_S_soc_S_i2s_40003800_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-i2s
#define DT_N_S_soc_S_i2s_40003800_P_compatible_IDX_1_STRING_TOKEN st_stm32_i2s
#define DT_N_S_soc_S_i2s_40003800_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_I2S
#define DT_N_S_soc_S_i2s_40003800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, compatible, 0) \
	fn(DT_N_S_soc_S_i2s_40003800, compatible, 1)
#define DT_N_S_soc_S_i2s_40003800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40003800, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40003800, compatible, 1)
#define DT_N_S_soc_S_i2s_40003800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40003800, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40003800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_compatible_LEN 2
#define DT_N_S_soc_S_i2s_40003800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_1_VAL_bus 13
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_1_VAL_bits 58336
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, clocks, 0) \
	fn(DT_N_S_soc_S_i2s_40003800, clocks, 1)
#define DT_N_S_soc_S_i2s_40003800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40003800, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40003800, clocks, 1)
#define DT_N_S_soc_S_i2s_40003800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40003800, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40003800, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_clocks_LEN 2
#define DT_N_S_soc_S_i2s_40003800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2s_40003800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_wakeup_source 0
#define DT_N_S_soc_S_i2s_40003800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2s_40003800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2s@40003c00
 *
 * Node identifier: DT_N_S_soc_S_i2s_40003c00
 *
 * Binding (compatible = st,stm32h7-i2s):
 *   $ZEPHYR_BASE\dts\bindings\i2s\st,stm32h7-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_40003c00_PATH "/soc/i2s@40003c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_40003c00_FULL_NAME "i2s@40003c00"
#define DT_N_S_soc_S_i2s_40003c00_FULL_NAME_UNQUOTED i2s@40003c00
#define DT_N_S_soc_S_i2s_40003c00_FULL_NAME_TOKEN i2s_40003c00
#define DT_N_S_soc_S_i2s_40003c00_FULL_NAME_UPPER_TOKEN I2S_40003C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_40003c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2s_40003c00_CHILD_IDX 36

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2s_40003c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_NODELABEL(fn) fn(i2s3)
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2s3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2s_40003c00_CHILD_NUM 0
#define DT_N_S_soc_S_i2s_40003c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_40003c00_ORD 70
#define DT_N_S_soc_S_i2s_40003c00_ORD_STR_SORTABLE 00070

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_40003c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	68, /* /soc/dma@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_40003c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_40003c00_EXISTS 1
#define DT_N_INST_2_st_stm32h7_i2s DT_N_S_soc_S_i2s_40003c00
#define DT_N_INST_2_st_stm32_i2s   DT_N_S_soc_S_i2s_40003c00
#define DT_N_NODELABEL_i2s3        DT_N_S_soc_S_i2s_40003c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2s_40003c00_REG_NUM 1
#define DT_N_S_soc_S_i2s_40003c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_REG_IDX_0_VAL_ADDRESS 1073757184 /* 0x40003c00 */
#define DT_N_S_soc_S_i2s_40003c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2s_40003c00_RANGES_NUM 0
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2s_40003c00_IRQ_NUM 1
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_VAL_irq 57
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2s_40003c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2s_40003c00_COMPAT_MATCHES_st_stm32h7_i2s 1
#define DT_N_S_soc_S_i2s_40003c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2s_40003c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_COMPAT_MODEL_IDX_0 "stm32h7-i2s"
#define DT_N_S_soc_S_i2s_40003c00_COMPAT_MATCHES_st_stm32_i2s 1
#define DT_N_S_soc_S_i2s_40003c00_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_i2s_40003c00_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_COMPAT_MODEL_IDX_1 "stm32-i2s"
#define DT_N_S_soc_S_i2s_40003c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2s_40003c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_40003c00_P_reg {1073757184 /* 0x40003c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2s_40003c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_reg_IDX_0 1073757184
#define DT_N_S_soc_S_i2s_40003c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2s_40003c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts {57 /* 0x39 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_IDX_0 57
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_IDX_1 3
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_40020000
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel 4
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_slot 11
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel_config 142400
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_40020000
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_channel DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_slot DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_slot
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_channel_config DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel_config
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_40020000
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel 5
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_slot 10
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel_config 142464
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_40020000
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_channel DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_slot DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_slot
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_channel_config DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel_config
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, dmas, 0) \
	fn(DT_N_S_soc_S_i2s_40003c00, dmas, 1)
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40003c00, dmas, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40003c00, dmas, 1)
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40003c00, dmas, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40003c00, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_LEN 2
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_0_STRING_UNQUOTED tx
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_0_STRING_TOKEN tx
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_0_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_1_STRING_UNQUOTED rx
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_1_STRING_TOKEN rx
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_1_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 0) \
	fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 1)
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 1)
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_LEN 2
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_mck_enabled 0
#define DT_N_S_soc_S_i2s_40003c00_P_mck_enabled_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_status "disabled"
#define DT_N_S_soc_S_i2s_40003c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2s_40003c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2s_40003c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40003c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2s_40003c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_i2s_40003c00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, status, 0)
#define DT_N_S_soc_S_i2s_40003c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40003c00, status, 0)
#define DT_N_S_soc_S_i2s_40003c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40003c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_status_LEN 1
#define DT_N_S_soc_S_i2s_40003c00_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_compatible {"st,stm32h7-i2s", "st,stm32-i2s"}
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_IDX_0 "st,stm32h7-i2s"
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32h7-i2s
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_IDX_0_STRING_TOKEN st_stm32h7_i2s
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32H7_I2S
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_IDX_1 "st,stm32-i2s"
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-i2s
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_IDX_1_STRING_TOKEN st_stm32_i2s
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_I2S
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, compatible, 0) \
	fn(DT_N_S_soc_S_i2s_40003c00, compatible, 1)
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40003c00, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40003c00, compatible, 1)
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40003c00, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40003c00, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_LEN 2
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_VAL_bits 32768
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_1_VAL_bus 13
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_1_VAL_bits 59104
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, clocks, 0) \
	fn(DT_N_S_soc_S_i2s_40003c00, clocks, 1)
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40003c00, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40003c00, clocks, 1)
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40003c00, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40003c00, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_LEN 2
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2s_40003c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_wakeup_source 0
#define DT_N_S_soc_S_i2s_40003c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2s_40003c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2s@40013000
 *
 * Node identifier: DT_N_S_soc_S_i2s_40013000
 *
 * Binding (compatible = st,stm32h7-i2s):
 *   $ZEPHYR_BASE\dts\bindings\i2s\st,stm32h7-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_40013000_PATH "/soc/i2s@40013000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_40013000_FULL_NAME "i2s@40013000"
#define DT_N_S_soc_S_i2s_40013000_FULL_NAME_UNQUOTED i2s@40013000
#define DT_N_S_soc_S_i2s_40013000_FULL_NAME_TOKEN i2s_40013000
#define DT_N_S_soc_S_i2s_40013000_FULL_NAME_UPPER_TOKEN I2S_40013000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_40013000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2s_40013000_CHILD_IDX 34

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2s_40013000_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2s_40013000_FOREACH_NODELABEL(fn) fn(i2s1)
#define DT_N_S_soc_S_i2s_40013000_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2s1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2s_40013000_CHILD_NUM 0
#define DT_N_S_soc_S_i2s_40013000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2s_40013000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_40013000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_40013000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40013000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2s_40013000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2s_40013000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_40013000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40013000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_40013000_ORD 71
#define DT_N_S_soc_S_i2s_40013000_ORD_STR_SORTABLE 00071

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_40013000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	68, /* /soc/dma@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_40013000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_40013000_EXISTS 1
#define DT_N_INST_0_st_stm32h7_i2s DT_N_S_soc_S_i2s_40013000
#define DT_N_INST_0_st_stm32_i2s   DT_N_S_soc_S_i2s_40013000
#define DT_N_NODELABEL_i2s1        DT_N_S_soc_S_i2s_40013000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2s_40013000_REG_NUM 1
#define DT_N_S_soc_S_i2s_40013000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_REG_IDX_0_VAL_ADDRESS 1073819648 /* 0x40013000 */
#define DT_N_S_soc_S_i2s_40013000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2s_40013000_RANGES_NUM 0
#define DT_N_S_soc_S_i2s_40013000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2s_40013000_IRQ_NUM 1
#define DT_N_S_soc_S_i2s_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_IRQ_IDX_0_VAL_irq 55
#define DT_N_S_soc_S_i2s_40013000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_i2s_40013000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2s_40013000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2s_40013000_COMPAT_MATCHES_st_stm32h7_i2s 1
#define DT_N_S_soc_S_i2s_40013000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2s_40013000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_COMPAT_MODEL_IDX_0 "stm32h7-i2s"
#define DT_N_S_soc_S_i2s_40013000_COMPAT_MATCHES_st_stm32_i2s 1
#define DT_N_S_soc_S_i2s_40013000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_i2s_40013000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_COMPAT_MODEL_IDX_1 "stm32-i2s"
#define DT_N_S_soc_S_i2s_40013000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2s_40013000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_40013000_P_reg {1073819648 /* 0x40013000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2s_40013000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_reg_IDX_0 1073819648
#define DT_N_S_soc_S_i2s_40013000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2s_40013000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_interrupts {55 /* 0x37 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_i2s_40013000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_interrupts_IDX_0 55
#define DT_N_S_soc_S_i2s_40013000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_interrupts_IDX_1 3
#define DT_N_S_soc_S_i2s_40013000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_40020000
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_channel 0
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_slot 7
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_channel_config 142400
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_40020000
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_VAL_channel DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_channel
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_VAL_slot DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_slot
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_VAL_channel_config DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_channel_config
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_40020000
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_channel 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_slot 6
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_channel_config 142464
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_40020000
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_VAL_channel DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_channel
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_VAL_slot DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_slot
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_VAL_channel_config DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_channel_config
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013000, dmas, 0) \
	fn(DT_N_S_soc_S_i2s_40013000, dmas, 1)
#define DT_N_S_soc_S_i2s_40013000_P_dmas_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40013000, dmas, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40013000, dmas, 1)
#define DT_N_S_soc_S_i2s_40013000_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013000, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_dmas_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40013000, dmas, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40013000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_dmas_LEN 2
#define DT_N_S_soc_S_i2s_40013000_P_dmas_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_IDX_0_STRING_UNQUOTED tx
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_IDX_0_STRING_TOKEN tx
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_IDX_0_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_IDX_1_STRING_UNQUOTED rx
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_IDX_1_STRING_TOKEN rx
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_IDX_1_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013000, dma_names, 0) \
	fn(DT_N_S_soc_S_i2s_40013000, dma_names, 1)
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40013000, dma_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40013000, dma_names, 1)
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013000, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40013000, dma_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40013000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_LEN 2
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_mck_enabled 0
#define DT_N_S_soc_S_i2s_40013000_P_mck_enabled_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_status "disabled"
#define DT_N_S_soc_S_i2s_40013000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2s_40013000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2s_40013000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40013000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2s_40013000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_i2s_40013000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013000, status, 0)
#define DT_N_S_soc_S_i2s_40013000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40013000, status, 0)
#define DT_N_S_soc_S_i2s_40013000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_status_LEN 1
#define DT_N_S_soc_S_i2s_40013000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_compatible {"st,stm32h7-i2s", "st,stm32-i2s"}
#define DT_N_S_soc_S_i2s_40013000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_compatible_IDX_0 "st,stm32h7-i2s"
#define DT_N_S_soc_S_i2s_40013000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32h7-i2s
#define DT_N_S_soc_S_i2s_40013000_P_compatible_IDX_0_STRING_TOKEN st_stm32h7_i2s
#define DT_N_S_soc_S_i2s_40013000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32H7_I2S
#define DT_N_S_soc_S_i2s_40013000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_compatible_IDX_1 "st,stm32-i2s"
#define DT_N_S_soc_S_i2s_40013000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-i2s
#define DT_N_S_soc_S_i2s_40013000_P_compatible_IDX_1_STRING_TOKEN st_stm32_i2s
#define DT_N_S_soc_S_i2s_40013000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_I2S
#define DT_N_S_soc_S_i2s_40013000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013000, compatible, 0) \
	fn(DT_N_S_soc_S_i2s_40013000, compatible, 1)
#define DT_N_S_soc_S_i2s_40013000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40013000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40013000, compatible, 1)
#define DT_N_S_soc_S_i2s_40013000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40013000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40013000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_compatible_LEN 2
#define DT_N_S_soc_S_i2s_40013000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_i2s_40013000_P_clocks_IDX_0_VAL_bus 164
#define DT_N_S_soc_S_i2s_40013000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_clocks_IDX_0_VAL_bits 4096
#define DT_N_S_soc_S_i2s_40013000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_i2s_40013000_P_clocks_IDX_1_VAL_bus 13
#define DT_N_S_soc_S_i2s_40013000_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_clocks_IDX_1_VAL_bits 57568
#define DT_N_S_soc_S_i2s_40013000_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013000, clocks, 0) \
	fn(DT_N_S_soc_S_i2s_40013000, clocks, 1)
#define DT_N_S_soc_S_i2s_40013000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40013000, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40013000, clocks, 1)
#define DT_N_S_soc_S_i2s_40013000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013000, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40013000, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40013000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_clocks_LEN 2
#define DT_N_S_soc_S_i2s_40013000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2s_40013000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_wakeup_source 0
#define DT_N_S_soc_S_i2s_40013000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2s_40013000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@44022000
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_44022000
 *
 * Binding (compatible = st,stm32g0-exti):
 *   $ZEPHYR_BASE\dts\bindings\interrupt-controller\st,stm32g0-exti.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_44022000_PATH "/soc/interrupt-controller@44022000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_44022000_FULL_NAME "interrupt-controller@44022000"
#define DT_N_S_soc_S_interrupt_controller_44022000_FULL_NAME_UNQUOTED interrupt-controller@44022000
#define DT_N_S_soc_S_interrupt_controller_44022000_FULL_NAME_TOKEN interrupt_controller_44022000
#define DT_N_S_soc_S_interrupt_controller_44022000_FULL_NAME_UPPER_TOKEN INTERRUPT_CONTROLLER_44022000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_44022000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_44022000_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_interrupt_controller_44022000_NODELABEL_NUM 1
#define DT_N_S_soc_S_interrupt_controller_44022000_FOREACH_NODELABEL(fn) fn(exti)
#define DT_N_S_soc_S_interrupt_controller_44022000_FOREACH_NODELABEL_VARGS(fn, ...) fn(exti, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_44022000_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_44022000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_44022000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_44022000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_44022000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_44022000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_44022000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_44022000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_44022000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_44022000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_44022000_ORD 72
#define DT_N_S_soc_S_interrupt_controller_44022000_ORD_STR_SORTABLE 00072

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_44022000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_44022000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_44022000_EXISTS 1
#define DT_N_INST_0_st_stm32g0_exti DT_N_S_soc_S_interrupt_controller_44022000
#define DT_N_INST_0_st_stm32_exti   DT_N_S_soc_S_interrupt_controller_44022000
#define DT_N_NODELABEL_exti         DT_N_S_soc_S_interrupt_controller_44022000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_44022000_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_44022000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_REG_IDX_0_VAL_ADDRESS 1140989952 /* 0x44022000 */
#define DT_N_S_soc_S_interrupt_controller_44022000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_interrupt_controller_44022000_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_44022000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NUM 16
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_1_VAL_irq 12
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_2_VAL_irq 13
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_3_VAL_irq 14
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_4_VAL_irq 15
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_5_VAL_irq 16
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_5_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_6_VAL_irq 17
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_6_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_7_VAL_irq 18
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_7_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_7_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_8_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_8_VAL_irq 19
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_8_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_8_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_8_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_8_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_8_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_9_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_9_VAL_irq 20
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_9_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_9_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_9_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_9_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_9_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_10_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_10_VAL_irq 21
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_10_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_10_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_10_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_10_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_10_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_11_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_11_VAL_irq 22
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_11_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_11_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_11_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_11_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_11_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_12_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_12_VAL_irq 23
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_12_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_12_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_12_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_12_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_12_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_13_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_13_VAL_irq 24
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_13_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_13_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_13_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_13_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_13_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_14_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_14_VAL_irq 25
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_14_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_14_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_14_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_14_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_14_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_15_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_15_VAL_irq 26
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_15_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_15_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_15_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_15_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_15_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_LEVEL 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line0_VAL_irq DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line0_VAL_priority DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line0_CONTROLLER DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line1_VAL_irq DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line1_VAL_priority DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line1_CONTROLLER DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line2_VAL_irq DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line2_VAL_priority DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line2_CONTROLLER DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line3_VAL_irq DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line3_VAL_priority DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line3_CONTROLLER DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_3_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line4_VAL_irq DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_4_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line4_VAL_priority DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_4_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line4_CONTROLLER DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_4_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line5_VAL_irq DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_5_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line5_VAL_priority DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_5_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line5_CONTROLLER DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_5_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line6_VAL_irq DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_6_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line6_VAL_priority DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_6_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line6_CONTROLLER DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_6_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line7_VAL_irq DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_7_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line7_VAL_priority DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_7_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line7_CONTROLLER DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_7_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line8_VAL_irq DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_8_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line8_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line8_VAL_priority DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_8_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line8_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line8_CONTROLLER DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_8_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line9_VAL_irq DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_9_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line9_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line9_VAL_priority DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_9_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line9_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line9_CONTROLLER DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_9_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line10_VAL_irq DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_10_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line10_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line10_VAL_priority DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_10_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line10_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line10_CONTROLLER DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_10_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line11_VAL_irq DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_11_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line11_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line11_VAL_priority DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_11_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line11_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line11_CONTROLLER DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_11_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line12_VAL_irq DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_12_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line12_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line12_VAL_priority DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_12_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line12_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line12_CONTROLLER DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_12_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line13_VAL_irq DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_13_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line13_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line13_VAL_priority DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_13_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line13_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line13_CONTROLLER DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_13_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line14_VAL_irq DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_14_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line14_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line14_VAL_priority DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_14_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line14_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line14_CONTROLLER DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_14_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line15_VAL_irq DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_15_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line15_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line15_VAL_priority DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_15_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line15_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_IRQ_NAME_line15_CONTROLLER DT_N_S_soc_S_interrupt_controller_44022000_IRQ_IDX_15_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_44022000_COMPAT_MATCHES_st_stm32g0_exti 1
#define DT_N_S_soc_S_interrupt_controller_44022000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_interrupt_controller_44022000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_COMPAT_MODEL_IDX_0 "stm32g0-exti"
#define DT_N_S_soc_S_interrupt_controller_44022000_COMPAT_MATCHES_st_stm32_exti 1
#define DT_N_S_soc_S_interrupt_controller_44022000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_interrupt_controller_44022000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_COMPAT_MODEL_IDX_1 "stm32-exti"
#define DT_N_S_soc_S_interrupt_controller_44022000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_44022000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_44022000_P_reg {1140989952 /* 0x44022000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_interrupt_controller_44022000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_reg_IDX_0 1140989952
#define DT_N_S_soc_S_interrupt_controller_44022000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_interrupt_controller_44022000_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts {11 /* 0xb */, 0 /* 0x0 */, 12 /* 0xc */, 0 /* 0x0 */, 13 /* 0xd */, 0 /* 0x0 */, 14 /* 0xe */, 0 /* 0x0 */, 15 /* 0xf */, 0 /* 0x0 */, 16 /* 0x10 */, 0 /* 0x0 */, 17 /* 0x11 */, 0 /* 0x0 */, 18 /* 0x12 */, 0 /* 0x0 */, 19 /* 0x13 */, 0 /* 0x0 */, 20 /* 0x14 */, 0 /* 0x0 */, 21 /* 0x15 */, 0 /* 0x0 */, 22 /* 0x16 */, 0 /* 0x0 */, 23 /* 0x17 */, 0 /* 0x0 */, 24 /* 0x18 */, 0 /* 0x0 */, 25 /* 0x19 */, 0 /* 0x0 */, 26 /* 0x1a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_2 12
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_4 13
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_6 14
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_8 15
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_10 16
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_12 17
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_14 18
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_15 0
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_16_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_16 19
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_17_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_17 0
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_18_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_18 20
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_19_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_19 0
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_20_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_20 21
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_21_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_21 0
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_22_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_22 22
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_23_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_23 0
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_24_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_24 23
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_25_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_25 0
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_26_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_26 24
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_27_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_27 0
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_28_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_28 25
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_29_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_29 0
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_30_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_30 26
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_31_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_IDX_31 0
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names {"line0", "line1", "line2", "line3", "line4", "line5", "line6", "line7", "line8", "line9", "line10", "line11", "line12", "line13", "line14", "line15"}
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_0 "line0"
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_0_STRING_UNQUOTED line0
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_0_STRING_TOKEN line0
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN LINE0
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_1 "line1"
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_1_STRING_UNQUOTED line1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_1_STRING_TOKEN line1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN LINE1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_2 "line2"
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_2_STRING_UNQUOTED line2
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_2_STRING_TOKEN line2
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN LINE2
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_3 "line3"
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_3_STRING_UNQUOTED line3
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_3_STRING_TOKEN line3
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN LINE3
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_4 "line4"
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_4_STRING_UNQUOTED line4
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_4_STRING_TOKEN line4
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_4_STRING_UPPER_TOKEN LINE4
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_5 "line5"
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_5_STRING_UNQUOTED line5
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_5_STRING_TOKEN line5
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_5_STRING_UPPER_TOKEN LINE5
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_6 "line6"
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_6_STRING_UNQUOTED line6
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_6_STRING_TOKEN line6
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_6_STRING_UPPER_TOKEN LINE6
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_7_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_7 "line7"
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_7_STRING_UNQUOTED line7
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_7_STRING_TOKEN line7
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_7_STRING_UPPER_TOKEN LINE7
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_8_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_8 "line8"
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_8_STRING_UNQUOTED line8
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_8_STRING_TOKEN line8
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_8_STRING_UPPER_TOKEN LINE8
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_9_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_9 "line9"
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_9_STRING_UNQUOTED line9
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_9_STRING_TOKEN line9
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_9_STRING_UPPER_TOKEN LINE9
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_10_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_10 "line10"
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_10_STRING_UNQUOTED line10
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_10_STRING_TOKEN line10
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_10_STRING_UPPER_TOKEN LINE10
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_11_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_11 "line11"
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_11_STRING_UNQUOTED line11
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_11_STRING_TOKEN line11
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_11_STRING_UPPER_TOKEN LINE11
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_12_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_12 "line12"
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_12_STRING_UNQUOTED line12
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_12_STRING_TOKEN line12
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_12_STRING_UPPER_TOKEN LINE12
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_13_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_13 "line13"
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_13_STRING_UNQUOTED line13
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_13_STRING_TOKEN line13
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_13_STRING_UPPER_TOKEN LINE13
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_14_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_14 "line14"
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_14_STRING_UNQUOTED line14
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_14_STRING_TOKEN line14
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_14_STRING_UPPER_TOKEN LINE14
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_15_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_15 "line15"
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_15_STRING_UNQUOTED line15
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_15_STRING_TOKEN line15
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_IDX_15_STRING_UPPER_TOKEN LINE15
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 1) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 2) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 3) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 4) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 5) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 6) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 7) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 8) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 9) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 10) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 11) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 12) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 13) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 14) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 15)
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 15)
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 15, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, interrupt_names, 15, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_LEN 16
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_num_lines 16
#define DT_N_S_soc_S_interrupt_controller_44022000_P_num_lines_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges {0 /* 0x0 */, 1 /* 0x1 */, 1 /* 0x1 */, 1 /* 0x1 */, 2 /* 0x2 */, 1 /* 0x1 */, 3 /* 0x3 */, 1 /* 0x1 */, 4 /* 0x4 */, 1 /* 0x1 */, 5 /* 0x5 */, 1 /* 0x1 */, 6 /* 0x6 */, 1 /* 0x1 */, 7 /* 0x7 */, 1 /* 0x1 */, 8 /* 0x8 */, 1 /* 0x1 */, 9 /* 0x9 */, 1 /* 0x1 */, 10 /* 0xa */, 1 /* 0x1 */, 11 /* 0xb */, 1 /* 0x1 */, 12 /* 0xc */, 1 /* 0x1 */, 13 /* 0xd */, 1 /* 0x1 */, 14 /* 0xe */, 1 /* 0x1 */, 15 /* 0xf */, 1 /* 0x1 */}
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_0 0
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_1 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_2 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_3 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_4 2
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_5 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_6 3
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_7_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_7 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_8_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_8 4
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_9_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_9 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_10_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_10 5
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_11_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_11 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_12_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_12 6
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_13_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_13 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_14_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_14 7
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_15_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_15 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_16_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_16 8
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_17_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_17 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_18_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_18 9
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_19_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_19 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_20_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_20 10
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_21_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_21 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_22_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_22 11
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_23_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_23 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_24_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_24 12
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_25_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_25 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_26_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_26 13
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_27_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_27 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_28_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_28 14
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_29_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_29 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_30_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_30 15
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_31_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_IDX_31 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 1) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 2) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 3) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 4) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 5) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 6) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 7) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 8) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 9) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 10) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 11) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 12) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 13) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 14) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 15) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 16) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 17) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 18) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 19) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 20) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 21) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 22) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 23) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 24) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 25) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 26) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 27) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 28) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 29) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 30) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 31)
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 31)
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 15, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 16, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 17, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 18, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 19, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 20, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 21, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 22, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 23, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 24, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 25, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 26, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 27, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 28, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 29, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 30, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 31, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, line_ranges, 31, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_LEN 32
#define DT_N_S_soc_S_interrupt_controller_44022000_P_line_ranges_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_compatible {"st,stm32g0-exti", "st,stm32-exti"}
#define DT_N_S_soc_S_interrupt_controller_44022000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_compatible_IDX_0 "st,stm32g0-exti"
#define DT_N_S_soc_S_interrupt_controller_44022000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32g0-exti
#define DT_N_S_soc_S_interrupt_controller_44022000_P_compatible_IDX_0_STRING_TOKEN st_stm32g0_exti
#define DT_N_S_soc_S_interrupt_controller_44022000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32G0_EXTI
#define DT_N_S_soc_S_interrupt_controller_44022000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_compatible_IDX_1 "st,stm32-exti"
#define DT_N_S_soc_S_interrupt_controller_44022000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-exti
#define DT_N_S_soc_S_interrupt_controller_44022000_P_compatible_IDX_1_STRING_TOKEN st_stm32_exti
#define DT_N_S_soc_S_interrupt_controller_44022000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_EXTI
#define DT_N_S_soc_S_interrupt_controller_44022000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_44022000, compatible, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, compatible, 1)
#define DT_N_S_soc_S_interrupt_controller_44022000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_44022000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, compatible, 1)
#define DT_N_S_soc_S_interrupt_controller_44022000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_44022000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_44022000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_44022000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_44022000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_44022000_P_compatible_LEN 2
#define DT_N_S_soc_S_interrupt_controller_44022000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_44022000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_44022000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_44022000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_44022000_P_interrupt_controller_EXISTS 1

/*
 * Devicetree node: /soc/memory@20000000
 *
 * Node identifier: DT_N_S_soc_S_memory_20000000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE\dts\bindings\base\zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_20000000_PATH "/soc/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_20000000_FULL_NAME "memory@20000000"
#define DT_N_S_soc_S_memory_20000000_FULL_NAME_UNQUOTED memory@20000000
#define DT_N_S_soc_S_memory_20000000_FULL_NAME_TOKEN memory_20000000
#define DT_N_S_soc_S_memory_20000000_FULL_NAME_UPPER_TOKEN MEMORY_20000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_20000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_20000000_CHILD_IDX 39

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_20000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_20000000_FOREACH_NODELABEL(fn) fn(sram1)
#define DT_N_S_soc_S_memory_20000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_20000000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_20000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_20000000_ORD 73
#define DT_N_S_soc_S_memory_20000000_ORD_STR_SORTABLE 00073

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_20000000_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_zephyr_memory_region DT_N_S_soc_S_memory_20000000
#define DT_N_INST_0_mmio_sram            DT_N_S_soc_S_memory_20000000
#define DT_N_NODELABEL_sram1             DT_N_S_soc_S_memory_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_20000000_REG_NUM 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_SIZE 262144 /* 0x40000 */
#define DT_N_S_soc_S_memory_20000000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_20000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_20000000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_soc_S_memory_20000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_memory_20000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_soc_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_20000000_P_zephyr_memory_region "SRAM1"
#define DT_N_S_soc_S_memory_20000000_P_zephyr_memory_region_STRING_UNQUOTED SRAM1
#define DT_N_S_soc_S_memory_20000000_P_zephyr_memory_region_STRING_TOKEN SRAM1
#define DT_N_S_soc_S_memory_20000000_P_zephyr_memory_region_STRING_UPPER_TOKEN SRAM1
#define DT_N_S_soc_S_memory_20000000_P_zephyr_memory_region_IDX_0 "SRAM1"
#define DT_N_S_soc_S_memory_20000000_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20000000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_memory_20000000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20000000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_memory_20000000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20000000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20000000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_zephyr_memory_region_LEN 1
#define DT_N_S_soc_S_memory_20000000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_1_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_1_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_1_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20000000, compatible, 0) \
	fn(DT_N_S_soc_S_memory_20000000, compatible, 1)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20000000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_memory_20000000, compatible, 1)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20000000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_20000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20000000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_memory_20000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_compatible_LEN 2
#define DT_N_S_soc_S_memory_20000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 262144 /* 0x40000 */}
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1 262144
#define DT_N_S_soc_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_20000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_20000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/memory@20040000
 *
 * Node identifier: DT_N_S_soc_S_memory_20040000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE\dts\bindings\base\zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_20040000_PATH "/soc/memory@20040000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_20040000_FULL_NAME "memory@20040000"
#define DT_N_S_soc_S_memory_20040000_FULL_NAME_UNQUOTED memory@20040000
#define DT_N_S_soc_S_memory_20040000_FULL_NAME_TOKEN memory_20040000
#define DT_N_S_soc_S_memory_20040000_FULL_NAME_UPPER_TOKEN MEMORY_20040000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_20040000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_20040000_CHILD_IDX 40

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_20040000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_20040000_FOREACH_NODELABEL(fn) fn(sram2)
#define DT_N_S_soc_S_memory_20040000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_20040000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_20040000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_20040000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_20040000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20040000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20040000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_20040000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_20040000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20040000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20040000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_20040000_ORD 74
#define DT_N_S_soc_S_memory_20040000_ORD_STR_SORTABLE 00074

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_20040000_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_20040000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_20040000_EXISTS 1
#define DT_N_INST_1_zephyr_memory_region DT_N_S_soc_S_memory_20040000
#define DT_N_INST_1_mmio_sram            DT_N_S_soc_S_memory_20040000
#define DT_N_NODELABEL_sram2             DT_N_S_soc_S_memory_20040000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_20040000_REG_NUM 1
#define DT_N_S_soc_S_memory_20040000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20040000_REG_IDX_0_VAL_ADDRESS 537133056 /* 0x20040000 */
#define DT_N_S_soc_S_memory_20040000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_memory_20040000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_20040000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_20040000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_20040000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_20040000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_soc_S_memory_20040000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20040000_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_memory_20040000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20040000_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_soc_S_memory_20040000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_20040000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_20040000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_20040000_P_zephyr_memory_region "SRAM2"
#define DT_N_S_soc_S_memory_20040000_P_zephyr_memory_region_STRING_UNQUOTED SRAM2
#define DT_N_S_soc_S_memory_20040000_P_zephyr_memory_region_STRING_TOKEN SRAM2
#define DT_N_S_soc_S_memory_20040000_P_zephyr_memory_region_STRING_UPPER_TOKEN SRAM2
#define DT_N_S_soc_S_memory_20040000_P_zephyr_memory_region_IDX_0 "SRAM2"
#define DT_N_S_soc_S_memory_20040000_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20040000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20040000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_memory_20040000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20040000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_memory_20040000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20040000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20040000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20040000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20040000_P_zephyr_memory_region_LEN 1
#define DT_N_S_soc_S_memory_20040000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_soc_S_memory_20040000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_soc_S_memory_20040000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20040000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_soc_S_memory_20040000_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_soc_S_memory_20040000_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_soc_S_memory_20040000_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_soc_S_memory_20040000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20040000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_soc_S_memory_20040000_P_compatible_IDX_1_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_20040000_P_compatible_IDX_1_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_20040000_P_compatible_IDX_1_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_20040000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20040000, compatible, 0) \
	fn(DT_N_S_soc_S_memory_20040000, compatible, 1)
#define DT_N_S_soc_S_memory_20040000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20040000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_memory_20040000, compatible, 1)
#define DT_N_S_soc_S_memory_20040000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20040000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_20040000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20040000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20040000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_memory_20040000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20040000_P_compatible_LEN 2
#define DT_N_S_soc_S_memory_20040000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_20040000_P_reg {537133056 /* 0x20040000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_memory_20040000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20040000_P_reg_IDX_0 537133056
#define DT_N_S_soc_S_memory_20040000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20040000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_memory_20040000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_20040000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_20040000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_memory_20040000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_20040000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_20040000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_20040000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/memory@20050000
 *
 * Node identifier: DT_N_S_soc_S_memory_20050000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE\dts\bindings\base\zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_20050000_PATH "/soc/memory@20050000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_20050000_FULL_NAME "memory@20050000"
#define DT_N_S_soc_S_memory_20050000_FULL_NAME_UNQUOTED memory@20050000
#define DT_N_S_soc_S_memory_20050000_FULL_NAME_TOKEN memory_20050000
#define DT_N_S_soc_S_memory_20050000_FULL_NAME_UPPER_TOKEN MEMORY_20050000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_20050000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_20050000_CHILD_IDX 41

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_20050000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_20050000_FOREACH_NODELABEL(fn) fn(sram3)
#define DT_N_S_soc_S_memory_20050000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_20050000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_20050000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_20050000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_20050000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20050000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20050000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_20050000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_20050000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20050000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20050000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_20050000_ORD 75
#define DT_N_S_soc_S_memory_20050000_ORD_STR_SORTABLE 00075

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_20050000_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_20050000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_20050000_EXISTS 1
#define DT_N_INST_2_zephyr_memory_region DT_N_S_soc_S_memory_20050000
#define DT_N_INST_2_mmio_sram            DT_N_S_soc_S_memory_20050000
#define DT_N_NODELABEL_sram3             DT_N_S_soc_S_memory_20050000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_20050000_REG_NUM 1
#define DT_N_S_soc_S_memory_20050000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20050000_REG_IDX_0_VAL_ADDRESS 537198592 /* 0x20050000 */
#define DT_N_S_soc_S_memory_20050000_REG_IDX_0_VAL_SIZE 327680 /* 0x50000 */
#define DT_N_S_soc_S_memory_20050000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_20050000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_20050000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_20050000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_20050000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_soc_S_memory_20050000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20050000_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_memory_20050000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20050000_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_soc_S_memory_20050000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_20050000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_20050000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_20050000_P_zephyr_memory_region "SRAM3"
#define DT_N_S_soc_S_memory_20050000_P_zephyr_memory_region_STRING_UNQUOTED SRAM3
#define DT_N_S_soc_S_memory_20050000_P_zephyr_memory_region_STRING_TOKEN SRAM3
#define DT_N_S_soc_S_memory_20050000_P_zephyr_memory_region_STRING_UPPER_TOKEN SRAM3
#define DT_N_S_soc_S_memory_20050000_P_zephyr_memory_region_IDX_0 "SRAM3"
#define DT_N_S_soc_S_memory_20050000_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20050000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20050000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_memory_20050000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20050000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_memory_20050000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20050000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20050000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20050000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20050000_P_zephyr_memory_region_LEN 1
#define DT_N_S_soc_S_memory_20050000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_soc_S_memory_20050000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_soc_S_memory_20050000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20050000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_soc_S_memory_20050000_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_soc_S_memory_20050000_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_soc_S_memory_20050000_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_soc_S_memory_20050000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20050000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_soc_S_memory_20050000_P_compatible_IDX_1_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_20050000_P_compatible_IDX_1_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_20050000_P_compatible_IDX_1_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_20050000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20050000, compatible, 0) \
	fn(DT_N_S_soc_S_memory_20050000, compatible, 1)
#define DT_N_S_soc_S_memory_20050000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20050000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_memory_20050000, compatible, 1)
#define DT_N_S_soc_S_memory_20050000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20050000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_20050000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20050000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20050000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_memory_20050000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20050000_P_compatible_LEN 2
#define DT_N_S_soc_S_memory_20050000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_20050000_P_reg {537198592 /* 0x20050000 */, 327680 /* 0x50000 */}
#define DT_N_S_soc_S_memory_20050000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20050000_P_reg_IDX_0 537198592
#define DT_N_S_soc_S_memory_20050000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20050000_P_reg_IDX_1 327680
#define DT_N_S_soc_S_memory_20050000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_20050000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_20050000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_memory_20050000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_20050000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_20050000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_20050000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/memory@40036400
 *
 * Node identifier: DT_N_S_soc_S_memory_40036400
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE\dts\bindings\base\zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_40036400_PATH "/soc/memory@40036400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_40036400_FULL_NAME "memory@40036400"
#define DT_N_S_soc_S_memory_40036400_FULL_NAME_UNQUOTED memory@40036400
#define DT_N_S_soc_S_memory_40036400_FULL_NAME_TOKEN memory_40036400
#define DT_N_S_soc_S_memory_40036400_FULL_NAME_UPPER_TOKEN MEMORY_40036400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_40036400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_40036400_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_40036400_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_40036400_FOREACH_NODELABEL(fn) fn(backup_sram)
#define DT_N_S_soc_S_memory_40036400_FOREACH_NODELABEL_VARGS(fn, ...) fn(backup_sram, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_40036400_CHILD_NUM 0
#define DT_N_S_soc_S_memory_40036400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_40036400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_40036400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_40036400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_40036400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_40036400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_40036400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_40036400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_40036400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_40036400_ORD 76
#define DT_N_S_soc_S_memory_40036400_ORD_STR_SORTABLE 00076

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_40036400_REQUIRES_ORDS \
	4, /* /soc */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_40036400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_40036400_EXISTS 1
#define DT_N_INST_3_zephyr_memory_region DT_N_S_soc_S_memory_40036400
#define DT_N_INST_0_st_stm32_backup_sram DT_N_S_soc_S_memory_40036400
#define DT_N_NODELABEL_backup_sram       DT_N_S_soc_S_memory_40036400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_40036400_REG_NUM 1
#define DT_N_S_soc_S_memory_40036400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_REG_IDX_0_VAL_ADDRESS 1073964032 /* 0x40036400 */
#define DT_N_S_soc_S_memory_40036400_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_memory_40036400_RANGES_NUM 0
#define DT_N_S_soc_S_memory_40036400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_40036400_IRQ_NUM 0
#define DT_N_S_soc_S_memory_40036400_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_40036400_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_soc_S_memory_40036400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_memory_40036400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_soc_S_memory_40036400_COMPAT_MATCHES_st_stm32_backup_sram 1
#define DT_N_S_soc_S_memory_40036400_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_memory_40036400_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_COMPAT_MODEL_IDX_1 "stm32-backup-sram"
#define DT_N_S_soc_S_memory_40036400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_40036400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_40036400_P_zephyr_memory_region "BACKUP_SRAM"
#define DT_N_S_soc_S_memory_40036400_P_zephyr_memory_region_STRING_UNQUOTED BACKUP_SRAM
#define DT_N_S_soc_S_memory_40036400_P_zephyr_memory_region_STRING_TOKEN BACKUP_SRAM
#define DT_N_S_soc_S_memory_40036400_P_zephyr_memory_region_STRING_UPPER_TOKEN BACKUP_SRAM
#define DT_N_S_soc_S_memory_40036400_P_zephyr_memory_region_IDX_0 "BACKUP_SRAM"
#define DT_N_S_soc_S_memory_40036400_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_40036400, zephyr_memory_region, 0)
#define DT_N_S_soc_S_memory_40036400_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_40036400, zephyr_memory_region, 0)
#define DT_N_S_soc_S_memory_40036400_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_40036400, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40036400_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_40036400, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40036400_P_zephyr_memory_region_LEN 1
#define DT_N_S_soc_S_memory_40036400_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_status "disabled"
#define DT_N_S_soc_S_memory_40036400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_memory_40036400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_memory_40036400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_memory_40036400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_memory_40036400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_memory_40036400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_40036400, status, 0)
#define DT_N_S_soc_S_memory_40036400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_40036400, status, 0)
#define DT_N_S_soc_S_memory_40036400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_40036400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40036400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_40036400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40036400_P_status_LEN 1
#define DT_N_S_soc_S_memory_40036400_P_status_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_compatible {"zephyr,memory-region", "st,stm32-backup-sram"}
#define DT_N_S_soc_S_memory_40036400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_soc_S_memory_40036400_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_soc_S_memory_40036400_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_soc_S_memory_40036400_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_soc_S_memory_40036400_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_compatible_IDX_1 "st,stm32-backup-sram"
#define DT_N_S_soc_S_memory_40036400_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-backup-sram
#define DT_N_S_soc_S_memory_40036400_P_compatible_IDX_1_STRING_TOKEN st_stm32_backup_sram
#define DT_N_S_soc_S_memory_40036400_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_BACKUP_SRAM
#define DT_N_S_soc_S_memory_40036400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_40036400, compatible, 0) \
	fn(DT_N_S_soc_S_memory_40036400, compatible, 1)
#define DT_N_S_soc_S_memory_40036400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_40036400, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_memory_40036400, compatible, 1)
#define DT_N_S_soc_S_memory_40036400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_40036400, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40036400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40036400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_40036400, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_memory_40036400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40036400_P_compatible_LEN 2
#define DT_N_S_soc_S_memory_40036400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_reg {1073964032 /* 0x40036400 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_memory_40036400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_reg_IDX_0 1073964032
#define DT_N_S_soc_S_memory_40036400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_reg_IDX_1 4096
#define DT_N_S_soc_S_memory_40036400_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_memory_40036400_P_clocks_IDX_0_VAL_bus 136
#define DT_N_S_soc_S_memory_40036400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_clocks_IDX_0_VAL_bits 268435456
#define DT_N_S_soc_S_memory_40036400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_40036400, clocks, 0)
#define DT_N_S_soc_S_memory_40036400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_40036400, clocks, 0)
#define DT_N_S_soc_S_memory_40036400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_40036400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40036400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_40036400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40036400_P_clocks_LEN 1
#define DT_N_S_soc_S_memory_40036400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_40036400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_wakeup_source 0
#define DT_N_S_soc_S_memory_40036400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_40036400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/memory-controller@47000400
 *
 * Node identifier: DT_N_S_soc_S_memory_controller_47000400
 *
 * Binding (compatible = st,stm32-fmc):
 *   $ZEPHYR_BASE\dts\bindings\memory-controllers\st,stm32-fmc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_controller_47000400_PATH "/soc/memory-controller@47000400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_controller_47000400_FULL_NAME "memory-controller@47000400"
#define DT_N_S_soc_S_memory_controller_47000400_FULL_NAME_UNQUOTED memory-controller@47000400
#define DT_N_S_soc_S_memory_controller_47000400_FULL_NAME_TOKEN memory_controller_47000400
#define DT_N_S_soc_S_memory_controller_47000400_FULL_NAME_UPPER_TOKEN MEMORY_CONTROLLER_47000400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_controller_47000400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_controller_47000400_CHILD_IDX 73

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_controller_47000400_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_controller_47000400_FOREACH_NODELABEL(fn) fn(fmc)
#define DT_N_S_soc_S_memory_controller_47000400_FOREACH_NODELABEL_VARGS(fn, ...) fn(fmc, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_controller_47000400_CHILD_NUM 0
#define DT_N_S_soc_S_memory_controller_47000400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_controller_47000400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_controller_47000400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_controller_47000400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_controller_47000400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_controller_47000400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_controller_47000400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_controller_47000400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_controller_47000400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_controller_47000400_ORD 77
#define DT_N_S_soc_S_memory_controller_47000400_ORD_STR_SORTABLE 00077

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_controller_47000400_REQUIRES_ORDS \
	4, /* /soc */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_controller_47000400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_controller_47000400_EXISTS 1
#define DT_N_INST_0_st_stm32_fmc DT_N_S_soc_S_memory_controller_47000400
#define DT_N_NODELABEL_fmc       DT_N_S_soc_S_memory_controller_47000400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_controller_47000400_REG_NUM 1
#define DT_N_S_soc_S_memory_controller_47000400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_47000400_REG_IDX_0_VAL_ADDRESS 1191183360 /* 0x47000400 */
#define DT_N_S_soc_S_memory_controller_47000400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_memory_controller_47000400_RANGES_NUM 0
#define DT_N_S_soc_S_memory_controller_47000400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_controller_47000400_IRQ_NUM 0
#define DT_N_S_soc_S_memory_controller_47000400_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_controller_47000400_COMPAT_MATCHES_st_stm32_fmc 1
#define DT_N_S_soc_S_memory_controller_47000400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_47000400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_memory_controller_47000400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_47000400_COMPAT_MODEL_IDX_0 "stm32-fmc"
#define DT_N_S_soc_S_memory_controller_47000400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_controller_47000400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_controller_47000400_P_reg {1191183360 /* 0x47000400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_memory_controller_47000400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_47000400_P_reg_IDX_0 1191183360
#define DT_N_S_soc_S_memory_controller_47000400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_controller_47000400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_memory_controller_47000400_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_controller_47000400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_47000400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_memory_controller_47000400_P_clocks_IDX_0_VAL_bus 148
#define DT_N_S_soc_S_memory_controller_47000400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_memory_controller_47000400_P_clocks_IDX_0_VAL_bits 65536
#define DT_N_S_soc_S_memory_controller_47000400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_memory_controller_47000400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_controller_47000400, clocks, 0)
#define DT_N_S_soc_S_memory_controller_47000400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_controller_47000400, clocks, 0)
#define DT_N_S_soc_S_memory_controller_47000400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_47000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_47000400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_controller_47000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_47000400_P_clocks_LEN 1
#define DT_N_S_soc_S_memory_controller_47000400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_memory_controller_47000400_P_status "disabled"
#define DT_N_S_soc_S_memory_controller_47000400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_memory_controller_47000400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_memory_controller_47000400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_memory_controller_47000400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_memory_controller_47000400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_47000400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_memory_controller_47000400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_memory_controller_47000400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_controller_47000400, status, 0)
#define DT_N_S_soc_S_memory_controller_47000400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_controller_47000400, status, 0)
#define DT_N_S_soc_S_memory_controller_47000400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_47000400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_47000400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_controller_47000400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_47000400_P_status_LEN 1
#define DT_N_S_soc_S_memory_controller_47000400_P_status_EXISTS 1
#define DT_N_S_soc_S_memory_controller_47000400_P_compatible {"st,stm32-fmc"}
#define DT_N_S_soc_S_memory_controller_47000400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_47000400_P_compatible_IDX_0 "st,stm32-fmc"
#define DT_N_S_soc_S_memory_controller_47000400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-fmc
#define DT_N_S_soc_S_memory_controller_47000400_P_compatible_IDX_0_STRING_TOKEN st_stm32_fmc
#define DT_N_S_soc_S_memory_controller_47000400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_FMC
#define DT_N_S_soc_S_memory_controller_47000400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_controller_47000400, compatible, 0)
#define DT_N_S_soc_S_memory_controller_47000400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_controller_47000400, compatible, 0)
#define DT_N_S_soc_S_memory_controller_47000400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_47000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_47000400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_controller_47000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_47000400_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_controller_47000400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_controller_47000400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_controller_47000400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_memory_controller_47000400_P_wakeup_source 0
#define DT_N_S_soc_S_memory_controller_47000400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_controller_47000400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_controller_47000400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rng@420c0800
 *
 * Node identifier: DT_N_S_soc_S_rng_420c0800
 *
 * Binding (compatible = st,stm32-rng):
 *   $ZEPHYR_BASE\dts\bindings\rng\st,stm32-rng.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rng_420c0800_PATH "/soc/rng@420c0800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rng_420c0800_FULL_NAME "rng@420c0800"
#define DT_N_S_soc_S_rng_420c0800_FULL_NAME_UNQUOTED rng@420c0800
#define DT_N_S_soc_S_rng_420c0800_FULL_NAME_TOKEN rng_420c0800
#define DT_N_S_soc_S_rng_420c0800_FULL_NAME_UPPER_TOKEN RNG_420C0800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rng_420c0800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rng_420c0800_CHILD_IDX 30

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_rng_420c0800_NODELABEL_NUM 1
#define DT_N_S_soc_S_rng_420c0800_FOREACH_NODELABEL(fn) fn(rng)
#define DT_N_S_soc_S_rng_420c0800_FOREACH_NODELABEL_VARGS(fn, ...) fn(rng, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rng_420c0800_CHILD_NUM 0
#define DT_N_S_soc_S_rng_420c0800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_rng_420c0800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rng_420c0800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rng_420c0800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rng_420c0800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rng_420c0800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rng_420c0800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rng_420c0800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rng_420c0800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rng_420c0800_ORD 78
#define DT_N_S_soc_S_rng_420c0800_ORD_STR_SORTABLE 00078

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rng_420c0800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rng_420c0800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rng_420c0800_EXISTS 1
#define DT_N_INST_0_st_stm32_rng DT_N_S_soc_S_rng_420c0800
#define DT_N_NODELABEL_rng       DT_N_S_soc_S_rng_420c0800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rng_420c0800_REG_NUM 1
#define DT_N_S_soc_S_rng_420c0800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_REG_IDX_0_VAL_ADDRESS 1108084736 /* 0x420c0800 */
#define DT_N_S_soc_S_rng_420c0800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rng_420c0800_RANGES_NUM 0
#define DT_N_S_soc_S_rng_420c0800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rng_420c0800_IRQ_NUM 1
#define DT_N_S_soc_S_rng_420c0800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_IRQ_IDX_0_VAL_irq 114
#define DT_N_S_soc_S_rng_420c0800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rng_420c0800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_rng_420c0800_IRQ_LEVEL 1
#define DT_N_S_soc_S_rng_420c0800_COMPAT_MATCHES_st_stm32_rng 1
#define DT_N_S_soc_S_rng_420c0800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rng_420c0800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_COMPAT_MODEL_IDX_0 "stm32-rng"
#define DT_N_S_soc_S_rng_420c0800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rng_420c0800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rng_420c0800_P_reg {1108084736 /* 0x420c0800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rng_420c0800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_reg_IDX_0 1108084736
#define DT_N_S_soc_S_rng_420c0800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rng_420c0800_P_reg_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_rng_420c0800_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_rng_420c0800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_rng_420c0800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_420c0800, clocks, 0)
#define DT_N_S_soc_S_rng_420c0800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rng_420c0800, clocks, 0)
#define DT_N_S_soc_S_rng_420c0800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rng_420c0800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rng_420c0800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rng_420c0800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rng_420c0800_P_clocks_LEN 1
#define DT_N_S_soc_S_rng_420c0800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_nist_config 15731968
#define DT_N_S_soc_S_rng_420c0800_P_nist_config_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_health_test_config 43719
#define DT_N_S_soc_S_rng_420c0800_P_health_test_config_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_status "okay"
#define DT_N_S_soc_S_rng_420c0800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_rng_420c0800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_rng_420c0800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rng_420c0800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_rng_420c0800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_rng_420c0800_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_420c0800, status, 0)
#define DT_N_S_soc_S_rng_420c0800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rng_420c0800, status, 0)
#define DT_N_S_soc_S_rng_420c0800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rng_420c0800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rng_420c0800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rng_420c0800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rng_420c0800_P_status_LEN 1
#define DT_N_S_soc_S_rng_420c0800_P_status_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_compatible {"st,stm32-rng"}
#define DT_N_S_soc_S_rng_420c0800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_compatible_IDX_0 "st,stm32-rng"
#define DT_N_S_soc_S_rng_420c0800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-rng
#define DT_N_S_soc_S_rng_420c0800_P_compatible_IDX_0_STRING_TOKEN st_stm32_rng
#define DT_N_S_soc_S_rng_420c0800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_RNG
#define DT_N_S_soc_S_rng_420c0800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_420c0800, compatible, 0)
#define DT_N_S_soc_S_rng_420c0800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rng_420c0800, compatible, 0)
#define DT_N_S_soc_S_rng_420c0800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rng_420c0800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rng_420c0800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rng_420c0800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rng_420c0800_P_compatible_LEN 1
#define DT_N_S_soc_S_rng_420c0800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_interrupts {114 /* 0x72 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rng_420c0800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_interrupts_IDX_0 114
#define DT_N_S_soc_S_rng_420c0800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rng_420c0800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rng_420c0800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_wakeup_source 0
#define DT_N_S_soc_S_rng_420c0800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rng_420c0800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rtc@44007800
 *
 * Node identifier: DT_N_S_soc_S_rtc_44007800
 *
 * Binding (compatible = st,stm32-rtc):
 *   $ZEPHYR_BASE\dts\bindings\rtc\st,stm32-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_44007800_PATH "/soc/rtc@44007800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_44007800_FULL_NAME "rtc@44007800"
#define DT_N_S_soc_S_rtc_44007800_FULL_NAME_UNQUOTED rtc@44007800
#define DT_N_S_soc_S_rtc_44007800_FULL_NAME_TOKEN rtc_44007800
#define DT_N_S_soc_S_rtc_44007800_FULL_NAME_UPPER_TOKEN RTC_44007800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_44007800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_44007800_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_rtc_44007800_NODELABEL_NUM 1
#define DT_N_S_soc_S_rtc_44007800_FOREACH_NODELABEL(fn) fn(rtc)
#define DT_N_S_soc_S_rtc_44007800_FOREACH_NODELABEL_VARGS(fn, ...) fn(rtc, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_44007800_CHILD_NUM 0
#define DT_N_S_soc_S_rtc_44007800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_rtc_44007800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_44007800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_44007800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_44007800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_44007800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_44007800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_44007800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_44007800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_44007800_ORD 79
#define DT_N_S_soc_S_rtc_44007800_ORD_STR_SORTABLE 00079

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_44007800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_44007800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_44007800_EXISTS 1
#define DT_N_INST_0_st_stm32_rtc DT_N_S_soc_S_rtc_44007800
#define DT_N_NODELABEL_rtc       DT_N_S_soc_S_rtc_44007800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_44007800_REG_NUM 1
#define DT_N_S_soc_S_rtc_44007800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_REG_IDX_0_VAL_ADDRESS 1140881408 /* 0x44007800 */
#define DT_N_S_soc_S_rtc_44007800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rtc_44007800_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_44007800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_44007800_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_44007800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_IRQ_IDX_0_VAL_irq 2
#define DT_N_S_soc_S_rtc_44007800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rtc_44007800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_rtc_44007800_IRQ_LEVEL 1
#define DT_N_S_soc_S_rtc_44007800_COMPAT_MATCHES_st_stm32_rtc 1
#define DT_N_S_soc_S_rtc_44007800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rtc_44007800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_COMPAT_MODEL_IDX_0 "stm32-rtc"
#define DT_N_S_soc_S_rtc_44007800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_44007800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_44007800_P_reg {1140881408 /* 0x44007800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rtc_44007800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_P_reg_IDX_0 1140881408
#define DT_N_S_soc_S_rtc_44007800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rtc_44007800_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_P_alarms_count 2
#define DT_N_S_soc_S_rtc_44007800_P_alarms_count_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_P_alrm_exti_line 17
#define DT_N_S_soc_S_rtc_44007800_P_alrm_exti_line_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_P_interrupts {2 /* 0x2 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rtc_44007800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_P_interrupts_IDX_0 2
#define DT_N_S_soc_S_rtc_44007800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rtc_44007800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_P_prescaler 32768
#define DT_N_S_soc_S_rtc_44007800_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_P_status "okay"
#define DT_N_S_soc_S_rtc_44007800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_rtc_44007800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_rtc_44007800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_44007800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_rtc_44007800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_44007800_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_44007800, status, 0)
#define DT_N_S_soc_S_rtc_44007800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_44007800, status, 0)
#define DT_N_S_soc_S_rtc_44007800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_44007800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_44007800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_44007800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_44007800_P_status_LEN 1
#define DT_N_S_soc_S_rtc_44007800_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_P_compatible {"st,stm32-rtc"}
#define DT_N_S_soc_S_rtc_44007800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_P_compatible_IDX_0 "st,stm32-rtc"
#define DT_N_S_soc_S_rtc_44007800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-rtc
#define DT_N_S_soc_S_rtc_44007800_P_compatible_IDX_0_STRING_TOKEN st_stm32_rtc
#define DT_N_S_soc_S_rtc_44007800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_RTC
#define DT_N_S_soc_S_rtc_44007800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_44007800, compatible, 0)
#define DT_N_S_soc_S_rtc_44007800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_44007800, compatible, 0)
#define DT_N_S_soc_S_rtc_44007800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_44007800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_44007800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_44007800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_44007800_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_44007800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_rtc_44007800_P_clocks_IDX_0_VAL_bus 168
#define DT_N_S_soc_S_rtc_44007800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_P_clocks_IDX_0_VAL_bits 2097152
#define DT_N_S_soc_S_rtc_44007800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_rtc_44007800_P_clocks_IDX_1_VAL_bus 2
#define DT_N_S_soc_S_rtc_44007800_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_P_clocks_IDX_1_VAL_bits 92400
#define DT_N_S_soc_S_rtc_44007800_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_44007800, clocks, 0) \
	fn(DT_N_S_soc_S_rtc_44007800, clocks, 1)
#define DT_N_S_soc_S_rtc_44007800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_44007800, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_44007800, clocks, 1)
#define DT_N_S_soc_S_rtc_44007800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_44007800, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_44007800, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_44007800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_44007800, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_44007800, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_44007800_P_clocks_LEN 2
#define DT_N_S_soc_S_rtc_44007800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rtc_44007800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_44007800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_44007800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_44007800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/sdmmc@46008000
 *
 * Node identifier: DT_N_S_soc_S_sdmmc_46008000
 *
 * Binding (compatible = st,stm32-sdmmc):
 *   $ZEPHYR_BASE\dts\bindings\mmc\st,stm32-sdmmc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sdmmc_46008000_PATH "/soc/sdmmc@46008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sdmmc_46008000_FULL_NAME "sdmmc@46008000"
#define DT_N_S_soc_S_sdmmc_46008000_FULL_NAME_UNQUOTED sdmmc@46008000
#define DT_N_S_soc_S_sdmmc_46008000_FULL_NAME_TOKEN sdmmc_46008000
#define DT_N_S_soc_S_sdmmc_46008000_FULL_NAME_UPPER_TOKEN SDMMC_46008000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sdmmc_46008000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sdmmc_46008000_CHILD_IDX 72

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sdmmc_46008000_NODELABEL_NUM 1
#define DT_N_S_soc_S_sdmmc_46008000_FOREACH_NODELABEL(fn) fn(sdmmc1)
#define DT_N_S_soc_S_sdmmc_46008000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sdmmc1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sdmmc_46008000_CHILD_NUM 0
#define DT_N_S_soc_S_sdmmc_46008000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sdmmc_46008000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sdmmc_46008000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sdmmc_46008000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdmmc_46008000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sdmmc_46008000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sdmmc_46008000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sdmmc_46008000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdmmc_46008000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sdmmc_46008000_ORD 80
#define DT_N_S_soc_S_sdmmc_46008000_ORD_STR_SORTABLE 00080

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sdmmc_46008000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sdmmc_46008000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sdmmc_46008000_EXISTS 1
#define DT_N_INST_0_st_stm32_sdmmc DT_N_S_soc_S_sdmmc_46008000
#define DT_N_NODELABEL_sdmmc1      DT_N_S_soc_S_sdmmc_46008000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sdmmc_46008000_REG_NUM 1
#define DT_N_S_soc_S_sdmmc_46008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_REG_IDX_0_VAL_ADDRESS 1174437888 /* 0x46008000 */
#define DT_N_S_soc_S_sdmmc_46008000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_sdmmc_46008000_RANGES_NUM 0
#define DT_N_S_soc_S_sdmmc_46008000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sdmmc_46008000_IRQ_NUM 1
#define DT_N_S_soc_S_sdmmc_46008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_IRQ_IDX_0_VAL_irq 79
#define DT_N_S_soc_S_sdmmc_46008000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sdmmc_46008000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sdmmc_46008000_IRQ_LEVEL 1
#define DT_N_S_soc_S_sdmmc_46008000_COMPAT_MATCHES_st_stm32_sdmmc 1
#define DT_N_S_soc_S_sdmmc_46008000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_sdmmc_46008000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_COMPAT_MODEL_IDX_0 "stm32-sdmmc"
#define DT_N_S_soc_S_sdmmc_46008000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sdmmc_46008000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sdmmc_46008000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_sdmmc_46008000_P_clocks_IDX_0_VAL_bus 148
#define DT_N_S_soc_S_sdmmc_46008000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_sdmmc_46008000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_sdmmc_46008000_P_clocks_IDX_1_VAL_bus 13
#define DT_N_S_soc_S_sdmmc_46008000_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_clocks_IDX_1_VAL_bits 9956
#define DT_N_S_soc_S_sdmmc_46008000_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_46008000, clocks, 0) \
	fn(DT_N_S_soc_S_sdmmc_46008000, clocks, 1)
#define DT_N_S_soc_S_sdmmc_46008000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_46008000, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_46008000, clocks, 1)
#define DT_N_S_soc_S_sdmmc_46008000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_46008000, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_46008000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_46008000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_46008000, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_46008000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_46008000_P_clocks_LEN 2
#define DT_N_S_soc_S_sdmmc_46008000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_reg {1174437888 /* 0x46008000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_sdmmc_46008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_reg_IDX_0 1174437888
#define DT_N_S_soc_S_sdmmc_46008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_sdmmc_46008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_sdmmc_46008000_P_resets_IDX_0_VAL_id 3467
#define DT_N_S_soc_S_sdmmc_46008000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_46008000, resets, 0)
#define DT_N_S_soc_S_sdmmc_46008000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_46008000, resets, 0)
#define DT_N_S_soc_S_sdmmc_46008000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_46008000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_46008000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_46008000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_46008000_P_resets_LEN 1
#define DT_N_S_soc_S_sdmmc_46008000_P_resets_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_bus_width 1
#define DT_N_S_soc_S_sdmmc_46008000_P_bus_width_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_sdmmc_46008000_P_bus_width_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_bus_width_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_bus_width_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_clk_div 0
#define DT_N_S_soc_S_sdmmc_46008000_P_clk_div_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_idma 0
#define DT_N_S_soc_S_sdmmc_46008000_P_idma_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_status "disabled"
#define DT_N_S_soc_S_sdmmc_46008000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sdmmc_46008000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sdmmc_46008000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sdmmc_46008000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_sdmmc_46008000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_sdmmc_46008000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_46008000, status, 0)
#define DT_N_S_soc_S_sdmmc_46008000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_46008000, status, 0)
#define DT_N_S_soc_S_sdmmc_46008000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_46008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_46008000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_46008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_46008000_P_status_LEN 1
#define DT_N_S_soc_S_sdmmc_46008000_P_status_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_compatible {"st,stm32-sdmmc"}
#define DT_N_S_soc_S_sdmmc_46008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_compatible_IDX_0 "st,stm32-sdmmc"
#define DT_N_S_soc_S_sdmmc_46008000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-sdmmc
#define DT_N_S_soc_S_sdmmc_46008000_P_compatible_IDX_0_STRING_TOKEN st_stm32_sdmmc
#define DT_N_S_soc_S_sdmmc_46008000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SDMMC
#define DT_N_S_soc_S_sdmmc_46008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_46008000, compatible, 0)
#define DT_N_S_soc_S_sdmmc_46008000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_46008000, compatible, 0)
#define DT_N_S_soc_S_sdmmc_46008000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_46008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_46008000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_46008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_46008000_P_compatible_LEN 1
#define DT_N_S_soc_S_sdmmc_46008000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_interrupts {79 /* 0x4f */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sdmmc_46008000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_interrupts_IDX_0 79
#define DT_N_S_soc_S_sdmmc_46008000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sdmmc_46008000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sdmmc_46008000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_wakeup_source 0
#define DT_N_S_soc_S_sdmmc_46008000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sdmmc_46008000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/sdmmc@46008c00
 *
 * Node identifier: DT_N_S_soc_S_sdmmc_46008c00
 *
 * Binding (compatible = st,stm32-sdmmc):
 *   $ZEPHYR_BASE\dts\bindings\mmc\st,stm32-sdmmc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sdmmc_46008c00_PATH "/soc/sdmmc@46008c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sdmmc_46008c00_FULL_NAME "sdmmc@46008c00"
#define DT_N_S_soc_S_sdmmc_46008c00_FULL_NAME_UNQUOTED sdmmc@46008c00
#define DT_N_S_soc_S_sdmmc_46008c00_FULL_NAME_TOKEN sdmmc_46008c00
#define DT_N_S_soc_S_sdmmc_46008c00_FULL_NAME_UPPER_TOKEN SDMMC_46008C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sdmmc_46008c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sdmmc_46008c00_CHILD_IDX 74

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sdmmc_46008c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_sdmmc_46008c00_FOREACH_NODELABEL(fn) fn(sdmmc2)
#define DT_N_S_soc_S_sdmmc_46008c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(sdmmc2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sdmmc_46008c00_CHILD_NUM 0
#define DT_N_S_soc_S_sdmmc_46008c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sdmmc_46008c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sdmmc_46008c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sdmmc_46008c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdmmc_46008c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sdmmc_46008c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sdmmc_46008c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sdmmc_46008c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdmmc_46008c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sdmmc_46008c00_ORD 81
#define DT_N_S_soc_S_sdmmc_46008c00_ORD_STR_SORTABLE 00081

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sdmmc_46008c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sdmmc_46008c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sdmmc_46008c00_EXISTS 1
#define DT_N_INST_1_st_stm32_sdmmc DT_N_S_soc_S_sdmmc_46008c00
#define DT_N_NODELABEL_sdmmc2      DT_N_S_soc_S_sdmmc_46008c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sdmmc_46008c00_REG_NUM 1
#define DT_N_S_soc_S_sdmmc_46008c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_REG_IDX_0_VAL_ADDRESS 1174440960 /* 0x46008c00 */
#define DT_N_S_soc_S_sdmmc_46008c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_sdmmc_46008c00_RANGES_NUM 0
#define DT_N_S_soc_S_sdmmc_46008c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sdmmc_46008c00_IRQ_NUM 1
#define DT_N_S_soc_S_sdmmc_46008c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_IRQ_IDX_0_VAL_irq 102
#define DT_N_S_soc_S_sdmmc_46008c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sdmmc_46008c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sdmmc_46008c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_sdmmc_46008c00_COMPAT_MATCHES_st_stm32_sdmmc 1
#define DT_N_S_soc_S_sdmmc_46008c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_sdmmc_46008c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_COMPAT_MODEL_IDX_0 "stm32-sdmmc"
#define DT_N_S_soc_S_sdmmc_46008c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sdmmc_46008c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sdmmc_46008c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_sdmmc_46008c00_P_clocks_IDX_0_VAL_bus 148
#define DT_N_S_soc_S_sdmmc_46008c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_clocks_IDX_0_VAL_bits 4096
#define DT_N_S_soc_S_sdmmc_46008c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_sdmmc_46008c00_P_clocks_IDX_1_VAL_bus 13
#define DT_N_S_soc_S_sdmmc_46008c00_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_clocks_IDX_1_VAL_bits 10212
#define DT_N_S_soc_S_sdmmc_46008c00_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_46008c00, clocks, 0) \
	fn(DT_N_S_soc_S_sdmmc_46008c00, clocks, 1)
#define DT_N_S_soc_S_sdmmc_46008c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_46008c00, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_46008c00, clocks, 1)
#define DT_N_S_soc_S_sdmmc_46008c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_46008c00, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_46008c00, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_46008c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_46008c00, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_46008c00, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_46008c00_P_clocks_LEN 2
#define DT_N_S_soc_S_sdmmc_46008c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_reg {1174440960 /* 0x46008c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_sdmmc_46008c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_reg_IDX_0 1174440960
#define DT_N_S_soc_S_sdmmc_46008c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_sdmmc_46008c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_sdmmc_46008c00_P_resets_IDX_0_VAL_id 3468
#define DT_N_S_soc_S_sdmmc_46008c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_46008c00, resets, 0)
#define DT_N_S_soc_S_sdmmc_46008c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_46008c00, resets, 0)
#define DT_N_S_soc_S_sdmmc_46008c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_46008c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_46008c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_46008c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_46008c00_P_resets_LEN 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_bus_width 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_bus_width_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_sdmmc_46008c00_P_bus_width_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_bus_width_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_bus_width_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_clk_div 0
#define DT_N_S_soc_S_sdmmc_46008c00_P_clk_div_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_idma 0
#define DT_N_S_soc_S_sdmmc_46008c00_P_idma_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_status "disabled"
#define DT_N_S_soc_S_sdmmc_46008c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sdmmc_46008c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sdmmc_46008c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sdmmc_46008c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_sdmmc_46008c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_sdmmc_46008c00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_46008c00, status, 0)
#define DT_N_S_soc_S_sdmmc_46008c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_46008c00, status, 0)
#define DT_N_S_soc_S_sdmmc_46008c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_46008c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_46008c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_46008c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_46008c00_P_status_LEN 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_status_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_compatible {"st,stm32-sdmmc"}
#define DT_N_S_soc_S_sdmmc_46008c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_compatible_IDX_0 "st,stm32-sdmmc"
#define DT_N_S_soc_S_sdmmc_46008c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-sdmmc
#define DT_N_S_soc_S_sdmmc_46008c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_sdmmc
#define DT_N_S_soc_S_sdmmc_46008c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SDMMC
#define DT_N_S_soc_S_sdmmc_46008c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_46008c00, compatible, 0)
#define DT_N_S_soc_S_sdmmc_46008c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_46008c00, compatible, 0)
#define DT_N_S_soc_S_sdmmc_46008c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_46008c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_46008c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_46008c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_46008c00_P_compatible_LEN 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_interrupts {102 /* 0x66 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sdmmc_46008c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_interrupts_IDX_0 102
#define DT_N_S_soc_S_sdmmc_46008c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sdmmc_46008c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sdmmc_46008c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_wakeup_source 0
#define DT_N_S_soc_S_sdmmc_46008c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sdmmc_46008c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sdmmc_46008c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/serial@40004400
 *
 * Node identifier: DT_N_S_soc_S_serial_40004400
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE\dts\bindings\serial\st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40004400_PATH "/soc/serial@40004400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40004400_FULL_NAME "serial@40004400"
#define DT_N_S_soc_S_serial_40004400_FULL_NAME_UNQUOTED serial@40004400
#define DT_N_S_soc_S_serial_40004400_FULL_NAME_TOKEN serial_40004400
#define DT_N_S_soc_S_serial_40004400_FULL_NAME_UPPER_TOKEN SERIAL_40004400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40004400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40004400_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40004400_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40004400_FOREACH_NODELABEL(fn) fn(usart2)
#define DT_N_S_soc_S_serial_40004400_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40004400_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40004400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40004400_ORD 82
#define DT_N_S_soc_S_serial_40004400_ORD_STR_SORTABLE 00082

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40004400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40004400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40004400_EXISTS 1
#define DT_N_INST_2_st_stm32_usart DT_N_S_soc_S_serial_40004400
#define DT_N_INST_3_st_stm32_uart  DT_N_S_soc_S_serial_40004400
#define DT_N_NODELABEL_usart2      DT_N_S_soc_S_serial_40004400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40004400_REG_NUM 1
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_VAL_ADDRESS 1073759232 /* 0x40004400 */
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40004400_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40004400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40004400_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_irq 59
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40004400_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40004400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MODEL_IDX_0 "stm32-usart"
#define DT_N_S_soc_S_serial_40004400_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40004400_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_40004400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40004400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40004400_P_reg {1073759232 /* 0x40004400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_0 1073759232
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40004400_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bits 131072
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, clocks, 0)
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, clocks, 0)
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_serial_40004400_P_resets_IDX_0_VAL_id 3729
#define DT_N_S_soc_S_serial_40004400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, resets, 0)
#define DT_N_S_soc_S_serial_40004400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, resets, 0)
#define DT_N_S_soc_S_serial_40004400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts {59 /* 0x3b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_0 59
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40004400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_single_wire 0
#define DT_N_S_soc_S_serial_40004400_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40004400_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_de_enable 0
#define DT_N_S_soc_S_serial_40004400_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40004400_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40004400_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_de_invert 0
#define DT_N_S_soc_S_serial_40004400_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40004400_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40004400_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_status "disabled"
#define DT_N_S_soc_S_serial_40004400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40004400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40004400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40004400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40004400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40004400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, status, 0)
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, status, 0)
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_status_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-usart
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_STRING_TOKEN st_stm32_usart
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USART
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1)
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1)
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40004400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40004400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40004400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40004400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_tx_invert 0
#define DT_N_S_soc_S_serial_40004400_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_rx_invert 0
#define DT_N_S_soc_S_serial_40004400_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/usart3_rx_pd9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_PATH "/soc/pin-controller@42020000/usart3_rx_pd9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FULL_NAME "usart3_rx_pd9"
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FULL_NAME_UNQUOTED usart3_rx_pd9
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FULL_NAME_TOKEN usart3_rx_pd9
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FULL_NAME_UPPER_TOKEN USART3_RX_PD9

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_CHILD_IDX 30

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FOREACH_NODELABEL(fn) fn(usart3_rx_pd9)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart3_rx_pd9, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_ORD 83
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_ORD_STR_SORTABLE 00083

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_SUPPORTS_ORDS \
	85, /* /soc/serial@40004800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_EXISTS 1
#define DT_N_NODELABEL_usart3_rx_pd9 DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_pinmux 1831
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/usart3_tx_pd8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_PATH "/soc/pin-controller@42020000/usart3_tx_pd8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FULL_NAME "usart3_tx_pd8"
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FULL_NAME_UNQUOTED usart3_tx_pd8
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FULL_NAME_TOKEN usart3_tx_pd8
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FULL_NAME_UPPER_TOKEN USART3_TX_PD8

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_CHILD_IDX 32

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FOREACH_NODELABEL(fn) fn(usart3_tx_pd8)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart3_tx_pd8, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_ORD 84
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_ORD_STR_SORTABLE 00084

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_SUPPORTS_ORDS \
	85, /* /soc/serial@40004800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_EXISTS 1
#define DT_N_NODELABEL_usart3_tx_pd8 DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_pinmux 1799
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/serial@40004800
 *
 * Node identifier: DT_N_S_soc_S_serial_40004800
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE\dts\bindings\serial\st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40004800_PATH "/soc/serial@40004800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40004800_FULL_NAME "serial@40004800"
#define DT_N_S_soc_S_serial_40004800_FULL_NAME_UNQUOTED serial@40004800
#define DT_N_S_soc_S_serial_40004800_FULL_NAME_TOKEN serial_40004800
#define DT_N_S_soc_S_serial_40004800_FULL_NAME_UPPER_TOKEN SERIAL_40004800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40004800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40004800_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40004800_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40004800_FOREACH_NODELABEL(fn) fn(usart3)
#define DT_N_S_soc_S_serial_40004800_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40004800_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40004800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40004800_ORD 85
#define DT_N_S_soc_S_serial_40004800_ORD_STR_SORTABLE 00085

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40004800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */ \
	83, /* /soc/pin-controller@42020000/usart3_rx_pd9 */ \
	84, /* /soc/pin-controller@42020000/usart3_tx_pd8 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40004800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40004800_EXISTS 1
#define DT_N_INST_0_st_stm32_usart DT_N_S_soc_S_serial_40004800
#define DT_N_INST_0_st_stm32_uart  DT_N_S_soc_S_serial_40004800
#define DT_N_NODELABEL_usart3      DT_N_S_soc_S_serial_40004800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40004800_REG_NUM 1
#define DT_N_S_soc_S_serial_40004800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_REG_IDX_0_VAL_ADDRESS 1073760256 /* 0x40004800 */
#define DT_N_S_soc_S_serial_40004800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40004800_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40004800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40004800_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_irq 60
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40004800_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40004800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_MODEL_IDX_0 "stm32-usart"
#define DT_N_S_soc_S_serial_40004800_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40004800_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_40004800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40004800_PINCTRL_NUM 1
#define DT_N_S_soc_S_serial_40004800_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_serial_40004800_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40004800_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_serial_40004800_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8
#define DT_N_S_soc_S_serial_40004800_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40004800_P_reg {1073760256 /* 0x40004800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_0 1073760256
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40004800_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, clocks, 0)
#define DT_N_S_soc_S_serial_40004800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004800, clocks, 0)
#define DT_N_S_soc_S_serial_40004800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_serial_40004800_P_resets_IDX_0_VAL_id 3730
#define DT_N_S_soc_S_serial_40004800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, resets, 0)
#define DT_N_S_soc_S_serial_40004800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004800, resets, 0)
#define DT_N_S_soc_S_serial_40004800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40004800_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_interrupts {60 /* 0x3c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_0 60
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40004800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_single_wire 0
#define DT_N_S_soc_S_serial_40004800_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40004800_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_serial_40004800, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004800, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004800, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004800, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_de_enable 0
#define DT_N_S_soc_S_serial_40004800_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40004800_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40004800_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_de_invert 0
#define DT_N_S_soc_S_serial_40004800_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40004800_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_current_speed 115200
#define DT_N_S_soc_S_serial_40004800_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40004800_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_status "okay"
#define DT_N_S_soc_S_serial_40004800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_serial_40004800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_serial_40004800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40004800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_serial_40004800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40004800_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, status, 0)
#define DT_N_S_soc_S_serial_40004800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004800, status, 0)
#define DT_N_S_soc_S_serial_40004800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_status_LEN 1
#define DT_N_S_soc_S_serial_40004800_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-usart
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_0_STRING_TOKEN st_stm32_usart
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USART
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40004800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40004800, compatible, 1)
#define DT_N_S_soc_S_serial_40004800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004800, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, compatible, 1)
#define DT_N_S_soc_S_serial_40004800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004800, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40004800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40004800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40004800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40004800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_tx_invert 0
#define DT_N_S_soc_S_serial_40004800_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_rx_invert 0
#define DT_N_S_soc_S_serial_40004800_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/serial@40004c00
 *
 * Node identifier: DT_N_S_soc_S_serial_40004c00
 *
 * Binding (compatible = st,stm32-uart):
 *   $ZEPHYR_BASE\dts\bindings\serial\st,stm32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40004c00_PATH "/soc/serial@40004c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40004c00_FULL_NAME "serial@40004c00"
#define DT_N_S_soc_S_serial_40004c00_FULL_NAME_UNQUOTED serial@40004c00
#define DT_N_S_soc_S_serial_40004c00_FULL_NAME_TOKEN serial_40004c00
#define DT_N_S_soc_S_serial_40004c00_FULL_NAME_UPPER_TOKEN SERIAL_40004C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40004c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40004c00_CHILD_IDX 46

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40004c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40004c00_FOREACH_NODELABEL(fn) fn(uart4)
#define DT_N_S_soc_S_serial_40004c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart4, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40004c00_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40004c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40004c00_ORD 86
#define DT_N_S_soc_S_serial_40004c00_ORD_STR_SORTABLE 00086

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40004c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40004c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40004c00_EXISTS 1
#define DT_N_INST_4_st_stm32_uart DT_N_S_soc_S_serial_40004c00
#define DT_N_NODELABEL_uart4      DT_N_S_soc_S_serial_40004c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40004c00_REG_NUM 1
#define DT_N_S_soc_S_serial_40004c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_REG_IDX_0_VAL_ADDRESS 1073761280 /* 0x40004c00 */
#define DT_N_S_soc_S_serial_40004c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40004c00_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40004c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40004c00_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_VAL_irq 61
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40004c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40004c00_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40004c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40004c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_COMPAT_MODEL_IDX_0 "stm32-uart"
#define DT_N_S_soc_S_serial_40004c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40004c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40004c00_P_reg {1073761280 /* 0x40004c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40004c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_reg_IDX_0 1073761280
#define DT_N_S_soc_S_serial_40004c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40004c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_VAL_bits 524288
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, clocks, 0)
#define DT_N_S_soc_S_serial_40004c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004c00, clocks, 0)
#define DT_N_S_soc_S_serial_40004c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_serial_40004c00_P_resets_IDX_0_VAL_id 3731
#define DT_N_S_soc_S_serial_40004c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, resets, 0)
#define DT_N_S_soc_S_serial_40004c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004c00, resets, 0)
#define DT_N_S_soc_S_serial_40004c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40004c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_interrupts {61 /* 0x3d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_IDX_0 61
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_single_wire 0
#define DT_N_S_soc_S_serial_40004c00_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40004c00_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_de_enable 0
#define DT_N_S_soc_S_serial_40004c00_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40004c00_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40004c00_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_de_invert 0
#define DT_N_S_soc_S_serial_40004c00_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40004c00_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40004c00_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_status "disabled"
#define DT_N_S_soc_S_serial_40004c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40004c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40004c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40004c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40004c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40004c00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, status, 0)
#define DT_N_S_soc_S_serial_40004c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004c00, status, 0)
#define DT_N_S_soc_S_serial_40004c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_status_LEN 1
#define DT_N_S_soc_S_serial_40004c00_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_compatible {"st,stm32-uart"}
#define DT_N_S_soc_S_serial_40004c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_compatible_IDX_0 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40004c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40004c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40004c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40004c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, compatible, 0)
#define DT_N_S_soc_S_serial_40004c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004c00, compatible, 0)
#define DT_N_S_soc_S_serial_40004c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40004c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40004c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40004c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40004c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_tx_invert 0
#define DT_N_S_soc_S_serial_40004c00_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_rx_invert 0
#define DT_N_S_soc_S_serial_40004c00_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/serial@40005000
 *
 * Node identifier: DT_N_S_soc_S_serial_40005000
 *
 * Binding (compatible = st,stm32-uart):
 *   $ZEPHYR_BASE\dts\bindings\serial\st,stm32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40005000_PATH "/soc/serial@40005000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40005000_FULL_NAME "serial@40005000"
#define DT_N_S_soc_S_serial_40005000_FULL_NAME_UNQUOTED serial@40005000
#define DT_N_S_soc_S_serial_40005000_FULL_NAME_TOKEN serial_40005000
#define DT_N_S_soc_S_serial_40005000_FULL_NAME_UPPER_TOKEN SERIAL_40005000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40005000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40005000_CHILD_IDX 47

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40005000_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40005000_FOREACH_NODELABEL(fn) fn(uart5)
#define DT_N_S_soc_S_serial_40005000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart5, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40005000_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40005000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40005000_ORD 87
#define DT_N_S_soc_S_serial_40005000_ORD_STR_SORTABLE 00087

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40005000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40005000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40005000_EXISTS 1
#define DT_N_INST_5_st_stm32_uart DT_N_S_soc_S_serial_40005000
#define DT_N_NODELABEL_uart5      DT_N_S_soc_S_serial_40005000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40005000_REG_NUM 1
#define DT_N_S_soc_S_serial_40005000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_REG_IDX_0_VAL_ADDRESS 1073762304 /* 0x40005000 */
#define DT_N_S_soc_S_serial_40005000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40005000_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40005000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40005000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_VAL_irq 62
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40005000_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40005000_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40005000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40005000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_COMPAT_MODEL_IDX_0 "stm32-uart"
#define DT_N_S_soc_S_serial_40005000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40005000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40005000_P_reg {1073762304 /* 0x40005000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40005000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_reg_IDX_0 1073762304
#define DT_N_S_soc_S_serial_40005000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40005000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_VAL_bits 1048576
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, clocks, 0)
#define DT_N_S_soc_S_serial_40005000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40005000, clocks, 0)
#define DT_N_S_soc_S_serial_40005000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40005000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_serial_40005000_P_resets_IDX_0_VAL_id 3732
#define DT_N_S_soc_S_serial_40005000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, resets, 0)
#define DT_N_S_soc_S_serial_40005000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40005000, resets, 0)
#define DT_N_S_soc_S_serial_40005000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40005000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40005000_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_interrupts {62 /* 0x3e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40005000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_interrupts_IDX_0 62
#define DT_N_S_soc_S_serial_40005000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40005000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_single_wire 0
#define DT_N_S_soc_S_serial_40005000_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40005000_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_de_enable 0
#define DT_N_S_soc_S_serial_40005000_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40005000_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40005000_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_de_invert 0
#define DT_N_S_soc_S_serial_40005000_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40005000_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40005000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_status "disabled"
#define DT_N_S_soc_S_serial_40005000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40005000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40005000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40005000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40005000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40005000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, status, 0)
#define DT_N_S_soc_S_serial_40005000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40005000, status, 0)
#define DT_N_S_soc_S_serial_40005000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_status_LEN 1
#define DT_N_S_soc_S_serial_40005000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_compatible {"st,stm32-uart"}
#define DT_N_S_soc_S_serial_40005000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_compatible_IDX_0 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40005000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40005000_P_compatible_IDX_0_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40005000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40005000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, compatible, 0)
#define DT_N_S_soc_S_serial_40005000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40005000, compatible, 0)
#define DT_N_S_soc_S_serial_40005000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40005000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40005000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40005000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40005000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_tx_invert 0
#define DT_N_S_soc_S_serial_40005000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_rx_invert 0
#define DT_N_S_soc_S_serial_40005000_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/serial@40006400
 *
 * Node identifier: DT_N_S_soc_S_serial_40006400
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE\dts\bindings\serial\st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40006400_PATH "/soc/serial@40006400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40006400_FULL_NAME "serial@40006400"
#define DT_N_S_soc_S_serial_40006400_FULL_NAME_UNQUOTED serial@40006400
#define DT_N_S_soc_S_serial_40006400_FULL_NAME_TOKEN serial_40006400
#define DT_N_S_soc_S_serial_40006400_FULL_NAME_UPPER_TOKEN SERIAL_40006400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40006400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40006400_CHILD_IDX 51

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40006400_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40006400_FOREACH_NODELABEL(fn) fn(usart6)
#define DT_N_S_soc_S_serial_40006400_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart6, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40006400_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40006400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40006400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40006400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40006400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40006400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40006400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40006400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40006400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40006400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40006400_ORD 88
#define DT_N_S_soc_S_serial_40006400_ORD_STR_SORTABLE 00088

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40006400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40006400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40006400_EXISTS 1
#define DT_N_INST_3_st_stm32_usart DT_N_S_soc_S_serial_40006400
#define DT_N_INST_9_st_stm32_uart  DT_N_S_soc_S_serial_40006400
#define DT_N_NODELABEL_usart6      DT_N_S_soc_S_serial_40006400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40006400_REG_NUM 1
#define DT_N_S_soc_S_serial_40006400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_REG_IDX_0_VAL_ADDRESS 1073767424 /* 0x40006400 */
#define DT_N_S_soc_S_serial_40006400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40006400_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40006400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40006400_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40006400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_IRQ_IDX_0_VAL_irq 85
#define DT_N_S_soc_S_serial_40006400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40006400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40006400_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40006400_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40006400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40006400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_COMPAT_MODEL_IDX_0 "stm32-usart"
#define DT_N_S_soc_S_serial_40006400_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40006400_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40006400_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_40006400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40006400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40006400_P_reg {1073767424 /* 0x40006400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40006400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_reg_IDX_0 1073767424
#define DT_N_S_soc_S_serial_40006400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40006400_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_serial_40006400_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_serial_40006400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_clocks_IDX_0_VAL_bits 33554432
#define DT_N_S_soc_S_serial_40006400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40006400, clocks, 0)
#define DT_N_S_soc_S_serial_40006400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40006400, clocks, 0)
#define DT_N_S_soc_S_serial_40006400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40006400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40006400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40006400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40006400_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40006400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_serial_40006400_P_resets_IDX_0_VAL_id 3737
#define DT_N_S_soc_S_serial_40006400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40006400, resets, 0)
#define DT_N_S_soc_S_serial_40006400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40006400, resets, 0)
#define DT_N_S_soc_S_serial_40006400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40006400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40006400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40006400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40006400_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40006400_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_interrupts {85 /* 0x55 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40006400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_interrupts_IDX_0 85
#define DT_N_S_soc_S_serial_40006400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40006400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_single_wire 0
#define DT_N_S_soc_S_serial_40006400_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40006400_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_de_enable 0
#define DT_N_S_soc_S_serial_40006400_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40006400_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40006400_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_de_invert 0
#define DT_N_S_soc_S_serial_40006400_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40006400_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40006400_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_status "disabled"
#define DT_N_S_soc_S_serial_40006400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40006400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40006400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40006400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40006400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40006400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40006400, status, 0)
#define DT_N_S_soc_S_serial_40006400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40006400, status, 0)
#define DT_N_S_soc_S_serial_40006400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40006400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40006400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40006400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40006400_P_status_LEN 1
#define DT_N_S_soc_S_serial_40006400_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40006400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40006400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-usart
#define DT_N_S_soc_S_serial_40006400_P_compatible_IDX_0_STRING_TOKEN st_stm32_usart
#define DT_N_S_soc_S_serial_40006400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USART
#define DT_N_S_soc_S_serial_40006400_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40006400_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40006400_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40006400_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40006400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40006400, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40006400, compatible, 1)
#define DT_N_S_soc_S_serial_40006400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40006400, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40006400, compatible, 1)
#define DT_N_S_soc_S_serial_40006400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40006400, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40006400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40006400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40006400, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40006400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40006400_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40006400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40006400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40006400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40006400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_tx_invert 0
#define DT_N_S_soc_S_serial_40006400_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40006400_P_rx_invert 0
#define DT_N_S_soc_S_serial_40006400_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/serial@40006800
 *
 * Node identifier: DT_N_S_soc_S_serial_40006800
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE\dts\bindings\serial\st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40006800_PATH "/soc/serial@40006800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40006800_FULL_NAME "serial@40006800"
#define DT_N_S_soc_S_serial_40006800_FULL_NAME_UNQUOTED serial@40006800
#define DT_N_S_soc_S_serial_40006800_FULL_NAME_TOKEN serial_40006800
#define DT_N_S_soc_S_serial_40006800_FULL_NAME_UPPER_TOKEN SERIAL_40006800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40006800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40006800_CHILD_IDX 52

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40006800_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40006800_FOREACH_NODELABEL(fn) fn(usart10)
#define DT_N_S_soc_S_serial_40006800_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart10, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40006800_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40006800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40006800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40006800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40006800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40006800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40006800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40006800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40006800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40006800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40006800_ORD 89
#define DT_N_S_soc_S_serial_40006800_ORD_STR_SORTABLE 00089

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40006800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40006800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40006800_EXISTS 1
#define DT_N_INST_4_st_stm32_usart DT_N_S_soc_S_serial_40006800
#define DT_N_INST_10_st_stm32_uart DT_N_S_soc_S_serial_40006800
#define DT_N_NODELABEL_usart10     DT_N_S_soc_S_serial_40006800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40006800_REG_NUM 1
#define DT_N_S_soc_S_serial_40006800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_REG_IDX_0_VAL_ADDRESS 1073768448 /* 0x40006800 */
#define DT_N_S_soc_S_serial_40006800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40006800_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40006800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40006800_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40006800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_IRQ_IDX_0_VAL_irq 86
#define DT_N_S_soc_S_serial_40006800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40006800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40006800_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40006800_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40006800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40006800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_COMPAT_MODEL_IDX_0 "stm32-usart"
#define DT_N_S_soc_S_serial_40006800_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40006800_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40006800_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_40006800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40006800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40006800_P_reg {1073768448 /* 0x40006800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40006800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_reg_IDX_0 1073768448
#define DT_N_S_soc_S_serial_40006800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40006800_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_serial_40006800_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_serial_40006800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_clocks_IDX_0_VAL_bits 67108864
#define DT_N_S_soc_S_serial_40006800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40006800, clocks, 0)
#define DT_N_S_soc_S_serial_40006800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40006800, clocks, 0)
#define DT_N_S_soc_S_serial_40006800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40006800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40006800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40006800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40006800_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40006800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_serial_40006800_P_resets_IDX_0_VAL_id 3738
#define DT_N_S_soc_S_serial_40006800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40006800, resets, 0)
#define DT_N_S_soc_S_serial_40006800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40006800, resets, 0)
#define DT_N_S_soc_S_serial_40006800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40006800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40006800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40006800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40006800_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40006800_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_interrupts {86 /* 0x56 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40006800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_interrupts_IDX_0 86
#define DT_N_S_soc_S_serial_40006800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40006800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_single_wire 0
#define DT_N_S_soc_S_serial_40006800_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40006800_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_de_enable 0
#define DT_N_S_soc_S_serial_40006800_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40006800_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40006800_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_de_invert 0
#define DT_N_S_soc_S_serial_40006800_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40006800_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40006800_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_status "disabled"
#define DT_N_S_soc_S_serial_40006800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40006800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40006800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40006800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40006800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40006800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40006800, status, 0)
#define DT_N_S_soc_S_serial_40006800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40006800, status, 0)
#define DT_N_S_soc_S_serial_40006800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40006800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40006800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40006800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40006800_P_status_LEN 1
#define DT_N_S_soc_S_serial_40006800_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40006800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40006800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-usart
#define DT_N_S_soc_S_serial_40006800_P_compatible_IDX_0_STRING_TOKEN st_stm32_usart
#define DT_N_S_soc_S_serial_40006800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USART
#define DT_N_S_soc_S_serial_40006800_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40006800_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40006800_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40006800_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40006800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40006800, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40006800, compatible, 1)
#define DT_N_S_soc_S_serial_40006800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40006800, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40006800, compatible, 1)
#define DT_N_S_soc_S_serial_40006800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40006800, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40006800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40006800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40006800, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40006800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40006800_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40006800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40006800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40006800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40006800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_tx_invert 0
#define DT_N_S_soc_S_serial_40006800_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40006800_P_rx_invert 0
#define DT_N_S_soc_S_serial_40006800_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/serial@40006c00
 *
 * Node identifier: DT_N_S_soc_S_serial_40006c00
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE\dts\bindings\serial\st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40006c00_PATH "/soc/serial@40006c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40006c00_FULL_NAME "serial@40006c00"
#define DT_N_S_soc_S_serial_40006c00_FULL_NAME_UNQUOTED serial@40006c00
#define DT_N_S_soc_S_serial_40006c00_FULL_NAME_TOKEN serial_40006c00
#define DT_N_S_soc_S_serial_40006c00_FULL_NAME_UPPER_TOKEN SERIAL_40006C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40006c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40006c00_CHILD_IDX 53

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40006c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40006c00_FOREACH_NODELABEL(fn) fn(usart11)
#define DT_N_S_soc_S_serial_40006c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart11, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40006c00_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40006c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40006c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40006c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40006c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40006c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40006c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40006c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40006c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40006c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40006c00_ORD 90
#define DT_N_S_soc_S_serial_40006c00_ORD_STR_SORTABLE 00090

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40006c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40006c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40006c00_EXISTS 1
#define DT_N_INST_5_st_stm32_usart DT_N_S_soc_S_serial_40006c00
#define DT_N_INST_11_st_stm32_uart DT_N_S_soc_S_serial_40006c00
#define DT_N_NODELABEL_usart11     DT_N_S_soc_S_serial_40006c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40006c00_REG_NUM 1
#define DT_N_S_soc_S_serial_40006c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_REG_IDX_0_VAL_ADDRESS 1073769472 /* 0x40006c00 */
#define DT_N_S_soc_S_serial_40006c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40006c00_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40006c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40006c00_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40006c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_IRQ_IDX_0_VAL_irq 87
#define DT_N_S_soc_S_serial_40006c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40006c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40006c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40006c00_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40006c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40006c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_COMPAT_MODEL_IDX_0 "stm32-usart"
#define DT_N_S_soc_S_serial_40006c00_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40006c00_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40006c00_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_40006c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40006c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40006c00_P_reg {1073769472 /* 0x40006c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40006c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_reg_IDX_0 1073769472
#define DT_N_S_soc_S_serial_40006c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40006c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_serial_40006c00_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_serial_40006c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_clocks_IDX_0_VAL_bits 134217728
#define DT_N_S_soc_S_serial_40006c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40006c00, clocks, 0)
#define DT_N_S_soc_S_serial_40006c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40006c00, clocks, 0)
#define DT_N_S_soc_S_serial_40006c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40006c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40006c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40006c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40006c00_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40006c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_serial_40006c00_P_resets_IDX_0_VAL_id 3739
#define DT_N_S_soc_S_serial_40006c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40006c00, resets, 0)
#define DT_N_S_soc_S_serial_40006c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40006c00, resets, 0)
#define DT_N_S_soc_S_serial_40006c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40006c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40006c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40006c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40006c00_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40006c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_interrupts {87 /* 0x57 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40006c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_interrupts_IDX_0 87
#define DT_N_S_soc_S_serial_40006c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40006c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_single_wire 0
#define DT_N_S_soc_S_serial_40006c00_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40006c00_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_de_enable 0
#define DT_N_S_soc_S_serial_40006c00_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40006c00_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40006c00_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_de_invert 0
#define DT_N_S_soc_S_serial_40006c00_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40006c00_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40006c00_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_status "disabled"
#define DT_N_S_soc_S_serial_40006c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40006c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40006c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40006c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40006c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40006c00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40006c00, status, 0)
#define DT_N_S_soc_S_serial_40006c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40006c00, status, 0)
#define DT_N_S_soc_S_serial_40006c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40006c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40006c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40006c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40006c00_P_status_LEN 1
#define DT_N_S_soc_S_serial_40006c00_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40006c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40006c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-usart
#define DT_N_S_soc_S_serial_40006c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_usart
#define DT_N_S_soc_S_serial_40006c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USART
#define DT_N_S_soc_S_serial_40006c00_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40006c00_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40006c00_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40006c00_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40006c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40006c00, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40006c00, compatible, 1)
#define DT_N_S_soc_S_serial_40006c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40006c00, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40006c00, compatible, 1)
#define DT_N_S_soc_S_serial_40006c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40006c00, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40006c00, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40006c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40006c00, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40006c00, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40006c00_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40006c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40006c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40006c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40006c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_tx_invert 0
#define DT_N_S_soc_S_serial_40006c00_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40006c00_P_rx_invert 0
#define DT_N_S_soc_S_serial_40006c00_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/serial@40007800
 *
 * Node identifier: DT_N_S_soc_S_serial_40007800
 *
 * Binding (compatible = st,stm32-uart):
 *   $ZEPHYR_BASE\dts\bindings\serial\st,stm32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40007800_PATH "/soc/serial@40007800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40007800_FULL_NAME "serial@40007800"
#define DT_N_S_soc_S_serial_40007800_FULL_NAME_UNQUOTED serial@40007800
#define DT_N_S_soc_S_serial_40007800_FULL_NAME_TOKEN serial_40007800
#define DT_N_S_soc_S_serial_40007800_FULL_NAME_UPPER_TOKEN SERIAL_40007800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40007800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40007800_CHILD_IDX 48

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40007800_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40007800_FOREACH_NODELABEL(fn) fn(uart7)
#define DT_N_S_soc_S_serial_40007800_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart7, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40007800_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40007800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40007800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40007800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40007800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40007800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40007800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40007800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40007800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40007800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40007800_ORD 91
#define DT_N_S_soc_S_serial_40007800_ORD_STR_SORTABLE 00091

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40007800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40007800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40007800_EXISTS 1
#define DT_N_INST_6_st_stm32_uart DT_N_S_soc_S_serial_40007800
#define DT_N_NODELABEL_uart7      DT_N_S_soc_S_serial_40007800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40007800_REG_NUM 1
#define DT_N_S_soc_S_serial_40007800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_REG_IDX_0_VAL_ADDRESS 1073772544 /* 0x40007800 */
#define DT_N_S_soc_S_serial_40007800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40007800_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40007800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40007800_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40007800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_IRQ_IDX_0_VAL_irq 98
#define DT_N_S_soc_S_serial_40007800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40007800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40007800_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40007800_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40007800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40007800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_COMPAT_MODEL_IDX_0 "stm32-uart"
#define DT_N_S_soc_S_serial_40007800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40007800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40007800_P_reg {1073772544 /* 0x40007800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40007800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_reg_IDX_0 1073772544
#define DT_N_S_soc_S_serial_40007800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40007800_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_serial_40007800_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_serial_40007800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_clocks_IDX_0_VAL_bits 1073741824
#define DT_N_S_soc_S_serial_40007800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40007800, clocks, 0)
#define DT_N_S_soc_S_serial_40007800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40007800, clocks, 0)
#define DT_N_S_soc_S_serial_40007800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40007800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40007800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007800_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40007800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_serial_40007800_P_resets_IDX_0_VAL_id 3742
#define DT_N_S_soc_S_serial_40007800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40007800, resets, 0)
#define DT_N_S_soc_S_serial_40007800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40007800, resets, 0)
#define DT_N_S_soc_S_serial_40007800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40007800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40007800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007800_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40007800_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_interrupts {98 /* 0x62 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40007800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_interrupts_IDX_0 98
#define DT_N_S_soc_S_serial_40007800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40007800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_single_wire 0
#define DT_N_S_soc_S_serial_40007800_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40007800_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_de_enable 0
#define DT_N_S_soc_S_serial_40007800_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40007800_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40007800_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_de_invert 0
#define DT_N_S_soc_S_serial_40007800_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40007800_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40007800_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_status "disabled"
#define DT_N_S_soc_S_serial_40007800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40007800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40007800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40007800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40007800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40007800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40007800, status, 0)
#define DT_N_S_soc_S_serial_40007800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40007800, status, 0)
#define DT_N_S_soc_S_serial_40007800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40007800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40007800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007800_P_status_LEN 1
#define DT_N_S_soc_S_serial_40007800_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_compatible {"st,stm32-uart"}
#define DT_N_S_soc_S_serial_40007800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_compatible_IDX_0 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40007800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40007800_P_compatible_IDX_0_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40007800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40007800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40007800, compatible, 0)
#define DT_N_S_soc_S_serial_40007800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40007800, compatible, 0)
#define DT_N_S_soc_S_serial_40007800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40007800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40007800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007800_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40007800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40007800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40007800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40007800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_tx_invert 0
#define DT_N_S_soc_S_serial_40007800_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_rx_invert 0
#define DT_N_S_soc_S_serial_40007800_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/serial@40007c00
 *
 * Node identifier: DT_N_S_soc_S_serial_40007c00
 *
 * Binding (compatible = st,stm32-uart):
 *   $ZEPHYR_BASE\dts\bindings\serial\st,stm32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40007c00_PATH "/soc/serial@40007c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40007c00_FULL_NAME "serial@40007c00"
#define DT_N_S_soc_S_serial_40007c00_FULL_NAME_UNQUOTED serial@40007c00
#define DT_N_S_soc_S_serial_40007c00_FULL_NAME_TOKEN serial_40007c00
#define DT_N_S_soc_S_serial_40007c00_FULL_NAME_UPPER_TOKEN SERIAL_40007C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40007c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40007c00_CHILD_IDX 49

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40007c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40007c00_FOREACH_NODELABEL(fn) fn(uart8)
#define DT_N_S_soc_S_serial_40007c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart8, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40007c00_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40007c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40007c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40007c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40007c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40007c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40007c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40007c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40007c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40007c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40007c00_ORD 92
#define DT_N_S_soc_S_serial_40007c00_ORD_STR_SORTABLE 00092

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40007c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40007c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40007c00_EXISTS 1
#define DT_N_INST_7_st_stm32_uart DT_N_S_soc_S_serial_40007c00
#define DT_N_NODELABEL_uart8      DT_N_S_soc_S_serial_40007c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40007c00_REG_NUM 1
#define DT_N_S_soc_S_serial_40007c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_REG_IDX_0_VAL_ADDRESS 1073773568 /* 0x40007c00 */
#define DT_N_S_soc_S_serial_40007c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40007c00_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40007c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40007c00_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40007c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_IRQ_IDX_0_VAL_irq 99
#define DT_N_S_soc_S_serial_40007c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40007c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40007c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40007c00_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40007c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40007c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_COMPAT_MODEL_IDX_0 "stm32-uart"
#define DT_N_S_soc_S_serial_40007c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40007c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40007c00_P_reg {1073773568 /* 0x40007c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40007c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_reg_IDX_0 1073773568
#define DT_N_S_soc_S_serial_40007c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40007c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_serial_40007c00_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_serial_40007c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_clocks_IDX_0_VAL_bits 2147483648
#define DT_N_S_soc_S_serial_40007c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40007c00, clocks, 0)
#define DT_N_S_soc_S_serial_40007c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40007c00, clocks, 0)
#define DT_N_S_soc_S_serial_40007c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40007c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40007c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007c00_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40007c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_serial_40007c00_P_resets_IDX_0_VAL_id 3743
#define DT_N_S_soc_S_serial_40007c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40007c00, resets, 0)
#define DT_N_S_soc_S_serial_40007c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40007c00, resets, 0)
#define DT_N_S_soc_S_serial_40007c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40007c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40007c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007c00_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40007c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_interrupts {99 /* 0x63 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40007c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_interrupts_IDX_0 99
#define DT_N_S_soc_S_serial_40007c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40007c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_single_wire 0
#define DT_N_S_soc_S_serial_40007c00_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40007c00_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_de_enable 0
#define DT_N_S_soc_S_serial_40007c00_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40007c00_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40007c00_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_de_invert 0
#define DT_N_S_soc_S_serial_40007c00_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40007c00_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40007c00_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_status "disabled"
#define DT_N_S_soc_S_serial_40007c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40007c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40007c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40007c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40007c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40007c00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40007c00, status, 0)
#define DT_N_S_soc_S_serial_40007c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40007c00, status, 0)
#define DT_N_S_soc_S_serial_40007c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40007c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40007c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007c00_P_status_LEN 1
#define DT_N_S_soc_S_serial_40007c00_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_compatible {"st,stm32-uart"}
#define DT_N_S_soc_S_serial_40007c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_compatible_IDX_0 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40007c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40007c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40007c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40007c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40007c00, compatible, 0)
#define DT_N_S_soc_S_serial_40007c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40007c00, compatible, 0)
#define DT_N_S_soc_S_serial_40007c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40007c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40007c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007c00_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40007c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40007c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40007c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40007c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_tx_invert 0
#define DT_N_S_soc_S_serial_40007c00_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_rx_invert 0
#define DT_N_S_soc_S_serial_40007c00_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/serial@40008000
 *
 * Node identifier: DT_N_S_soc_S_serial_40008000
 *
 * Binding (compatible = st,stm32-uart):
 *   $ZEPHYR_BASE\dts\bindings\serial\st,stm32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40008000_PATH "/soc/serial@40008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40008000_FULL_NAME "serial@40008000"
#define DT_N_S_soc_S_serial_40008000_FULL_NAME_UNQUOTED serial@40008000
#define DT_N_S_soc_S_serial_40008000_FULL_NAME_TOKEN serial_40008000
#define DT_N_S_soc_S_serial_40008000_FULL_NAME_UPPER_TOKEN SERIAL_40008000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40008000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40008000_CHILD_IDX 50

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40008000_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40008000_FOREACH_NODELABEL(fn) fn(uart9)
#define DT_N_S_soc_S_serial_40008000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart9, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40008000_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40008000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40008000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40008000_ORD 93
#define DT_N_S_soc_S_serial_40008000_ORD_STR_SORTABLE 00093

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40008000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40008000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40008000_EXISTS 1
#define DT_N_INST_8_st_stm32_uart DT_N_S_soc_S_serial_40008000
#define DT_N_NODELABEL_uart9      DT_N_S_soc_S_serial_40008000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40008000_REG_NUM 1
#define DT_N_S_soc_S_serial_40008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_REG_IDX_0_VAL_ADDRESS 1073774592 /* 0x40008000 */
#define DT_N_S_soc_S_serial_40008000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40008000_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40008000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40008000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_VAL_irq 100
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40008000_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40008000_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40008000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40008000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_COMPAT_MODEL_IDX_0 "stm32-uart"
#define DT_N_S_soc_S_serial_40008000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40008000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40008000_P_reg {1073774592 /* 0x40008000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_reg_IDX_0 1073774592
#define DT_N_S_soc_S_serial_40008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_VAL_bus 160
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, clocks, 0)
#define DT_N_S_soc_S_serial_40008000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40008000, clocks, 0)
#define DT_N_S_soc_S_serial_40008000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40008000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40008000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_serial_40008000_P_resets_IDX_0_VAL_id 3840
#define DT_N_S_soc_S_serial_40008000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, resets, 0)
#define DT_N_S_soc_S_serial_40008000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40008000, resets, 0)
#define DT_N_S_soc_S_serial_40008000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40008000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40008000_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_interrupts {100 /* 0x64 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40008000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_interrupts_IDX_0 100
#define DT_N_S_soc_S_serial_40008000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40008000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_single_wire 0
#define DT_N_S_soc_S_serial_40008000_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40008000_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_de_enable 0
#define DT_N_S_soc_S_serial_40008000_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40008000_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40008000_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_de_invert 0
#define DT_N_S_soc_S_serial_40008000_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40008000_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40008000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_status "disabled"
#define DT_N_S_soc_S_serial_40008000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40008000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40008000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40008000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40008000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40008000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, status, 0)
#define DT_N_S_soc_S_serial_40008000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40008000, status, 0)
#define DT_N_S_soc_S_serial_40008000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_status_LEN 1
#define DT_N_S_soc_S_serial_40008000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_compatible {"st,stm32-uart"}
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_0 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_0_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40008000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008000, compatible, 0)
#define DT_N_S_soc_S_serial_40008000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40008000, compatible, 0)
#define DT_N_S_soc_S_serial_40008000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008000_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40008000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40008000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40008000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40008000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_tx_invert 0
#define DT_N_S_soc_S_serial_40008000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40008000_P_rx_invert 0
#define DT_N_S_soc_S_serial_40008000_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/serial@40008400
 *
 * Node identifier: DT_N_S_soc_S_serial_40008400
 *
 * Binding (compatible = st,stm32-uart):
 *   $ZEPHYR_BASE\dts\bindings\serial\st,stm32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40008400_PATH "/soc/serial@40008400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40008400_FULL_NAME "serial@40008400"
#define DT_N_S_soc_S_serial_40008400_FULL_NAME_UNQUOTED serial@40008400
#define DT_N_S_soc_S_serial_40008400_FULL_NAME_TOKEN serial_40008400
#define DT_N_S_soc_S_serial_40008400_FULL_NAME_UPPER_TOKEN SERIAL_40008400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40008400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40008400_CHILD_IDX 54

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40008400_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40008400_FOREACH_NODELABEL(fn) fn(uart12)
#define DT_N_S_soc_S_serial_40008400_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart12, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40008400_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40008400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40008400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40008400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40008400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40008400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40008400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40008400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40008400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40008400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40008400_ORD 94
#define DT_N_S_soc_S_serial_40008400_ORD_STR_SORTABLE 00094

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40008400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40008400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40008400_EXISTS 1
#define DT_N_INST_12_st_stm32_uart DT_N_S_soc_S_serial_40008400
#define DT_N_NODELABEL_uart12      DT_N_S_soc_S_serial_40008400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40008400_REG_NUM 1
#define DT_N_S_soc_S_serial_40008400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_REG_IDX_0_VAL_ADDRESS 1073775616 /* 0x40008400 */
#define DT_N_S_soc_S_serial_40008400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40008400_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40008400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40008400_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40008400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_IRQ_IDX_0_VAL_irq 101
#define DT_N_S_soc_S_serial_40008400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40008400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40008400_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40008400_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40008400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40008400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_COMPAT_MODEL_IDX_0 "stm32-uart"
#define DT_N_S_soc_S_serial_40008400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40008400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40008400_P_reg {1073775616 /* 0x40008400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40008400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_reg_IDX_0 1073775616
#define DT_N_S_soc_S_serial_40008400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40008400_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_serial_40008400_P_clocks_IDX_0_VAL_bus 160
#define DT_N_S_soc_S_serial_40008400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_serial_40008400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008400, clocks, 0)
#define DT_N_S_soc_S_serial_40008400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40008400, clocks, 0)
#define DT_N_S_soc_S_serial_40008400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40008400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008400_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40008400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_serial_40008400_P_resets_IDX_0_VAL_id 3841
#define DT_N_S_soc_S_serial_40008400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008400, resets, 0)
#define DT_N_S_soc_S_serial_40008400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40008400, resets, 0)
#define DT_N_S_soc_S_serial_40008400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40008400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008400_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40008400_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_interrupts {101 /* 0x65 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40008400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_interrupts_IDX_0 101
#define DT_N_S_soc_S_serial_40008400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40008400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_single_wire 0
#define DT_N_S_soc_S_serial_40008400_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40008400_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_de_enable 0
#define DT_N_S_soc_S_serial_40008400_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40008400_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40008400_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_de_invert 0
#define DT_N_S_soc_S_serial_40008400_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40008400_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40008400_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_status "disabled"
#define DT_N_S_soc_S_serial_40008400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40008400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40008400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40008400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40008400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40008400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008400, status, 0)
#define DT_N_S_soc_S_serial_40008400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40008400, status, 0)
#define DT_N_S_soc_S_serial_40008400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40008400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008400_P_status_LEN 1
#define DT_N_S_soc_S_serial_40008400_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_compatible {"st,stm32-uart"}
#define DT_N_S_soc_S_serial_40008400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_compatible_IDX_0 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40008400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40008400_P_compatible_IDX_0_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40008400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40008400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40008400, compatible, 0)
#define DT_N_S_soc_S_serial_40008400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40008400, compatible, 0)
#define DT_N_S_soc_S_serial_40008400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40008400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40008400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40008400_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40008400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40008400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40008400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40008400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_tx_invert 0
#define DT_N_S_soc_S_serial_40008400_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40008400_P_rx_invert 0
#define DT_N_S_soc_S_serial_40008400_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/serial@40013800
 *
 * Node identifier: DT_N_S_soc_S_serial_40013800
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE\dts\bindings\serial\st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40013800_PATH "/soc/serial@40013800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40013800_FULL_NAME "serial@40013800"
#define DT_N_S_soc_S_serial_40013800_FULL_NAME_UNQUOTED serial@40013800
#define DT_N_S_soc_S_serial_40013800_FULL_NAME_TOKEN serial_40013800
#define DT_N_S_soc_S_serial_40013800_FULL_NAME_UPPER_TOKEN SERIAL_40013800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40013800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40013800_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40013800_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40013800_FOREACH_NODELABEL(fn) fn(usart1)
#define DT_N_S_soc_S_serial_40013800_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40013800_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40013800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40013800_ORD 95
#define DT_N_S_soc_S_serial_40013800_ORD_STR_SORTABLE 00095

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40013800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40013800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40013800_EXISTS 1
#define DT_N_INST_1_st_stm32_usart DT_N_S_soc_S_serial_40013800
#define DT_N_INST_2_st_stm32_uart  DT_N_S_soc_S_serial_40013800
#define DT_N_NODELABEL_usart1      DT_N_S_soc_S_serial_40013800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40013800_REG_NUM 1
#define DT_N_S_soc_S_serial_40013800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_REG_IDX_0_VAL_ADDRESS 1073821696 /* 0x40013800 */
#define DT_N_S_soc_S_serial_40013800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40013800_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40013800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40013800_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_irq 58
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40013800_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40013800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_MODEL_IDX_0 "stm32-usart"
#define DT_N_S_soc_S_serial_40013800_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40013800_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_40013800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40013800_P_reg {1073821696 /* 0x40013800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_0 1073821696
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40013800_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bus 164
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, clocks, 0)
#define DT_N_S_soc_S_serial_40013800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, clocks, 0)
#define DT_N_S_soc_S_serial_40013800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_serial_40013800_P_resets_IDX_0_VAL_id 3982
#define DT_N_S_soc_S_serial_40013800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, resets, 0)
#define DT_N_S_soc_S_serial_40013800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, resets, 0)
#define DT_N_S_soc_S_serial_40013800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40013800_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_interrupts {58 /* 0x3a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_0 58
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40013800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_single_wire 0
#define DT_N_S_soc_S_serial_40013800_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40013800_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_de_enable 0
#define DT_N_S_soc_S_serial_40013800_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40013800_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40013800_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_de_invert 0
#define DT_N_S_soc_S_serial_40013800_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40013800_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40013800_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_status "disabled"
#define DT_N_S_soc_S_serial_40013800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40013800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40013800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40013800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40013800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40013800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, status, 0)
#define DT_N_S_soc_S_serial_40013800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, status, 0)
#define DT_N_S_soc_S_serial_40013800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_status_LEN 1
#define DT_N_S_soc_S_serial_40013800_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-usart
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0_STRING_TOKEN st_stm32_usart
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USART
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40013800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40013800, compatible, 1)
#define DT_N_S_soc_S_serial_40013800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, compatible, 1)
#define DT_N_S_soc_S_serial_40013800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40013800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40013800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40013800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40013800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_tx_invert 0
#define DT_N_S_soc_S_serial_40013800_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_rx_invert 0
#define DT_N_S_soc_S_serial_40013800_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/lpuart1_rx_pb7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_PATH "/soc/pin-controller@42020000/lpuart1_rx_pb7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_FULL_NAME "lpuart1_rx_pb7"
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_FULL_NAME_UNQUOTED lpuart1_rx_pb7
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_FULL_NAME_TOKEN lpuart1_rx_pb7
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_FULL_NAME_UPPER_TOKEN LPUART1_RX_PB7

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_CHILD_IDX 29

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_FOREACH_NODELABEL(fn) fn(lpuart1_rx_pb7)
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_FOREACH_NODELABEL_VARGS(fn, ...) fn(lpuart1_rx_pb7, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_ORD 96
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_ORD_STR_SORTABLE 00096

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_SUPPORTS_ORDS \
	98, /* /soc/serial@44002400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_EXISTS 1
#define DT_N_NODELABEL_lpuart1_rx_pb7 DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_pinmux 744
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/lpuart1_tx_pb6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_PATH "/soc/pin-controller@42020000/lpuart1_tx_pb6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_FULL_NAME "lpuart1_tx_pb6"
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_FULL_NAME_UNQUOTED lpuart1_tx_pb6
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_FULL_NAME_TOKEN lpuart1_tx_pb6
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_FULL_NAME_UPPER_TOKEN LPUART1_TX_PB6

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_CHILD_IDX 31

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_FOREACH_NODELABEL(fn) fn(lpuart1_tx_pb6)
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_FOREACH_NODELABEL_VARGS(fn, ...) fn(lpuart1_tx_pb6, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_ORD 97
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_ORD_STR_SORTABLE 00097

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_SUPPORTS_ORDS \
	98, /* /soc/serial@44002400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_EXISTS 1
#define DT_N_NODELABEL_lpuart1_tx_pb6 DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_pinmux 712
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/serial@44002400
 *
 * Node identifier: DT_N_S_soc_S_serial_44002400
 *
 * Binding (compatible = st,stm32-lpuart):
 *   $ZEPHYR_BASE\dts\bindings\serial\st,stm32-lpuart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_44002400_PATH "/soc/serial@44002400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_44002400_FULL_NAME "serial@44002400"
#define DT_N_S_soc_S_serial_44002400_FULL_NAME_UNQUOTED serial@44002400
#define DT_N_S_soc_S_serial_44002400_FULL_NAME_TOKEN serial_44002400
#define DT_N_S_soc_S_serial_44002400_FULL_NAME_UPPER_TOKEN SERIAL_44002400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_44002400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_44002400_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_44002400_NODELABEL_NUM 2
#define DT_N_S_soc_S_serial_44002400_FOREACH_NODELABEL(fn) fn(lpuart1) fn(arduino_serial)
#define DT_N_S_soc_S_serial_44002400_FOREACH_NODELABEL_VARGS(fn, ...) fn(lpuart1, __VA_ARGS__) fn(arduino_serial, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_44002400_CHILD_NUM 0
#define DT_N_S_soc_S_serial_44002400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_44002400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_44002400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_44002400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_44002400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_44002400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_44002400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_44002400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_44002400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_44002400_ORD 98
#define DT_N_S_soc_S_serial_44002400_ORD_STR_SORTABLE 00098

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_44002400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */ \
	96, /* /soc/pin-controller@42020000/lpuart1_rx_pb7 */ \
	97, /* /soc/pin-controller@42020000/lpuart1_tx_pb6 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_44002400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_44002400_EXISTS 1
#define DT_N_INST_0_st_stm32_lpuart   DT_N_S_soc_S_serial_44002400
#define DT_N_INST_1_st_stm32_uart     DT_N_S_soc_S_serial_44002400
#define DT_N_NODELABEL_lpuart1        DT_N_S_soc_S_serial_44002400
#define DT_N_NODELABEL_arduino_serial DT_N_S_soc_S_serial_44002400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_44002400_REG_NUM 1
#define DT_N_S_soc_S_serial_44002400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_REG_IDX_0_VAL_ADDRESS 1140859904 /* 0x44002400 */
#define DT_N_S_soc_S_serial_44002400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_44002400_RANGES_NUM 0
#define DT_N_S_soc_S_serial_44002400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_44002400_IRQ_NUM 1
#define DT_N_S_soc_S_serial_44002400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_IRQ_IDX_0_VAL_irq 63
#define DT_N_S_soc_S_serial_44002400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_44002400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_44002400_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_44002400_COMPAT_MATCHES_st_stm32_lpuart 1
#define DT_N_S_soc_S_serial_44002400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_44002400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_COMPAT_MODEL_IDX_0 "stm32-lpuart"
#define DT_N_S_soc_S_serial_44002400_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_44002400_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_44002400_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_44002400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_44002400_PINCTRL_NUM 1
#define DT_N_S_soc_S_serial_44002400_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_serial_44002400_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_44002400_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_serial_44002400_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6
#define DT_N_S_soc_S_serial_44002400_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7

/* Generic property macros: */
#define DT_N_S_soc_S_serial_44002400_P_reg {1140859904 /* 0x44002400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_44002400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_reg_IDX_0 1140859904
#define DT_N_S_soc_S_serial_44002400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_44002400_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_serial_44002400_P_clocks_IDX_0_VAL_bus 168
#define DT_N_S_soc_S_serial_44002400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_clocks_IDX_0_VAL_bits 64
#define DT_N_S_soc_S_serial_44002400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_44002400, clocks, 0)
#define DT_N_S_soc_S_serial_44002400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_44002400, clocks, 0)
#define DT_N_S_soc_S_serial_44002400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_44002400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44002400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_44002400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44002400_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_44002400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_serial_44002400_P_resets_IDX_0_VAL_id 4102
#define DT_N_S_soc_S_serial_44002400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_44002400, resets, 0)
#define DT_N_S_soc_S_serial_44002400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_44002400, resets, 0)
#define DT_N_S_soc_S_serial_44002400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_44002400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44002400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_44002400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44002400_P_resets_LEN 1
#define DT_N_S_soc_S_serial_44002400_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_interrupts {63 /* 0x3f */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_44002400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_interrupts_IDX_0 63
#define DT_N_S_soc_S_serial_44002400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_44002400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_single_wire 0
#define DT_N_S_soc_S_serial_44002400_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_44002400_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6
#define DT_N_S_soc_S_serial_44002400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6
#define DT_N_S_soc_S_serial_44002400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7
#define DT_N_S_soc_S_serial_44002400_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7
#define DT_N_S_soc_S_serial_44002400_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_44002400, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_serial_44002400, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_44002400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_44002400, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_44002400, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_44002400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_44002400, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_44002400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44002400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_44002400, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_44002400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44002400_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_serial_44002400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_serial_44002400_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_serial_44002400_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_serial_44002400_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_serial_44002400_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_44002400_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_44002400, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_44002400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_44002400, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_44002400_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_44002400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44002400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_44002400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44002400_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_serial_44002400_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_de_enable 0
#define DT_N_S_soc_S_serial_44002400_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_de_assert_time 0
#define DT_N_S_soc_S_serial_44002400_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_44002400_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_de_invert 0
#define DT_N_S_soc_S_serial_44002400_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_fifo_enable 0
#define DT_N_S_soc_S_serial_44002400_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_current_speed 115200
#define DT_N_S_soc_S_serial_44002400_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_44002400_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_status "okay"
#define DT_N_S_soc_S_serial_44002400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_serial_44002400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_serial_44002400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_44002400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_serial_44002400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_serial_44002400_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_44002400, status, 0)
#define DT_N_S_soc_S_serial_44002400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_44002400, status, 0)
#define DT_N_S_soc_S_serial_44002400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_44002400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44002400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_44002400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44002400_P_status_LEN 1
#define DT_N_S_soc_S_serial_44002400_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_compatible {"st,stm32-lpuart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_44002400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_compatible_IDX_0 "st,stm32-lpuart"
#define DT_N_S_soc_S_serial_44002400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-lpuart
#define DT_N_S_soc_S_serial_44002400_P_compatible_IDX_0_STRING_TOKEN st_stm32_lpuart
#define DT_N_S_soc_S_serial_44002400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_LPUART
#define DT_N_S_soc_S_serial_44002400_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_44002400_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_44002400_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_44002400_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_44002400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_44002400, compatible, 0) \
	fn(DT_N_S_soc_S_serial_44002400, compatible, 1)
#define DT_N_S_soc_S_serial_44002400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_44002400, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_44002400, compatible, 1)
#define DT_N_S_soc_S_serial_44002400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_44002400, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_44002400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44002400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_44002400, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_44002400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_44002400_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_44002400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_44002400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_wakeup_source 0
#define DT_N_S_soc_S_serial_44002400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_44002400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_tx_invert 0
#define DT_N_S_soc_S_serial_44002400_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_44002400_P_rx_invert 0
#define DT_N_S_soc_S_serial_44002400_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800
 *
 * Node identifier: DT_N_S_soc_S_spi_40003800
 *
 * Binding (compatible = st,stm32h7-spi):
 *   $ZEPHYR_BASE\dts\bindings\spi\st,stm32h7-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003800_PATH "/soc/spi@40003800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003800_FULL_NAME "spi@40003800"
#define DT_N_S_soc_S_spi_40003800_FULL_NAME_UNQUOTED spi@40003800
#define DT_N_S_soc_S_spi_40003800_FULL_NAME_TOKEN spi_40003800
#define DT_N_S_soc_S_spi_40003800_FULL_NAME_UPPER_TOKEN SPI_40003800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003800_CHILD_IDX 27

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_40003800_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_40003800_FOREACH_NODELABEL(fn) fn(spi2)
#define DT_N_S_soc_S_spi_40003800_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003800_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40003800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003800_ORD 99
#define DT_N_S_soc_S_spi_40003800_ORD_STR_SORTABLE 00099

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_EXISTS 1
#define DT_N_INST_1_st_stm32h7_spi    DT_N_S_soc_S_spi_40003800
#define DT_N_INST_1_st_stm32_spi_fifo DT_N_S_soc_S_spi_40003800
#define DT_N_INST_1_st_stm32_spi      DT_N_S_soc_S_spi_40003800
#define DT_N_NODELABEL_spi2           DT_N_S_soc_S_spi_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003800_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_ADDRESS 1073756160 /* 0x40003800 */
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40003800_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003800_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq 56
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_40003800_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MATCHES_st_stm32h7_spi 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_0 "stm32h7-spi"
#define DT_N_S_soc_S_spi_40003800_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_1 "stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40003800_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_2 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_2 "stm32-spi"
#define DT_N_S_soc_S_spi_40003800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_P_midi_clock 0
#define DT_N_S_soc_S_spi_40003800_P_midi_clock_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_mssi_clock 0
#define DT_N_S_soc_S_spi_40003800_P_mssi_clock_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_fifo_enable 0
#define DT_N_S_soc_S_spi_40003800_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg {1073756160 /* 0x40003800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0 1073756160
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40003800_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts {56 /* 0x38 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0 56
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40003800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status "disabled"
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40003800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40003800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, status, 0)
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, status, 0)
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible {"st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0 "st,stm32h7-spi"
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32h7-spi
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_STRING_TOKEN st_stm32h7_spi
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32H7_SPI
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-spi-fifo
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1_STRING_TOKEN st_stm32_spi_fifo
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_SPI_FIFO
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_2 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_2_STRING_UNQUOTED st,stm32-spi
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_2_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_2_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, compatible, 0) \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 1) \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 2)
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 2)
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_compatible_LEN 3
#define DT_N_S_soc_S_spi_40003800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_1_VAL_bus 13
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_1_VAL_bits 58336
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, clocks, 0) \
	fn(DT_N_S_soc_S_spi_40003800, clocks, 1)
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, clocks, 1)
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_clocks_LEN 2
#define DT_N_S_soc_S_spi_40003800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40003800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003c00
 *
 * Node identifier: DT_N_S_soc_S_spi_40003c00
 *
 * Binding (compatible = st,stm32h7-spi):
 *   $ZEPHYR_BASE\dts\bindings\spi\st,stm32h7-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003c00_PATH "/soc/spi@40003c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003c00_FULL_NAME "spi@40003c00"
#define DT_N_S_soc_S_spi_40003c00_FULL_NAME_UNQUOTED spi@40003c00
#define DT_N_S_soc_S_spi_40003c00_FULL_NAME_TOKEN spi_40003c00
#define DT_N_S_soc_S_spi_40003c00_FULL_NAME_UPPER_TOKEN SPI_40003C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003c00_CHILD_IDX 28

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_40003c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_40003c00_FOREACH_NODELABEL(fn) fn(spi3)
#define DT_N_S_soc_S_spi_40003c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003c00_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40003c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003c00_ORD 100
#define DT_N_S_soc_S_spi_40003c00_ORD_STR_SORTABLE 00100

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003c00_EXISTS 1
#define DT_N_INST_2_st_stm32h7_spi    DT_N_S_soc_S_spi_40003c00
#define DT_N_INST_2_st_stm32_spi_fifo DT_N_S_soc_S_spi_40003c00
#define DT_N_INST_2_st_stm32_spi      DT_N_S_soc_S_spi_40003c00
#define DT_N_NODELABEL_spi3           DT_N_S_soc_S_spi_40003c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003c00_REG_NUM 1
#define DT_N_S_soc_S_spi_40003c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_REG_IDX_0_VAL_ADDRESS 1073757184 /* 0x40003c00 */
#define DT_N_S_soc_S_spi_40003c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40003c00_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003c00_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_irq 57
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_40003c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MATCHES_st_stm32h7_spi 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MODEL_IDX_0 "stm32h7-spi"
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MODEL_IDX_1 "stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_VENDOR_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_VENDOR_IDX_2 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MODEL_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MODEL_IDX_2 "stm32-spi"
#define DT_N_S_soc_S_spi_40003c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003c00_P_midi_clock 0
#define DT_N_S_soc_S_spi_40003c00_P_midi_clock_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_mssi_clock 0
#define DT_N_S_soc_S_spi_40003c00_P_mssi_clock_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_fifo_enable 0
#define DT_N_S_soc_S_spi_40003c00_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_reg {1073757184 /* 0x40003c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_0 1073757184
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40003c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_interrupts {57 /* 0x39 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_0 57
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_status "disabled"
#define DT_N_S_soc_S_spi_40003c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40003c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40003c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40003c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40003c00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, status, 0)
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00, status, 0)
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003c00_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible {"st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0 "st,stm32h7-spi"
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32h7-spi
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0_STRING_TOKEN st_stm32h7_spi
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32H7_SPI
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_1 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-spi-fifo
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_1_STRING_TOKEN st_stm32_spi_fifo
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_SPI_FIFO
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_2 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_2_STRING_UNQUOTED st,stm32-spi
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_2_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_2_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0) \
	fn(DT_N_S_soc_S_spi_40003c00, compatible, 1) \
	fn(DT_N_S_soc_S_spi_40003c00, compatible, 2)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, compatible, 2)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_LEN 3
#define DT_N_S_soc_S_spi_40003c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bits 32768
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_1_VAL_bus 13
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_1_VAL_bits 59104
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0) \
	fn(DT_N_S_soc_S_spi_40003c00, clocks, 1)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, clocks, 1)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003c00, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_LEN 2
#define DT_N_S_soc_S_spi_40003c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40003c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/gpio@42020c00
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_PATH "/soc/pin-controller@42020000/gpio@42020c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FULL_NAME "gpio@42020c00"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FULL_NAME_UNQUOTED gpio@42020c00
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FULL_NAME_TOKEN gpio_42020c00
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FULL_NAME_UPPER_TOKEN GPIO_42020C00

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FOREACH_NODELABEL(fn) fn(gpiod)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpiod, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_ORD 101
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_ORD_STR_SORTABLE 00101

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_REQUIRES_ORDS \
	9, /* /soc/rcc@44020c00 */ \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_SUPPORTS_ORDS \
	105, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_EXISTS 1
#define DT_N_INST_3_st_stm32_gpio DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00
#define DT_N_NODELABEL_gpiod      DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_REG_IDX_0_VAL_ADDRESS 1107430400 /* 0x42020c00 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_reg {1107430400 /* 0x42020c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_reg_IDX_0 1107430400
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_clocks_IDX_0_VAL_bits 8
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/spi1_miso_pg9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_PATH "/soc/pin-controller@42020000/spi1_miso_pg9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_FULL_NAME "spi1_miso_pg9"
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_FULL_NAME_UNQUOTED spi1_miso_pg9
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_FULL_NAME_TOKEN spi1_miso_pg9
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_FULL_NAME_UPPER_TOKEN SPI1_MISO_PG9

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_CHILD_IDX 25

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_FOREACH_NODELABEL(fn) fn(spi1_miso_pg9)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi1_miso_pg9, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_ORD 102
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_ORD_STR_SORTABLE 00102

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_SUPPORTS_ORDS \
	105, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_EXISTS 1
#define DT_N_NODELABEL_spi1_miso_pg9 DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_pinmux 3365
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/spi1_mosi_pb5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_PATH "/soc/pin-controller@42020000/spi1_mosi_pb5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_FULL_NAME "spi1_mosi_pb5"
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_FULL_NAME_UNQUOTED spi1_mosi_pb5
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_FULL_NAME_TOKEN spi1_mosi_pb5
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_FULL_NAME_UPPER_TOKEN SPI1_MOSI_PB5

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_CHILD_IDX 26

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_FOREACH_NODELABEL(fn) fn(spi1_mosi_pb5)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi1_mosi_pb5, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_ORD 103
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_ORD_STR_SORTABLE 00103

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_SUPPORTS_ORDS \
	105, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_EXISTS 1
#define DT_N_NODELABEL_spi1_mosi_pb5 DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_pinmux 677
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/spi1_sck_pa5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_PATH "/soc/pin-controller@42020000/spi1_sck_pa5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_FULL_NAME "spi1_sck_pa5"
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_FULL_NAME_UNQUOTED spi1_sck_pa5
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_FULL_NAME_TOKEN spi1_sck_pa5
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_FULL_NAME_UPPER_TOKEN SPI1_SCK_PA5

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_CHILD_IDX 27

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_FOREACH_NODELABEL(fn) fn(spi1_sck_pa5)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi1_sck_pa5, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_ORD 104
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_ORD_STR_SORTABLE 00104

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_SUPPORTS_ORDS \
	105, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_EXISTS 1
#define DT_N_NODELABEL_spi1_sck_pa5 DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_pinmux 165
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_slew_rate_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_slew_rate_IDX_0_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/spi@40013000
 *
 * Node identifier: DT_N_S_soc_S_spi_40013000
 *
 * Binding (compatible = st,stm32h7-spi):
 *   $ZEPHYR_BASE\dts\bindings\spi\st,stm32h7-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40013000_PATH "/soc/spi@40013000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40013000_FULL_NAME "spi@40013000"
#define DT_N_S_soc_S_spi_40013000_FULL_NAME_UNQUOTED spi@40013000
#define DT_N_S_soc_S_spi_40013000_FULL_NAME_TOKEN spi_40013000
#define DT_N_S_soc_S_spi_40013000_FULL_NAME_UPPER_TOKEN SPI_40013000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40013000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40013000_CHILD_IDX 26

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_40013000_NODELABEL_NUM 2
#define DT_N_S_soc_S_spi_40013000_FOREACH_NODELABEL(fn) fn(spi1) fn(arduino_spi)
#define DT_N_S_soc_S_spi_40013000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi1, __VA_ARGS__) fn(arduino_spi, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40013000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40013000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40013000_ORD 105
#define DT_N_S_soc_S_spi_40013000_ORD_STR_SORTABLE 00105

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40013000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	101, /* /soc/pin-controller@42020000/gpio@42020c00 */ \
	102, /* /soc/pin-controller@42020000/spi1_miso_pg9 */ \
	103, /* /soc/pin-controller@42020000/spi1_mosi_pb5 */ \
	104, /* /soc/pin-controller@42020000/spi1_sck_pa5 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40013000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40013000_EXISTS 1
#define DT_N_INST_0_st_stm32h7_spi    DT_N_S_soc_S_spi_40013000
#define DT_N_INST_0_st_stm32_spi_fifo DT_N_S_soc_S_spi_40013000
#define DT_N_INST_0_st_stm32_spi      DT_N_S_soc_S_spi_40013000
#define DT_N_NODELABEL_spi1           DT_N_S_soc_S_spi_40013000
#define DT_N_NODELABEL_arduino_spi    DT_N_S_soc_S_spi_40013000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40013000_REG_NUM 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_ADDRESS 1073819648 /* 0x40013000 */
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40013000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40013000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40013000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq 55
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_40013000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MATCHES_st_stm32h7_spi 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_0 "stm32h7-spi"
#define DT_N_S_soc_S_spi_40013000_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_1 "stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40013000_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_2 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_2 "stm32-spi"
#define DT_N_S_soc_S_spi_40013000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NUM 1
#define DT_N_S_soc_S_spi_40013000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_40013000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40013000_P_midi_clock 0
#define DT_N_S_soc_S_spi_40013000_P_midi_clock_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_mssi_clock 0
#define DT_N_S_soc_S_spi_40013000_P_mssi_clock_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_fifo_enable 0
#define DT_N_S_soc_S_spi_40013000_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg {1073819648 /* 0x40013000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0 1073819648
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40013000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts {55 /* 0x37 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0 55
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40013000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 2)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 2)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_LEN 3
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_0_VAL_pin 14
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_0_VAL_flags 17
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, cs_gpios, 0)
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, cs_gpios, 0)
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, cs_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, cs_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status "okay"
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40013000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40013000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40013000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, status, 0)
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, status, 0)
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible {"st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0 "st,stm32h7-spi"
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32h7-spi
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_STRING_TOKEN st_stm32h7_spi
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32H7_SPI
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-spi-fifo
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1_STRING_TOKEN st_stm32_spi_fifo
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_SPI_FIFO
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_2 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_2_STRING_UNQUOTED st,stm32-spi
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_2_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_2_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, compatible, 0) \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 1) \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 2)
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 2)
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_compatible_LEN 3
#define DT_N_S_soc_S_spi_40013000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bus 164
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bits 4096
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_1_VAL_bus 13
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_1_VAL_bits 57568
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, clocks, 0) \
	fn(DT_N_S_soc_S_spi_40013000, clocks, 1)
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, clocks, 1)
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_clocks_LEN 2
#define DT_N_S_soc_S_spi_40013000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40013000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40013000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40013000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40014c00
 *
 * Node identifier: DT_N_S_soc_S_spi_40014c00
 *
 * Binding (compatible = st,stm32h7-spi):
 *   $ZEPHYR_BASE\dts\bindings\spi\st,stm32h7-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40014c00_PATH "/soc/spi@40014c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40014c00_FULL_NAME "spi@40014c00"
#define DT_N_S_soc_S_spi_40014c00_FULL_NAME_UNQUOTED spi@40014c00
#define DT_N_S_soc_S_spi_40014c00_FULL_NAME_TOKEN spi_40014c00
#define DT_N_S_soc_S_spi_40014c00_FULL_NAME_UPPER_TOKEN SPI_40014C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40014c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40014c00_CHILD_IDX 57

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_40014c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_40014c00_FOREACH_NODELABEL(fn) fn(spi4)
#define DT_N_S_soc_S_spi_40014c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi4, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40014c00_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40014c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40014c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40014c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40014c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40014c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40014c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40014c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40014c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40014c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40014c00_ORD 106
#define DT_N_S_soc_S_spi_40014c00_ORD_STR_SORTABLE 00106

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40014c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40014c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40014c00_EXISTS 1
#define DT_N_INST_3_st_stm32h7_spi    DT_N_S_soc_S_spi_40014c00
#define DT_N_INST_3_st_stm32_spi_fifo DT_N_S_soc_S_spi_40014c00
#define DT_N_INST_3_st_stm32_spi      DT_N_S_soc_S_spi_40014c00
#define DT_N_NODELABEL_spi4           DT_N_S_soc_S_spi_40014c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40014c00_REG_NUM 1
#define DT_N_S_soc_S_spi_40014c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_REG_IDX_0_VAL_ADDRESS 1073826816 /* 0x40014c00 */
#define DT_N_S_soc_S_spi_40014c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40014c00_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40014c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40014c00_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40014c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_IRQ_IDX_0_VAL_irq 82
#define DT_N_S_soc_S_spi_40014c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40014c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_40014c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_40014c00_COMPAT_MATCHES_st_stm32h7_spi 1
#define DT_N_S_soc_S_spi_40014c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40014c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_COMPAT_MODEL_IDX_0 "stm32h7-spi"
#define DT_N_S_soc_S_spi_40014c00_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_40014c00_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40014c00_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_COMPAT_MODEL_IDX_1 "stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40014c00_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40014c00_COMPAT_VENDOR_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_COMPAT_VENDOR_IDX_2 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40014c00_COMPAT_MODEL_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_COMPAT_MODEL_IDX_2 "stm32-spi"
#define DT_N_S_soc_S_spi_40014c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40014c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40014c00_P_midi_clock 0
#define DT_N_S_soc_S_spi_40014c00_P_midi_clock_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_P_mssi_clock 0
#define DT_N_S_soc_S_spi_40014c00_P_mssi_clock_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_P_fifo_enable 0
#define DT_N_S_soc_S_spi_40014c00_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_P_reg {1073826816 /* 0x40014c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40014c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_P_reg_IDX_0 1073826816
#define DT_N_S_soc_S_spi_40014c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40014c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_P_interrupts {82 /* 0x52 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40014c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_P_interrupts_IDX_0 82
#define DT_N_S_soc_S_spi_40014c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40014c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_P_status "disabled"
#define DT_N_S_soc_S_spi_40014c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40014c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40014c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40014c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40014c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40014c00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40014c00, status, 0)
#define DT_N_S_soc_S_spi_40014c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40014c00, status, 0)
#define DT_N_S_soc_S_spi_40014c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40014c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40014c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40014c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40014c00_P_status_LEN 1
#define DT_N_S_soc_S_spi_40014c00_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_P_compatible {"st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_40014c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_P_compatible_IDX_0 "st,stm32h7-spi"
#define DT_N_S_soc_S_spi_40014c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32h7-spi
#define DT_N_S_soc_S_spi_40014c00_P_compatible_IDX_0_STRING_TOKEN st_stm32h7_spi
#define DT_N_S_soc_S_spi_40014c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32H7_SPI
#define DT_N_S_soc_S_spi_40014c00_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_P_compatible_IDX_1 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40014c00_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-spi-fifo
#define DT_N_S_soc_S_spi_40014c00_P_compatible_IDX_1_STRING_TOKEN st_stm32_spi_fifo
#define DT_N_S_soc_S_spi_40014c00_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_SPI_FIFO
#define DT_N_S_soc_S_spi_40014c00_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_P_compatible_IDX_2 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40014c00_P_compatible_IDX_2_STRING_UNQUOTED st,stm32-spi
#define DT_N_S_soc_S_spi_40014c00_P_compatible_IDX_2_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_40014c00_P_compatible_IDX_2_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_40014c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40014c00, compatible, 0) \
	fn(DT_N_S_soc_S_spi_40014c00, compatible, 1) \
	fn(DT_N_S_soc_S_spi_40014c00, compatible, 2)
#define DT_N_S_soc_S_spi_40014c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40014c00, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40014c00, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40014c00, compatible, 2)
#define DT_N_S_soc_S_spi_40014c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40014c00, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40014c00, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40014c00, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40014c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40014c00, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40014c00, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40014c00, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40014c00_P_compatible_LEN 3
#define DT_N_S_soc_S_spi_40014c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_spi_40014c00_P_clocks_IDX_0_VAL_bus 164
#define DT_N_S_soc_S_spi_40014c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_P_clocks_IDX_0_VAL_bits 524288
#define DT_N_S_soc_S_spi_40014c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40014c00, clocks, 0)
#define DT_N_S_soc_S_spi_40014c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40014c00, clocks, 0)
#define DT_N_S_soc_S_spi_40014c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40014c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40014c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40014c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40014c00_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40014c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40014c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40014c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40014c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40014c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40015000
 *
 * Node identifier: DT_N_S_soc_S_spi_40015000
 *
 * Binding (compatible = st,stm32h7-spi):
 *   $ZEPHYR_BASE\dts\bindings\spi\st,stm32h7-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40015000_PATH "/soc/spi@40015000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40015000_FULL_NAME "spi@40015000"
#define DT_N_S_soc_S_spi_40015000_FULL_NAME_UNQUOTED spi@40015000
#define DT_N_S_soc_S_spi_40015000_FULL_NAME_TOKEN spi_40015000
#define DT_N_S_soc_S_spi_40015000_FULL_NAME_UPPER_TOKEN SPI_40015000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40015000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40015000_CHILD_IDX 59

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_40015000_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_40015000_FOREACH_NODELABEL(fn) fn(spi6)
#define DT_N_S_soc_S_spi_40015000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi6, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40015000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40015000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40015000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40015000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40015000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40015000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40015000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40015000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40015000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40015000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40015000_ORD 107
#define DT_N_S_soc_S_spi_40015000_ORD_STR_SORTABLE 00107

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40015000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40015000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40015000_EXISTS 1
#define DT_N_INST_5_st_stm32h7_spi    DT_N_S_soc_S_spi_40015000
#define DT_N_INST_5_st_stm32_spi_fifo DT_N_S_soc_S_spi_40015000
#define DT_N_INST_5_st_stm32_spi      DT_N_S_soc_S_spi_40015000
#define DT_N_NODELABEL_spi6           DT_N_S_soc_S_spi_40015000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40015000_REG_NUM 1
#define DT_N_S_soc_S_spi_40015000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_REG_IDX_0_VAL_ADDRESS 1073827840 /* 0x40015000 */
#define DT_N_S_soc_S_spi_40015000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40015000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40015000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40015000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_VAL_irq 84
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_40015000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_40015000_COMPAT_MATCHES_st_stm32h7_spi 1
#define DT_N_S_soc_S_spi_40015000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40015000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_COMPAT_MODEL_IDX_0 "stm32h7-spi"
#define DT_N_S_soc_S_spi_40015000_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_40015000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40015000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_COMPAT_MODEL_IDX_1 "stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40015000_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40015000_COMPAT_VENDOR_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_COMPAT_VENDOR_IDX_2 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40015000_COMPAT_MODEL_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_COMPAT_MODEL_IDX_2 "stm32-spi"
#define DT_N_S_soc_S_spi_40015000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40015000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40015000_P_midi_clock 0
#define DT_N_S_soc_S_spi_40015000_P_midi_clock_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_mssi_clock 0
#define DT_N_S_soc_S_spi_40015000_P_mssi_clock_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_fifo_enable 0
#define DT_N_S_soc_S_spi_40015000_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_reg {1073827840 /* 0x40015000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40015000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_reg_IDX_0 1073827840
#define DT_N_S_soc_S_spi_40015000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40015000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_interrupts {84 /* 0x54 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40015000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_interrupts_IDX_0 84
#define DT_N_S_soc_S_spi_40015000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40015000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_status "disabled"
#define DT_N_S_soc_S_spi_40015000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40015000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40015000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40015000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40015000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40015000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000, status, 0)
#define DT_N_S_soc_S_spi_40015000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40015000, status, 0)
#define DT_N_S_soc_S_spi_40015000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40015000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40015000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_compatible {"st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_40015000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_compatible_IDX_0 "st,stm32h7-spi"
#define DT_N_S_soc_S_spi_40015000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32h7-spi
#define DT_N_S_soc_S_spi_40015000_P_compatible_IDX_0_STRING_TOKEN st_stm32h7_spi
#define DT_N_S_soc_S_spi_40015000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32H7_SPI
#define DT_N_S_soc_S_spi_40015000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_compatible_IDX_1 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40015000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-spi-fifo
#define DT_N_S_soc_S_spi_40015000_P_compatible_IDX_1_STRING_TOKEN st_stm32_spi_fifo
#define DT_N_S_soc_S_spi_40015000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_SPI_FIFO
#define DT_N_S_soc_S_spi_40015000_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_compatible_IDX_2 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40015000_P_compatible_IDX_2_STRING_UNQUOTED st,stm32-spi
#define DT_N_S_soc_S_spi_40015000_P_compatible_IDX_2_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_40015000_P_compatible_IDX_2_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_40015000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000, compatible, 0) \
	fn(DT_N_S_soc_S_spi_40015000, compatible, 1) \
	fn(DT_N_S_soc_S_spi_40015000, compatible, 2)
#define DT_N_S_soc_S_spi_40015000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40015000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40015000, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40015000, compatible, 2)
#define DT_N_S_soc_S_spi_40015000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40015000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40015000, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40015000, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_compatible_LEN 3
#define DT_N_S_soc_S_spi_40015000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_spi_40015000_P_clocks_IDX_0_VAL_bus 164
#define DT_N_S_soc_S_spi_40015000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_clocks_IDX_0_VAL_bits 1048576
#define DT_N_S_soc_S_spi_40015000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000, clocks, 0)
#define DT_N_S_soc_S_spi_40015000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40015000, clocks, 0)
#define DT_N_S_soc_S_spi_40015000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40015000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40015000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40015000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40015000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40015000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@44002000
 *
 * Node identifier: DT_N_S_soc_S_spi_44002000
 *
 * Binding (compatible = st,stm32h7-spi):
 *   $ZEPHYR_BASE\dts\bindings\spi\st,stm32h7-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_44002000_PATH "/soc/spi@44002000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_44002000_FULL_NAME "spi@44002000"
#define DT_N_S_soc_S_spi_44002000_FULL_NAME_UNQUOTED spi@44002000
#define DT_N_S_soc_S_spi_44002000_FULL_NAME_TOKEN spi_44002000
#define DT_N_S_soc_S_spi_44002000_FULL_NAME_UPPER_TOKEN SPI_44002000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_44002000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_44002000_CHILD_IDX 58

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_44002000_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_44002000_FOREACH_NODELABEL(fn) fn(spi5)
#define DT_N_S_soc_S_spi_44002000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi5, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_44002000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_44002000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_44002000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_44002000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_44002000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_44002000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_44002000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_44002000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_44002000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_44002000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_44002000_ORD 108
#define DT_N_S_soc_S_spi_44002000_ORD_STR_SORTABLE 00108

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_44002000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_44002000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_44002000_EXISTS 1
#define DT_N_INST_4_st_stm32h7_spi    DT_N_S_soc_S_spi_44002000
#define DT_N_INST_4_st_stm32_spi_fifo DT_N_S_soc_S_spi_44002000
#define DT_N_INST_4_st_stm32_spi      DT_N_S_soc_S_spi_44002000
#define DT_N_NODELABEL_spi5           DT_N_S_soc_S_spi_44002000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_44002000_REG_NUM 1
#define DT_N_S_soc_S_spi_44002000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_REG_IDX_0_VAL_ADDRESS 1140858880 /* 0x44002000 */
#define DT_N_S_soc_S_spi_44002000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_44002000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_44002000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_44002000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_44002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_IRQ_IDX_0_VAL_irq 83
#define DT_N_S_soc_S_spi_44002000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_44002000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_44002000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_44002000_COMPAT_MATCHES_st_stm32h7_spi 1
#define DT_N_S_soc_S_spi_44002000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_44002000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_COMPAT_MODEL_IDX_0 "stm32h7-spi"
#define DT_N_S_soc_S_spi_44002000_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_44002000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_spi_44002000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_COMPAT_MODEL_IDX_1 "stm32-spi-fifo"
#define DT_N_S_soc_S_spi_44002000_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_44002000_COMPAT_VENDOR_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_COMPAT_VENDOR_IDX_2 "STMicroelectronics"
#define DT_N_S_soc_S_spi_44002000_COMPAT_MODEL_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_COMPAT_MODEL_IDX_2 "stm32-spi"
#define DT_N_S_soc_S_spi_44002000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_44002000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_44002000_P_midi_clock 0
#define DT_N_S_soc_S_spi_44002000_P_midi_clock_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_P_mssi_clock 0
#define DT_N_S_soc_S_spi_44002000_P_mssi_clock_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_P_fifo_enable 0
#define DT_N_S_soc_S_spi_44002000_P_fifo_enable_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_P_reg {1140858880 /* 0x44002000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_44002000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_P_reg_IDX_0 1140858880
#define DT_N_S_soc_S_spi_44002000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_44002000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_P_interrupts {83 /* 0x53 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_44002000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_P_interrupts_IDX_0 83
#define DT_N_S_soc_S_spi_44002000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_44002000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_P_status "disabled"
#define DT_N_S_soc_S_spi_44002000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_44002000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_44002000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_44002000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_44002000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_spi_44002000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_44002000, status, 0)
#define DT_N_S_soc_S_spi_44002000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_44002000, status, 0)
#define DT_N_S_soc_S_spi_44002000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_44002000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44002000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_44002000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44002000_P_status_LEN 1
#define DT_N_S_soc_S_spi_44002000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_P_compatible {"st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_44002000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_P_compatible_IDX_0 "st,stm32h7-spi"
#define DT_N_S_soc_S_spi_44002000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32h7-spi
#define DT_N_S_soc_S_spi_44002000_P_compatible_IDX_0_STRING_TOKEN st_stm32h7_spi
#define DT_N_S_soc_S_spi_44002000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32H7_SPI
#define DT_N_S_soc_S_spi_44002000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_P_compatible_IDX_1 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_44002000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-spi-fifo
#define DT_N_S_soc_S_spi_44002000_P_compatible_IDX_1_STRING_TOKEN st_stm32_spi_fifo
#define DT_N_S_soc_S_spi_44002000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_SPI_FIFO
#define DT_N_S_soc_S_spi_44002000_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_P_compatible_IDX_2 "st,stm32-spi"
#define DT_N_S_soc_S_spi_44002000_P_compatible_IDX_2_STRING_UNQUOTED st,stm32-spi
#define DT_N_S_soc_S_spi_44002000_P_compatible_IDX_2_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_44002000_P_compatible_IDX_2_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_44002000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_44002000, compatible, 0) \
	fn(DT_N_S_soc_S_spi_44002000, compatible, 1) \
	fn(DT_N_S_soc_S_spi_44002000, compatible, 2)
#define DT_N_S_soc_S_spi_44002000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_44002000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44002000, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44002000, compatible, 2)
#define DT_N_S_soc_S_spi_44002000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_44002000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_44002000, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_44002000, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44002000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_44002000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44002000, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_44002000, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44002000_P_compatible_LEN 3
#define DT_N_S_soc_S_spi_44002000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_spi_44002000_P_clocks_IDX_0_VAL_bus 168
#define DT_N_S_soc_S_spi_44002000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_spi_44002000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_44002000, clocks, 0)
#define DT_N_S_soc_S_spi_44002000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_44002000, clocks, 0)
#define DT_N_S_soc_S_spi_44002000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_44002000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44002000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_44002000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_44002000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_44002000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_44002000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_44002000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_44002000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_44002000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv8m-systick):
 *   $ZEPHYR_BASE\dts\bindings\timer\arm,armv8m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_UNQUOTED timer@e000e010
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_TOKEN timer_e000e010
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_UPPER_TOKEN TIMER_E000E010

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_e000e010_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL(fn) fn(systick)
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL_VARGS(fn, ...) fn(systick, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM 0
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 109
#define DT_N_S_soc_S_timer_e000e010_ORD_STR_SORTABLE 00109

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv8m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_IRQ_LEVEL 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv8m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv8m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv8m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv8m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UNQUOTED arm,armv8m-systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv8m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV8M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40009400
 *
 * Node identifier: DT_N_S_soc_S_timers_40009400
 *
 * Binding (compatible = st,stm32-lptim):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-lptim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40009400_PATH "/soc/timers@40009400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40009400_FULL_NAME "timers@40009400"
#define DT_N_S_soc_S_timers_40009400_FULL_NAME_UNQUOTED timers@40009400
#define DT_N_S_soc_S_timers_40009400_FULL_NAME_TOKEN timers_40009400
#define DT_N_S_soc_S_timers_40009400_FULL_NAME_UPPER_TOKEN TIMERS_40009400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40009400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40009400_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40009400_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40009400_FOREACH_NODELABEL(fn) fn(lptim2)
#define DT_N_S_soc_S_timers_40009400_FOREACH_NODELABEL_VARGS(fn, ...) fn(lptim2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40009400_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40009400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40009400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40009400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40009400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40009400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40009400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40009400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40009400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40009400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40009400_ORD 110
#define DT_N_S_soc_S_timers_40009400_ORD_STR_SORTABLE 00110

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40009400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40009400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40009400_EXISTS 1
#define DT_N_INST_2_st_stm32_lptim DT_N_S_soc_S_timers_40009400
#define DT_N_NODELABEL_lptim2      DT_N_S_soc_S_timers_40009400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40009400_REG_NUM 1
#define DT_N_S_soc_S_timers_40009400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_REG_IDX_0_VAL_ADDRESS 1073779712 /* 0x40009400 */
#define DT_N_S_soc_S_timers_40009400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40009400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40009400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40009400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40009400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_IRQ_IDX_0_VAL_irq 70
#define DT_N_S_soc_S_timers_40009400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timers_40009400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40009400_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40009400_IRQ_NAME_wakeup_VAL_irq DT_N_S_soc_S_timers_40009400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40009400_IRQ_NAME_wakeup_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_IRQ_NAME_wakeup_VAL_priority DT_N_S_soc_S_timers_40009400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40009400_IRQ_NAME_wakeup_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_IRQ_NAME_wakeup_CONTROLLER DT_N_S_soc_S_timers_40009400_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40009400_COMPAT_MATCHES_st_stm32_lptim 1
#define DT_N_S_soc_S_timers_40009400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40009400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_COMPAT_MODEL_IDX_0 "stm32-lptim"
#define DT_N_S_soc_S_timers_40009400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40009400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40009400_P_st_prescaler 1
#define DT_N_S_soc_S_timers_40009400_P_st_prescaler_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_timers_40009400_P_st_prescaler_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_st_prescaler_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_reg {1073779712 /* 0x40009400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40009400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_reg_IDX_0 1073779712
#define DT_N_S_soc_S_timers_40009400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40009400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_timers_40009400_P_clocks_IDX_0_VAL_bus 160
#define DT_N_S_soc_S_timers_40009400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_timers_40009400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40009400, clocks, 0)
#define DT_N_S_soc_S_timers_40009400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40009400, clocks, 0)
#define DT_N_S_soc_S_timers_40009400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40009400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40009400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40009400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40009400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40009400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_status "disabled"
#define DT_N_S_soc_S_timers_40009400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40009400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40009400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40009400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40009400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40009400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40009400, status, 0)
#define DT_N_S_soc_S_timers_40009400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40009400, status, 0)
#define DT_N_S_soc_S_timers_40009400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40009400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40009400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40009400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40009400_P_status_LEN 1
#define DT_N_S_soc_S_timers_40009400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_compatible {"st,stm32-lptim"}
#define DT_N_S_soc_S_timers_40009400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_compatible_IDX_0 "st,stm32-lptim"
#define DT_N_S_soc_S_timers_40009400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-lptim
#define DT_N_S_soc_S_timers_40009400_P_compatible_IDX_0_STRING_TOKEN st_stm32_lptim
#define DT_N_S_soc_S_timers_40009400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_LPTIM
#define DT_N_S_soc_S_timers_40009400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40009400, compatible, 0)
#define DT_N_S_soc_S_timers_40009400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40009400, compatible, 0)
#define DT_N_S_soc_S_timers_40009400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40009400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40009400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40009400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40009400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40009400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_interrupts {70 /* 0x46 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timers_40009400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_interrupts_IDX_0 70
#define DT_N_S_soc_S_timers_40009400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timers_40009400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_interrupt_names {"wakeup"}
#define DT_N_S_soc_S_timers_40009400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_interrupt_names_IDX_0 "wakeup"
#define DT_N_S_soc_S_timers_40009400_P_interrupt_names_IDX_0_STRING_UNQUOTED wakeup
#define DT_N_S_soc_S_timers_40009400_P_interrupt_names_IDX_0_STRING_TOKEN wakeup
#define DT_N_S_soc_S_timers_40009400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN WAKEUP
#define DT_N_S_soc_S_timers_40009400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40009400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40009400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40009400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40009400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40009400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40009400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40009400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40009400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40009400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40009400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40009400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40009400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@44004400
 *
 * Node identifier: DT_N_S_soc_S_timers_44004400
 *
 * Binding (compatible = st,stm32-lptim):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-lptim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_44004400_PATH "/soc/timers@44004400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_44004400_FULL_NAME "timers@44004400"
#define DT_N_S_soc_S_timers_44004400_FULL_NAME_UNQUOTED timers@44004400
#define DT_N_S_soc_S_timers_44004400_FULL_NAME_TOKEN timers_44004400
#define DT_N_S_soc_S_timers_44004400_FULL_NAME_UPPER_TOKEN TIMERS_44004400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_44004400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_44004400_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_44004400_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_44004400_FOREACH_NODELABEL(fn) fn(lptim1)
#define DT_N_S_soc_S_timers_44004400_FOREACH_NODELABEL_VARGS(fn, ...) fn(lptim1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_44004400_CHILD_NUM 0
#define DT_N_S_soc_S_timers_44004400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_44004400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_44004400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_44004400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_44004400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_44004400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_44004400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_44004400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_44004400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_44004400_ORD 111
#define DT_N_S_soc_S_timers_44004400_ORD_STR_SORTABLE 00111

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_44004400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_44004400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_44004400_EXISTS 1
#define DT_N_INST_1_st_stm32_lptim DT_N_S_soc_S_timers_44004400
#define DT_N_NODELABEL_lptim1      DT_N_S_soc_S_timers_44004400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_44004400_REG_NUM 1
#define DT_N_S_soc_S_timers_44004400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_REG_IDX_0_VAL_ADDRESS 1140868096 /* 0x44004400 */
#define DT_N_S_soc_S_timers_44004400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_44004400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_44004400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_44004400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_44004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_IRQ_IDX_0_VAL_irq 64
#define DT_N_S_soc_S_timers_44004400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timers_44004400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_44004400_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_44004400_IRQ_NAME_wakeup_VAL_irq DT_N_S_soc_S_timers_44004400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_44004400_IRQ_NAME_wakeup_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_IRQ_NAME_wakeup_VAL_priority DT_N_S_soc_S_timers_44004400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_44004400_IRQ_NAME_wakeup_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_IRQ_NAME_wakeup_CONTROLLER DT_N_S_soc_S_timers_44004400_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_44004400_COMPAT_MATCHES_st_stm32_lptim 1
#define DT_N_S_soc_S_timers_44004400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_44004400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_COMPAT_MODEL_IDX_0 "stm32-lptim"
#define DT_N_S_soc_S_timers_44004400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_44004400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_44004400_P_st_prescaler 1
#define DT_N_S_soc_S_timers_44004400_P_st_prescaler_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_timers_44004400_P_st_prescaler_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_P_st_prescaler_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_P_reg {1140868096 /* 0x44004400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_44004400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_P_reg_IDX_0 1140868096
#define DT_N_S_soc_S_timers_44004400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_44004400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_timers_44004400_P_clocks_IDX_0_VAL_bus 168
#define DT_N_S_soc_S_timers_44004400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_timers_44004400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_44004400, clocks, 0)
#define DT_N_S_soc_S_timers_44004400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_44004400, clocks, 0)
#define DT_N_S_soc_S_timers_44004400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_44004400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44004400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_44004400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44004400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_44004400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_P_status "disabled"
#define DT_N_S_soc_S_timers_44004400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_44004400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_44004400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_44004400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_44004400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_44004400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_44004400, status, 0)
#define DT_N_S_soc_S_timers_44004400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_44004400, status, 0)
#define DT_N_S_soc_S_timers_44004400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_44004400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44004400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_44004400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44004400_P_status_LEN 1
#define DT_N_S_soc_S_timers_44004400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_P_compatible {"st,stm32-lptim"}
#define DT_N_S_soc_S_timers_44004400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_P_compatible_IDX_0 "st,stm32-lptim"
#define DT_N_S_soc_S_timers_44004400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-lptim
#define DT_N_S_soc_S_timers_44004400_P_compatible_IDX_0_STRING_TOKEN st_stm32_lptim
#define DT_N_S_soc_S_timers_44004400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_LPTIM
#define DT_N_S_soc_S_timers_44004400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_44004400, compatible, 0)
#define DT_N_S_soc_S_timers_44004400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_44004400, compatible, 0)
#define DT_N_S_soc_S_timers_44004400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_44004400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44004400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_44004400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44004400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_44004400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_P_interrupts {64 /* 0x40 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timers_44004400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_P_interrupts_IDX_0 64
#define DT_N_S_soc_S_timers_44004400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timers_44004400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_P_interrupt_names {"wakeup"}
#define DT_N_S_soc_S_timers_44004400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_P_interrupt_names_IDX_0 "wakeup"
#define DT_N_S_soc_S_timers_44004400_P_interrupt_names_IDX_0_STRING_UNQUOTED wakeup
#define DT_N_S_soc_S_timers_44004400_P_interrupt_names_IDX_0_STRING_TOKEN wakeup
#define DT_N_S_soc_S_timers_44004400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN WAKEUP
#define DT_N_S_soc_S_timers_44004400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_44004400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_44004400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_44004400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_44004400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_44004400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44004400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_44004400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44004400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_44004400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_44004400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_44004400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_44004400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_44004400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@44004800
 *
 * Node identifier: DT_N_S_soc_S_timers_44004800
 *
 * Binding (compatible = st,stm32-lptim):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-lptim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_44004800_PATH "/soc/timers@44004800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_44004800_FULL_NAME "timers@44004800"
#define DT_N_S_soc_S_timers_44004800_FULL_NAME_UNQUOTED timers@44004800
#define DT_N_S_soc_S_timers_44004800_FULL_NAME_TOKEN timers_44004800
#define DT_N_S_soc_S_timers_44004800_FULL_NAME_UPPER_TOKEN TIMERS_44004800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_44004800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_44004800_CHILD_IDX 42

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_44004800_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_44004800_FOREACH_NODELABEL(fn) fn(lptim3)
#define DT_N_S_soc_S_timers_44004800_FOREACH_NODELABEL_VARGS(fn, ...) fn(lptim3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_44004800_CHILD_NUM 0
#define DT_N_S_soc_S_timers_44004800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_44004800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_44004800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_44004800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_44004800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_44004800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_44004800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_44004800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_44004800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_44004800_ORD 112
#define DT_N_S_soc_S_timers_44004800_ORD_STR_SORTABLE 00112

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_44004800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_44004800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_44004800_EXISTS 1
#define DT_N_INST_3_st_stm32_lptim DT_N_S_soc_S_timers_44004800
#define DT_N_NODELABEL_lptim3      DT_N_S_soc_S_timers_44004800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_44004800_REG_NUM 1
#define DT_N_S_soc_S_timers_44004800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_REG_IDX_0_VAL_ADDRESS 1140869120 /* 0x44004800 */
#define DT_N_S_soc_S_timers_44004800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_44004800_RANGES_NUM 0
#define DT_N_S_soc_S_timers_44004800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_44004800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_44004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_IRQ_IDX_0_VAL_irq 127
#define DT_N_S_soc_S_timers_44004800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timers_44004800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_44004800_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_44004800_IRQ_NAME_wakeup_VAL_irq DT_N_S_soc_S_timers_44004800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_44004800_IRQ_NAME_wakeup_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_IRQ_NAME_wakeup_VAL_priority DT_N_S_soc_S_timers_44004800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_44004800_IRQ_NAME_wakeup_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_IRQ_NAME_wakeup_CONTROLLER DT_N_S_soc_S_timers_44004800_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_44004800_COMPAT_MATCHES_st_stm32_lptim 1
#define DT_N_S_soc_S_timers_44004800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_44004800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_COMPAT_MODEL_IDX_0 "stm32-lptim"
#define DT_N_S_soc_S_timers_44004800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_44004800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_44004800_P_st_prescaler 1
#define DT_N_S_soc_S_timers_44004800_P_st_prescaler_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_timers_44004800_P_st_prescaler_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_P_st_prescaler_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_P_reg {1140869120 /* 0x44004800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_44004800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_P_reg_IDX_0 1140869120
#define DT_N_S_soc_S_timers_44004800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_44004800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_timers_44004800_P_clocks_IDX_0_VAL_bus 168
#define DT_N_S_soc_S_timers_44004800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_P_clocks_IDX_0_VAL_bits 4096
#define DT_N_S_soc_S_timers_44004800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_44004800, clocks, 0)
#define DT_N_S_soc_S_timers_44004800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_44004800, clocks, 0)
#define DT_N_S_soc_S_timers_44004800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_44004800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44004800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_44004800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44004800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_44004800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_P_status "disabled"
#define DT_N_S_soc_S_timers_44004800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_44004800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_44004800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_44004800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_44004800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_44004800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_44004800, status, 0)
#define DT_N_S_soc_S_timers_44004800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_44004800, status, 0)
#define DT_N_S_soc_S_timers_44004800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_44004800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44004800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_44004800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44004800_P_status_LEN 1
#define DT_N_S_soc_S_timers_44004800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_P_compatible {"st,stm32-lptim"}
#define DT_N_S_soc_S_timers_44004800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_P_compatible_IDX_0 "st,stm32-lptim"
#define DT_N_S_soc_S_timers_44004800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-lptim
#define DT_N_S_soc_S_timers_44004800_P_compatible_IDX_0_STRING_TOKEN st_stm32_lptim
#define DT_N_S_soc_S_timers_44004800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_LPTIM
#define DT_N_S_soc_S_timers_44004800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_44004800, compatible, 0)
#define DT_N_S_soc_S_timers_44004800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_44004800, compatible, 0)
#define DT_N_S_soc_S_timers_44004800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_44004800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44004800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_44004800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44004800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_44004800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_P_interrupts {127 /* 0x7f */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timers_44004800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_P_interrupts_IDX_0 127
#define DT_N_S_soc_S_timers_44004800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timers_44004800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_P_interrupt_names {"wakeup"}
#define DT_N_S_soc_S_timers_44004800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_P_interrupt_names_IDX_0 "wakeup"
#define DT_N_S_soc_S_timers_44004800_P_interrupt_names_IDX_0_STRING_UNQUOTED wakeup
#define DT_N_S_soc_S_timers_44004800_P_interrupt_names_IDX_0_STRING_TOKEN wakeup
#define DT_N_S_soc_S_timers_44004800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN WAKEUP
#define DT_N_S_soc_S_timers_44004800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_44004800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_44004800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_44004800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_44004800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_44004800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44004800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_44004800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44004800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_44004800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_44004800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_P_wakeup_source 0
#define DT_N_S_soc_S_timers_44004800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_44004800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_44004800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@44004c00
 *
 * Node identifier: DT_N_S_soc_S_timers_44004c00
 *
 * Binding (compatible = st,stm32-lptim):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-lptim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_44004c00_PATH "/soc/timers@44004c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_44004c00_FULL_NAME "timers@44004c00"
#define DT_N_S_soc_S_timers_44004c00_FULL_NAME_UNQUOTED timers@44004c00
#define DT_N_S_soc_S_timers_44004c00_FULL_NAME_TOKEN timers_44004c00
#define DT_N_S_soc_S_timers_44004c00_FULL_NAME_UPPER_TOKEN TIMERS_44004C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_44004c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_44004c00_CHILD_IDX 43

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_44004c00_NODELABEL_NUM 2
#define DT_N_S_soc_S_timers_44004c00_FOREACH_NODELABEL(fn) fn(lptim4) fn(stm32_lp_tick_source)
#define DT_N_S_soc_S_timers_44004c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(lptim4, __VA_ARGS__) fn(stm32_lp_tick_source, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_44004c00_CHILD_NUM 0
#define DT_N_S_soc_S_timers_44004c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_44004c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_44004c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_44004c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_44004c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_44004c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_44004c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_44004c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_44004c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_44004c00_ORD 113
#define DT_N_S_soc_S_timers_44004c00_ORD_STR_SORTABLE 00113

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_44004c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_44004c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_44004c00_EXISTS 1
#define DT_N_INST_0_st_stm32_lptim          DT_N_S_soc_S_timers_44004c00
#define DT_N_NODELABEL_lptim4               DT_N_S_soc_S_timers_44004c00
#define DT_N_NODELABEL_stm32_lp_tick_source DT_N_S_soc_S_timers_44004c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_44004c00_REG_NUM 1
#define DT_N_S_soc_S_timers_44004c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_REG_IDX_0_VAL_ADDRESS 1140870144 /* 0x44004c00 */
#define DT_N_S_soc_S_timers_44004c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_44004c00_RANGES_NUM 0
#define DT_N_S_soc_S_timers_44004c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_44004c00_IRQ_NUM 1
#define DT_N_S_soc_S_timers_44004c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_IRQ_IDX_0_VAL_irq 128
#define DT_N_S_soc_S_timers_44004c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timers_44004c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_44004c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_44004c00_IRQ_NAME_wakeup_VAL_irq DT_N_S_soc_S_timers_44004c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_44004c00_IRQ_NAME_wakeup_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_IRQ_NAME_wakeup_VAL_priority DT_N_S_soc_S_timers_44004c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_44004c00_IRQ_NAME_wakeup_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_IRQ_NAME_wakeup_CONTROLLER DT_N_S_soc_S_timers_44004c00_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_44004c00_COMPAT_MATCHES_st_stm32_lptim 1
#define DT_N_S_soc_S_timers_44004c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_44004c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_COMPAT_MODEL_IDX_0 "stm32-lptim"
#define DT_N_S_soc_S_timers_44004c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_44004c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_44004c00_P_st_prescaler 1
#define DT_N_S_soc_S_timers_44004c00_P_st_prescaler_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_timers_44004c00_P_st_prescaler_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_st_prescaler_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_reg {1140870144 /* 0x44004c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_44004c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_reg_IDX_0 1140870144
#define DT_N_S_soc_S_timers_44004c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_44004c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_timers_44004c00_P_clocks_IDX_0_VAL_bus 168
#define DT_N_S_soc_S_timers_44004c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_clocks_IDX_0_VAL_bits 8192
#define DT_N_S_soc_S_timers_44004c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_timers_44004c00_P_clocks_IDX_1_VAL_bus 3
#define DT_N_S_soc_S_timers_44004c00_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_clocks_IDX_1_VAL_bits 324828
#define DT_N_S_soc_S_timers_44004c00_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_44004c00, clocks, 0) \
	fn(DT_N_S_soc_S_timers_44004c00, clocks, 1)
#define DT_N_S_soc_S_timers_44004c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_44004c00, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_44004c00, clocks, 1)
#define DT_N_S_soc_S_timers_44004c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_44004c00, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_44004c00, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44004c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_44004c00, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_44004c00, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44004c00_P_clocks_LEN 2
#define DT_N_S_soc_S_timers_44004c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_status "okay"
#define DT_N_S_soc_S_timers_44004c00_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timers_44004c00_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timers_44004c00_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_44004c00_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timers_44004c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_timers_44004c00_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_44004c00, status, 0)
#define DT_N_S_soc_S_timers_44004c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_44004c00, status, 0)
#define DT_N_S_soc_S_timers_44004c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_44004c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44004c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_44004c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44004c00_P_status_LEN 1
#define DT_N_S_soc_S_timers_44004c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_compatible {"st,stm32-lptim"}
#define DT_N_S_soc_S_timers_44004c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_compatible_IDX_0 "st,stm32-lptim"
#define DT_N_S_soc_S_timers_44004c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-lptim
#define DT_N_S_soc_S_timers_44004c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_lptim
#define DT_N_S_soc_S_timers_44004c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_LPTIM
#define DT_N_S_soc_S_timers_44004c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_44004c00, compatible, 0)
#define DT_N_S_soc_S_timers_44004c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_44004c00, compatible, 0)
#define DT_N_S_soc_S_timers_44004c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_44004c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44004c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_44004c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44004c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_44004c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_interrupts {128 /* 0x80 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timers_44004c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_interrupts_IDX_0 128
#define DT_N_S_soc_S_timers_44004c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timers_44004c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_interrupt_names {"wakeup"}
#define DT_N_S_soc_S_timers_44004c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_interrupt_names_IDX_0 "wakeup"
#define DT_N_S_soc_S_timers_44004c00_P_interrupt_names_IDX_0_STRING_UNQUOTED wakeup
#define DT_N_S_soc_S_timers_44004c00_P_interrupt_names_IDX_0_STRING_TOKEN wakeup
#define DT_N_S_soc_S_timers_44004c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN WAKEUP
#define DT_N_S_soc_S_timers_44004c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_44004c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_44004c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_44004c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_44004c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_44004c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44004c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_44004c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44004c00_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_44004c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_44004c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_wakeup_source 0
#define DT_N_S_soc_S_timers_44004c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_44004c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_44004c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@44005000
 *
 * Node identifier: DT_N_S_soc_S_timers_44005000
 *
 * Binding (compatible = st,stm32-lptim):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-lptim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_44005000_PATH "/soc/timers@44005000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_44005000_FULL_NAME "timers@44005000"
#define DT_N_S_soc_S_timers_44005000_FULL_NAME_UNQUOTED timers@44005000
#define DT_N_S_soc_S_timers_44005000_FULL_NAME_TOKEN timers_44005000
#define DT_N_S_soc_S_timers_44005000_FULL_NAME_UPPER_TOKEN TIMERS_44005000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_44005000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_44005000_CHILD_IDX 44

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_44005000_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_44005000_FOREACH_NODELABEL(fn) fn(lptim5)
#define DT_N_S_soc_S_timers_44005000_FOREACH_NODELABEL_VARGS(fn, ...) fn(lptim5, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_44005000_CHILD_NUM 0
#define DT_N_S_soc_S_timers_44005000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_44005000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_44005000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_44005000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_44005000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_44005000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_44005000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_44005000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_44005000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_44005000_ORD 114
#define DT_N_S_soc_S_timers_44005000_ORD_STR_SORTABLE 00114

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_44005000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_44005000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_44005000_EXISTS 1
#define DT_N_INST_4_st_stm32_lptim DT_N_S_soc_S_timers_44005000
#define DT_N_NODELABEL_lptim5      DT_N_S_soc_S_timers_44005000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_44005000_REG_NUM 1
#define DT_N_S_soc_S_timers_44005000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_REG_IDX_0_VAL_ADDRESS 1140871168 /* 0x44005000 */
#define DT_N_S_soc_S_timers_44005000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_44005000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_44005000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_44005000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_44005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_IRQ_IDX_0_VAL_irq 129
#define DT_N_S_soc_S_timers_44005000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timers_44005000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_44005000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_44005000_IRQ_NAME_wakeup_VAL_irq DT_N_S_soc_S_timers_44005000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_44005000_IRQ_NAME_wakeup_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_IRQ_NAME_wakeup_VAL_priority DT_N_S_soc_S_timers_44005000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_44005000_IRQ_NAME_wakeup_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_IRQ_NAME_wakeup_CONTROLLER DT_N_S_soc_S_timers_44005000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_44005000_COMPAT_MATCHES_st_stm32_lptim 1
#define DT_N_S_soc_S_timers_44005000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_44005000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_COMPAT_MODEL_IDX_0 "stm32-lptim"
#define DT_N_S_soc_S_timers_44005000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_44005000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_44005000_P_st_prescaler 1
#define DT_N_S_soc_S_timers_44005000_P_st_prescaler_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_timers_44005000_P_st_prescaler_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_P_st_prescaler_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_P_reg {1140871168 /* 0x44005000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_44005000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_P_reg_IDX_0 1140871168
#define DT_N_S_soc_S_timers_44005000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_44005000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_timers_44005000_P_clocks_IDX_0_VAL_bus 168
#define DT_N_S_soc_S_timers_44005000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_timers_44005000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_44005000, clocks, 0)
#define DT_N_S_soc_S_timers_44005000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_44005000, clocks, 0)
#define DT_N_S_soc_S_timers_44005000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_44005000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44005000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_44005000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44005000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_44005000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_P_status "disabled"
#define DT_N_S_soc_S_timers_44005000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_44005000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_44005000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_44005000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_44005000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_44005000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_44005000, status, 0)
#define DT_N_S_soc_S_timers_44005000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_44005000, status, 0)
#define DT_N_S_soc_S_timers_44005000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_44005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44005000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_44005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44005000_P_status_LEN 1
#define DT_N_S_soc_S_timers_44005000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_P_compatible {"st,stm32-lptim"}
#define DT_N_S_soc_S_timers_44005000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_P_compatible_IDX_0 "st,stm32-lptim"
#define DT_N_S_soc_S_timers_44005000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-lptim
#define DT_N_S_soc_S_timers_44005000_P_compatible_IDX_0_STRING_TOKEN st_stm32_lptim
#define DT_N_S_soc_S_timers_44005000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_LPTIM
#define DT_N_S_soc_S_timers_44005000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_44005000, compatible, 0)
#define DT_N_S_soc_S_timers_44005000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_44005000, compatible, 0)
#define DT_N_S_soc_S_timers_44005000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_44005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44005000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_44005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44005000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_44005000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_P_interrupts {129 /* 0x81 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timers_44005000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_P_interrupts_IDX_0 129
#define DT_N_S_soc_S_timers_44005000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timers_44005000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_P_interrupt_names {"wakeup"}
#define DT_N_S_soc_S_timers_44005000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_P_interrupt_names_IDX_0 "wakeup"
#define DT_N_S_soc_S_timers_44005000_P_interrupt_names_IDX_0_STRING_UNQUOTED wakeup
#define DT_N_S_soc_S_timers_44005000_P_interrupt_names_IDX_0_STRING_TOKEN wakeup
#define DT_N_S_soc_S_timers_44005000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN WAKEUP
#define DT_N_S_soc_S_timers_44005000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_44005000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_44005000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_44005000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_44005000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_44005000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44005000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_44005000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44005000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_44005000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_44005000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_44005000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_44005000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_44005000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@44005400
 *
 * Node identifier: DT_N_S_soc_S_timers_44005400
 *
 * Binding (compatible = st,stm32-lptim):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-lptim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_44005400_PATH "/soc/timers@44005400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_44005400_FULL_NAME "timers@44005400"
#define DT_N_S_soc_S_timers_44005400_FULL_NAME_UNQUOTED timers@44005400
#define DT_N_S_soc_S_timers_44005400_FULL_NAME_TOKEN timers_44005400
#define DT_N_S_soc_S_timers_44005400_FULL_NAME_UPPER_TOKEN TIMERS_44005400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_44005400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_44005400_CHILD_IDX 45

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_44005400_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_44005400_FOREACH_NODELABEL(fn) fn(lptim6)
#define DT_N_S_soc_S_timers_44005400_FOREACH_NODELABEL_VARGS(fn, ...) fn(lptim6, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_44005400_CHILD_NUM 0
#define DT_N_S_soc_S_timers_44005400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_44005400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_44005400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_44005400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_44005400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_44005400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_44005400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_44005400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_44005400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_44005400_ORD 115
#define DT_N_S_soc_S_timers_44005400_ORD_STR_SORTABLE 00115

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_44005400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_44005400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_44005400_EXISTS 1
#define DT_N_INST_5_st_stm32_lptim DT_N_S_soc_S_timers_44005400
#define DT_N_NODELABEL_lptim6      DT_N_S_soc_S_timers_44005400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_44005400_REG_NUM 1
#define DT_N_S_soc_S_timers_44005400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_REG_IDX_0_VAL_ADDRESS 1140872192 /* 0x44005400 */
#define DT_N_S_soc_S_timers_44005400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_44005400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_44005400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_44005400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_44005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_IRQ_IDX_0_VAL_irq 130
#define DT_N_S_soc_S_timers_44005400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timers_44005400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_44005400_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_44005400_IRQ_NAME_wakeup_VAL_irq DT_N_S_soc_S_timers_44005400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_44005400_IRQ_NAME_wakeup_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_IRQ_NAME_wakeup_VAL_priority DT_N_S_soc_S_timers_44005400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_44005400_IRQ_NAME_wakeup_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_IRQ_NAME_wakeup_CONTROLLER DT_N_S_soc_S_timers_44005400_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_44005400_COMPAT_MATCHES_st_stm32_lptim 1
#define DT_N_S_soc_S_timers_44005400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_44005400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_COMPAT_MODEL_IDX_0 "stm32-lptim"
#define DT_N_S_soc_S_timers_44005400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_44005400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_44005400_P_st_prescaler 1
#define DT_N_S_soc_S_timers_44005400_P_st_prescaler_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_timers_44005400_P_st_prescaler_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_P_st_prescaler_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_P_reg {1140872192 /* 0x44005400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_44005400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_P_reg_IDX_0 1140872192
#define DT_N_S_soc_S_timers_44005400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_44005400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_timers_44005400_P_clocks_IDX_0_VAL_bus 168
#define DT_N_S_soc_S_timers_44005400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_P_clocks_IDX_0_VAL_bits 32768
#define DT_N_S_soc_S_timers_44005400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_44005400, clocks, 0)
#define DT_N_S_soc_S_timers_44005400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_44005400, clocks, 0)
#define DT_N_S_soc_S_timers_44005400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_44005400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44005400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_44005400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44005400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_44005400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_P_status "disabled"
#define DT_N_S_soc_S_timers_44005400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_44005400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_44005400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_44005400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_44005400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_44005400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_44005400, status, 0)
#define DT_N_S_soc_S_timers_44005400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_44005400, status, 0)
#define DT_N_S_soc_S_timers_44005400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_44005400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44005400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_44005400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44005400_P_status_LEN 1
#define DT_N_S_soc_S_timers_44005400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_P_compatible {"st,stm32-lptim"}
#define DT_N_S_soc_S_timers_44005400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_P_compatible_IDX_0 "st,stm32-lptim"
#define DT_N_S_soc_S_timers_44005400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-lptim
#define DT_N_S_soc_S_timers_44005400_P_compatible_IDX_0_STRING_TOKEN st_stm32_lptim
#define DT_N_S_soc_S_timers_44005400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_LPTIM
#define DT_N_S_soc_S_timers_44005400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_44005400, compatible, 0)
#define DT_N_S_soc_S_timers_44005400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_44005400, compatible, 0)
#define DT_N_S_soc_S_timers_44005400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_44005400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44005400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_44005400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44005400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_44005400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_P_interrupts {130 /* 0x82 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timers_44005400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_P_interrupts_IDX_0 130
#define DT_N_S_soc_S_timers_44005400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timers_44005400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_P_interrupt_names {"wakeup"}
#define DT_N_S_soc_S_timers_44005400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_P_interrupt_names_IDX_0 "wakeup"
#define DT_N_S_soc_S_timers_44005400_P_interrupt_names_IDX_0_STRING_UNQUOTED wakeup
#define DT_N_S_soc_S_timers_44005400_P_interrupt_names_IDX_0_STRING_TOKEN wakeup
#define DT_N_S_soc_S_timers_44005400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN WAKEUP
#define DT_N_S_soc_S_timers_44005400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_44005400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_44005400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_44005400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_44005400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_44005400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44005400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_44005400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_44005400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_44005400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_44005400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_44005400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_44005400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_44005400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /usbphy
 *
 * Node identifier: DT_N_S_usbphy
 *
 * Binding (compatible = usb-nop-xceiv):
 *   $ZEPHYR_BASE\dts\bindings\phy\usb-nop-xceiv.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_usbphy_PATH "/usbphy"

/* Node's name with unit-address: */
#define DT_N_S_usbphy_FULL_NAME "usbphy"
#define DT_N_S_usbphy_FULL_NAME_UNQUOTED usbphy
#define DT_N_S_usbphy_FULL_NAME_TOKEN usbphy
#define DT_N_S_usbphy_FULL_NAME_UPPER_TOKEN USBPHY

/* Node parent (/) identifier: */
#define DT_N_S_usbphy_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_usbphy_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_usbphy_NODELABEL_NUM 1
#define DT_N_S_usbphy_FOREACH_NODELABEL(fn) fn(usb_fs_phy)
#define DT_N_S_usbphy_FOREACH_NODELABEL_VARGS(fn, ...) fn(usb_fs_phy, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_usbphy_CHILD_NUM 0
#define DT_N_S_usbphy_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_usbphy_FOREACH_CHILD(fn) 
#define DT_N_S_usbphy_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_usbphy_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_usbphy_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_usbphy_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_usbphy_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_usbphy_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_usbphy_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_usbphy_ORD 116
#define DT_N_S_usbphy_ORD_STR_SORTABLE 00116

/* Ordinals for what this node depends on directly: */
#define DT_N_S_usbphy_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_usbphy_SUPPORTS_ORDS \
	119, /* /soc/usb@40016000 */

/* Existence and alternate IDs: */
#define DT_N_S_usbphy_EXISTS 1
#define DT_N_INST_0_usb_nop_xceiv DT_N_S_usbphy
#define DT_N_NODELABEL_usb_fs_phy DT_N_S_usbphy

/* Macros for properties that are special in the specification: */
#define DT_N_S_usbphy_REG_NUM 0
#define DT_N_S_usbphy_RANGES_NUM 0
#define DT_N_S_usbphy_FOREACH_RANGE(fn) 
#define DT_N_S_usbphy_IRQ_NUM 0
#define DT_N_S_usbphy_IRQ_LEVEL 0
#define DT_N_S_usbphy_COMPAT_MATCHES_usb_nop_xceiv 1
#define DT_N_S_usbphy_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_usbphy_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_usbphy_P_compatible {"usb-nop-xceiv"}
#define DT_N_S_usbphy_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_usbphy_P_compatible_IDX_0 "usb-nop-xceiv"
#define DT_N_S_usbphy_P_compatible_IDX_0_STRING_UNQUOTED usb-nop-xceiv
#define DT_N_S_usbphy_P_compatible_IDX_0_STRING_TOKEN usb_nop_xceiv
#define DT_N_S_usbphy_P_compatible_IDX_0_STRING_UPPER_TOKEN USB_NOP_XCEIV
#define DT_N_S_usbphy_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_usbphy, compatible, 0)
#define DT_N_S_usbphy_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_usbphy, compatible, 0)
#define DT_N_S_usbphy_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_usbphy, compatible, 0, __VA_ARGS__)
#define DT_N_S_usbphy_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_usbphy, compatible, 0, __VA_ARGS__)
#define DT_N_S_usbphy_P_compatible_LEN 1
#define DT_N_S_usbphy_P_compatible_EXISTS 1
#define DT_N_S_usbphy_P_zephyr_deferred_init 0
#define DT_N_S_usbphy_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_usbphy_P_wakeup_source 0
#define DT_N_S_usbphy_P_wakeup_source_EXISTS 1
#define DT_N_S_usbphy_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_usbphy_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/usb_dm_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_PATH "/soc/pin-controller@42020000/usb_dm_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_FULL_NAME "usb_dm_pa11"
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_FULL_NAME_UNQUOTED usb_dm_pa11
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_FULL_NAME_TOKEN usb_dm_pa11
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_FULL_NAME_UPPER_TOKEN USB_DM_PA11

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_CHILD_IDX 33

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_FOREACH_NODELABEL(fn) fn(usb_dm_pa11)
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_FOREACH_NODELABEL_VARGS(fn, ...) fn(usb_dm_pa11, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_ORD 117
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_ORD_STR_SORTABLE 00117

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_SUPPORTS_ORDS \
	119, /* /soc/usb@40016000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_EXISTS 1
#define DT_N_NODELABEL_usb_dm_pa11 DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_pinmux 362
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/usb_dp_pa12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_PATH "/soc/pin-controller@42020000/usb_dp_pa12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_FULL_NAME "usb_dp_pa12"
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_FULL_NAME_UNQUOTED usb_dp_pa12
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_FULL_NAME_TOKEN usb_dp_pa12
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_FULL_NAME_UPPER_TOKEN USB_DP_PA12

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_CHILD_IDX 34

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_FOREACH_NODELABEL(fn) fn(usb_dp_pa12)
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_FOREACH_NODELABEL_VARGS(fn, ...) fn(usb_dp_pa12, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_ORD 118
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_ORD_STR_SORTABLE 00118

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_SUPPORTS_ORDS \
	119, /* /soc/usb@40016000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_EXISTS 1
#define DT_N_NODELABEL_usb_dp_pa12 DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_pinmux 394
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_slew_rate_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_slew_rate_IDX_0_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/usb@40016000
 *
 * Node identifier: DT_N_S_soc_S_usb_40016000
 *
 * Binding (compatible = st,stm32-usb):
 *   $ZEPHYR_BASE\dts\bindings\usb\st,stm32-usb.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usb_40016000_PATH "/soc/usb@40016000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usb_40016000_FULL_NAME "usb@40016000"
#define DT_N_S_soc_S_usb_40016000_FULL_NAME_UNQUOTED usb@40016000
#define DT_N_S_soc_S_usb_40016000_FULL_NAME_TOKEN usb_40016000
#define DT_N_S_soc_S_usb_40016000_FULL_NAME_UPPER_TOKEN USB_40016000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usb_40016000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usb_40016000_CHILD_IDX 37

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_usb_40016000_NODELABEL_NUM 2
#define DT_N_S_soc_S_usb_40016000_FOREACH_NODELABEL(fn) fn(usb) fn(zephyr_udc0)
#define DT_N_S_soc_S_usb_40016000_FOREACH_NODELABEL_VARGS(fn, ...) fn(usb, __VA_ARGS__) fn(zephyr_udc0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usb_40016000_CHILD_NUM 0
#define DT_N_S_soc_S_usb_40016000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_usb_40016000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usb_40016000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_usb_40016000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usb_40016000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_usb_40016000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usb_40016000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_usb_40016000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_usb_40016000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usb_40016000_ORD 119
#define DT_N_S_soc_S_usb_40016000_ORD_STR_SORTABLE 00119

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usb_40016000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	116, /* /usbphy */ \
	117, /* /soc/pin-controller@42020000/usb_dm_pa11 */ \
	118, /* /soc/pin-controller@42020000/usb_dp_pa12 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usb_40016000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usb_40016000_EXISTS 1
#define DT_N_INST_0_st_stm32_usb   DT_N_S_soc_S_usb_40016000
#define DT_N_NODELABEL_usb         DT_N_S_soc_S_usb_40016000
#define DT_N_NODELABEL_zephyr_udc0 DT_N_S_soc_S_usb_40016000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usb_40016000_REG_NUM 1
#define DT_N_S_soc_S_usb_40016000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_REG_IDX_0_VAL_ADDRESS 1073831936 /* 0x40016000 */
#define DT_N_S_soc_S_usb_40016000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_usb_40016000_RANGES_NUM 0
#define DT_N_S_soc_S_usb_40016000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usb_40016000_IRQ_NUM 1
#define DT_N_S_soc_S_usb_40016000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_IRQ_IDX_0_VAL_irq 74
#define DT_N_S_soc_S_usb_40016000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_usb_40016000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_usb_40016000_IRQ_LEVEL 1
#define DT_N_S_soc_S_usb_40016000_IRQ_NAME_usb_VAL_irq DT_N_S_soc_S_usb_40016000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_usb_40016000_IRQ_NAME_usb_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_IRQ_NAME_usb_VAL_priority DT_N_S_soc_S_usb_40016000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_usb_40016000_IRQ_NAME_usb_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_IRQ_NAME_usb_CONTROLLER DT_N_S_soc_S_usb_40016000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_usb_40016000_COMPAT_MATCHES_st_stm32_usb 1
#define DT_N_S_soc_S_usb_40016000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_usb_40016000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_COMPAT_MODEL_IDX_0 "stm32-usb"
#define DT_N_S_soc_S_usb_40016000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usb_40016000_PINCTRL_NUM 1
#define DT_N_S_soc_S_usb_40016000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_usb_40016000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_usb_40016000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_usb_40016000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11
#define DT_N_S_soc_S_usb_40016000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12

/* Generic property macros: */
#define DT_N_S_soc_S_usb_40016000_P_reg {1073831936 /* 0x40016000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_usb_40016000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_reg_IDX_0 1073831936
#define DT_N_S_soc_S_usb_40016000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_usb_40016000_P_reg_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_interrupts {74 /* 0x4a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_usb_40016000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_interrupts_IDX_0 74
#define DT_N_S_soc_S_usb_40016000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_usb_40016000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_ram_size 2048
#define DT_N_S_soc_S_usb_40016000_P_ram_size_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_phys DT_N_S_usbphy
#define DT_N_S_soc_S_usb_40016000_P_phys_IDX_0 DT_N_S_usbphy
#define DT_N_S_soc_S_usb_40016000_P_phys_IDX_0_PH DT_N_S_usbphy
#define DT_N_S_soc_S_usb_40016000_P_phys_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_phys_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40016000, phys, 0)
#define DT_N_S_soc_S_usb_40016000_P_phys_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_40016000, phys, 0)
#define DT_N_S_soc_S_usb_40016000_P_phys_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40016000, phys, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40016000_P_phys_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_40016000, phys, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40016000_P_phys_LEN 1
#define DT_N_S_soc_S_usb_40016000_P_phys_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_usb_40016000_P_clocks_IDX_0_VAL_bus 164
#define DT_N_S_soc_S_usb_40016000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_clocks_IDX_0_VAL_bits 16777216
#define DT_N_S_soc_S_usb_40016000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_usb_40016000_P_clocks_IDX_1_VAL_bus 7
#define DT_N_S_soc_S_usb_40016000_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_clocks_IDX_1_VAL_bits 222436
#define DT_N_S_soc_S_usb_40016000_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40016000, clocks, 0) \
	fn(DT_N_S_soc_S_usb_40016000, clocks, 1)
#define DT_N_S_soc_S_usb_40016000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_40016000, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usb_40016000, clocks, 1)
#define DT_N_S_soc_S_usb_40016000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40016000, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40016000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40016000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_40016000, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usb_40016000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40016000_P_clocks_LEN 2
#define DT_N_S_soc_S_usb_40016000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_num_bidir_endpoints 8
#define DT_N_S_soc_S_usb_40016000_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_status "okay"
#define DT_N_S_soc_S_usb_40016000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_usb_40016000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_usb_40016000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usb_40016000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_usb_40016000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_usb_40016000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40016000, status, 0)
#define DT_N_S_soc_S_usb_40016000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_40016000, status, 0)
#define DT_N_S_soc_S_usb_40016000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40016000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40016000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_40016000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40016000_P_status_LEN 1
#define DT_N_S_soc_S_usb_40016000_P_status_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_compatible {"st,stm32-usb"}
#define DT_N_S_soc_S_usb_40016000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_compatible_IDX_0 "st,stm32-usb"
#define DT_N_S_soc_S_usb_40016000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-usb
#define DT_N_S_soc_S_usb_40016000_P_compatible_IDX_0_STRING_TOKEN st_stm32_usb
#define DT_N_S_soc_S_usb_40016000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USB
#define DT_N_S_soc_S_usb_40016000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40016000, compatible, 0)
#define DT_N_S_soc_S_usb_40016000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_40016000, compatible, 0)
#define DT_N_S_soc_S_usb_40016000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40016000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40016000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_40016000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40016000_P_compatible_LEN 1
#define DT_N_S_soc_S_usb_40016000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_interrupt_names {"usb"}
#define DT_N_S_soc_S_usb_40016000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_interrupt_names_IDX_0 "usb"
#define DT_N_S_soc_S_usb_40016000_P_interrupt_names_IDX_0_STRING_UNQUOTED usb
#define DT_N_S_soc_S_usb_40016000_P_interrupt_names_IDX_0_STRING_TOKEN usb
#define DT_N_S_soc_S_usb_40016000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN USB
#define DT_N_S_soc_S_usb_40016000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40016000, interrupt_names, 0)
#define DT_N_S_soc_S_usb_40016000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_40016000, interrupt_names, 0)
#define DT_N_S_soc_S_usb_40016000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40016000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40016000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_40016000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40016000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_usb_40016000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_usb_40016000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_wakeup_source 0
#define DT_N_S_soc_S_usb_40016000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_usb_40016000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11
#define DT_N_S_soc_S_usb_40016000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11
#define DT_N_S_soc_S_usb_40016000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12
#define DT_N_S_soc_S_usb_40016000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12
#define DT_N_S_soc_S_usb_40016000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40016000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_usb_40016000, pinctrl_0, 1)
#define DT_N_S_soc_S_usb_40016000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_40016000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usb_40016000, pinctrl_0, 1)
#define DT_N_S_soc_S_usb_40016000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40016000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40016000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40016000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_40016000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usb_40016000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40016000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_usb_40016000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_usb_40016000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40016000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_usb_40016000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_usb_40016000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_usb_40016000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_usb_40016000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40016000, pinctrl_names, 0)
#define DT_N_S_soc_S_usb_40016000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_40016000, pinctrl_names, 0)
#define DT_N_S_soc_S_usb_40016000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40016000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40016000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_40016000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40016000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_usb_40016000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40002c00
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40002c00
 *
 * Binding (compatible = st,stm32-window-watchdog):
 *   $ZEPHYR_BASE\dts\bindings\watchdog\st,stm32-window-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40002c00_PATH "/soc/watchdog@40002c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40002c00_FULL_NAME "watchdog@40002c00"
#define DT_N_S_soc_S_watchdog_40002c00_FULL_NAME_UNQUOTED watchdog@40002c00
#define DT_N_S_soc_S_watchdog_40002c00_FULL_NAME_TOKEN watchdog_40002c00
#define DT_N_S_soc_S_watchdog_40002c00_FULL_NAME_UPPER_TOKEN WATCHDOG_40002C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40002c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40002c00_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_watchdog_40002c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_NODELABEL(fn) fn(wwdg)
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(wwdg, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40002c00_CHILD_NUM 0
#define DT_N_S_soc_S_watchdog_40002c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40002c00_ORD 120
#define DT_N_S_soc_S_watchdog_40002c00_ORD_STR_SORTABLE 00120

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40002c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40002c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40002c00_EXISTS 1
#define DT_N_INST_0_st_stm32_window_watchdog DT_N_S_soc_S_watchdog_40002c00
#define DT_N_NODELABEL_wwdg                  DT_N_S_soc_S_watchdog_40002c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40002c00_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_VAL_ADDRESS 1073753088 /* 0x40002c00 */
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40002c00_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_priority 7
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MATCHES_st_stm32_window_watchdog 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MODEL_IDX_0 "stm32-window-watchdog"
#define DT_N_S_soc_S_watchdog_40002c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40002c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40002c00_P_reg {1073753088 /* 0x40002c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_0 1073753088
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status "disabled"
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40002c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_watchdog_40002c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_40002c00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible {"st,stm32-window-watchdog"}
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0 "st,stm32-window-watchdog"
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-window-watchdog
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_window_watchdog
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_WINDOW_WATCHDOG
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts {0 /* 0x0 */, 7 /* 0x7 */}
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_1 7
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_watchdog_40002c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40002c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_40002c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40003000
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40003000
 *
 * Binding (compatible = st,stm32-watchdog):
 *   $ZEPHYR_BASE\dts\bindings\watchdog\st,stm32-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40003000_PATH "/soc/watchdog@40003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40003000_FULL_NAME "watchdog@40003000"
#define DT_N_S_soc_S_watchdog_40003000_FULL_NAME_UNQUOTED watchdog@40003000
#define DT_N_S_soc_S_watchdog_40003000_FULL_NAME_TOKEN watchdog_40003000
#define DT_N_S_soc_S_watchdog_40003000_FULL_NAME_UPPER_TOKEN WATCHDOG_40003000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40003000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40003000_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_watchdog_40003000_NODELABEL_NUM 1
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_NODELABEL(fn) fn(iwdg)
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_NODELABEL_VARGS(fn, ...) fn(iwdg, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40003000_CHILD_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40003000_ORD 121
#define DT_N_S_soc_S_watchdog_40003000_ORD_STR_SORTABLE 00121

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40003000_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40003000_EXISTS 1
#define DT_N_ALIAS_watchdog0          DT_N_S_soc_S_watchdog_40003000
#define DT_N_INST_0_st_stm32_watchdog DT_N_S_soc_S_watchdog_40003000
#define DT_N_NODELABEL_iwdg           DT_N_S_soc_S_watchdog_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40003000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40003000_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40003000_IRQ_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_IRQ_LEVEL 0
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MATCHES_st_stm32_watchdog 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MODEL_IDX_0 "stm32-watchdog"
#define DT_N_S_soc_S_watchdog_40003000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40003000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40003000_P_reg {1073754112 /* 0x40003000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status "okay"
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_40003000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_watchdog_40003000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, status, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40003000, status, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible {"st,stm32-watchdog"}
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0 "st,stm32-watchdog"
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-watchdog
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_STRING_TOKEN st_stm32_watchdog
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_WATCHDOG
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_watchdog_40003000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40003000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_40003000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/xspi@47001400
 *
 * Node identifier: DT_N_S_soc_S_xspi_47001400
 *
 * Binding (compatible = st,stm32-xspi):
 *   $ZEPHYR_BASE\dts\bindings\xspi\st,stm32-xspi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_xspi_47001400_PATH "/soc/xspi@47001400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_xspi_47001400_FULL_NAME "xspi@47001400"
#define DT_N_S_soc_S_xspi_47001400_FULL_NAME_UNQUOTED xspi@47001400
#define DT_N_S_soc_S_xspi_47001400_FULL_NAME_TOKEN xspi_47001400
#define DT_N_S_soc_S_xspi_47001400_FULL_NAME_UPPER_TOKEN XSPI_47001400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_xspi_47001400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_xspi_47001400_CHILD_IDX 60

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_xspi_47001400_NODELABEL_NUM 1
#define DT_N_S_soc_S_xspi_47001400_FOREACH_NODELABEL(fn) fn(xspi1)
#define DT_N_S_soc_S_xspi_47001400_FOREACH_NODELABEL_VARGS(fn, ...) fn(xspi1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_xspi_47001400_CHILD_NUM 0
#define DT_N_S_soc_S_xspi_47001400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_xspi_47001400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_xspi_47001400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_xspi_47001400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_xspi_47001400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_xspi_47001400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_xspi_47001400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_xspi_47001400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_xspi_47001400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_xspi_47001400_ORD 122
#define DT_N_S_soc_S_xspi_47001400_ORD_STR_SORTABLE 00122

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_xspi_47001400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_xspi_47001400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_xspi_47001400_EXISTS 1
#define DT_N_INST_0_st_stm32_xspi DT_N_S_soc_S_xspi_47001400
#define DT_N_NODELABEL_xspi1      DT_N_S_soc_S_xspi_47001400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_xspi_47001400_REG_NUM 1
#define DT_N_S_soc_S_xspi_47001400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_REG_IDX_0_VAL_ADDRESS 1191187456 /* 0x47001400 */
#define DT_N_S_soc_S_xspi_47001400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_xspi_47001400_RANGES_NUM 0
#define DT_N_S_soc_S_xspi_47001400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_xspi_47001400_IRQ_NUM 1
#define DT_N_S_soc_S_xspi_47001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_IRQ_IDX_0_VAL_irq 78
#define DT_N_S_soc_S_xspi_47001400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_xspi_47001400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_xspi_47001400_IRQ_LEVEL 1
#define DT_N_S_soc_S_xspi_47001400_COMPAT_MATCHES_st_stm32_xspi 1
#define DT_N_S_soc_S_xspi_47001400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_xspi_47001400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_COMPAT_MODEL_IDX_0 "stm32-xspi"
#define DT_N_S_soc_S_xspi_47001400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_xspi_47001400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_xspi_47001400_P_reg {1191187456 /* 0x47001400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_xspi_47001400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_reg_IDX_0 1191187456
#define DT_N_S_soc_S_xspi_47001400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_xspi_47001400_P_reg_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_interrupts {78 /* 0x4e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_xspi_47001400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_interrupts_IDX_0 78
#define DT_N_S_soc_S_xspi_47001400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_xspi_47001400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_clock_names {"xspix", "xspi-ker"}
#define DT_N_S_soc_S_xspi_47001400_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_clock_names_IDX_0 "xspix"
#define DT_N_S_soc_S_xspi_47001400_P_clock_names_IDX_0_STRING_UNQUOTED xspix
#define DT_N_S_soc_S_xspi_47001400_P_clock_names_IDX_0_STRING_TOKEN xspix
#define DT_N_S_soc_S_xspi_47001400_P_clock_names_IDX_0_STRING_UPPER_TOKEN XSPIX
#define DT_N_S_soc_S_xspi_47001400_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_clock_names_IDX_1 "xspi-ker"
#define DT_N_S_soc_S_xspi_47001400_P_clock_names_IDX_1_STRING_UNQUOTED xspi-ker
#define DT_N_S_soc_S_xspi_47001400_P_clock_names_IDX_1_STRING_TOKEN xspi_ker
#define DT_N_S_soc_S_xspi_47001400_P_clock_names_IDX_1_STRING_UPPER_TOKEN XSPI_KER
#define DT_N_S_soc_S_xspi_47001400_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_xspi_47001400, clock_names, 0) \
	fn(DT_N_S_soc_S_xspi_47001400, clock_names, 1)
#define DT_N_S_soc_S_xspi_47001400_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_xspi_47001400, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xspi_47001400, clock_names, 1)
#define DT_N_S_soc_S_xspi_47001400_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_xspi_47001400, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xspi_47001400, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_xspi_47001400_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_xspi_47001400, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xspi_47001400, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_xspi_47001400_P_clock_names_LEN 2
#define DT_N_S_soc_S_xspi_47001400_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_dlyb_bypass 0
#define DT_N_S_soc_S_xspi_47001400_P_dlyb_bypass_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_ssht_enable 0
#define DT_N_S_soc_S_xspi_47001400_P_ssht_enable_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_status "disabled"
#define DT_N_S_soc_S_xspi_47001400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_xspi_47001400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_xspi_47001400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_xspi_47001400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_xspi_47001400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_xspi_47001400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_xspi_47001400, status, 0)
#define DT_N_S_soc_S_xspi_47001400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_xspi_47001400, status, 0)
#define DT_N_S_soc_S_xspi_47001400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_xspi_47001400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_xspi_47001400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_xspi_47001400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_xspi_47001400_P_status_LEN 1
#define DT_N_S_soc_S_xspi_47001400_P_status_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_compatible {"st,stm32-xspi"}
#define DT_N_S_soc_S_xspi_47001400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_compatible_IDX_0 "st,stm32-xspi"
#define DT_N_S_soc_S_xspi_47001400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-xspi
#define DT_N_S_soc_S_xspi_47001400_P_compatible_IDX_0_STRING_TOKEN st_stm32_xspi
#define DT_N_S_soc_S_xspi_47001400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_XSPI
#define DT_N_S_soc_S_xspi_47001400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_xspi_47001400, compatible, 0)
#define DT_N_S_soc_S_xspi_47001400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_xspi_47001400, compatible, 0)
#define DT_N_S_soc_S_xspi_47001400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_xspi_47001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_xspi_47001400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_xspi_47001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_xspi_47001400_P_compatible_LEN 1
#define DT_N_S_soc_S_xspi_47001400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_xspi_47001400_P_clocks_IDX_0_VAL_bus 148
#define DT_N_S_soc_S_xspi_47001400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_clocks_IDX_0_VAL_bits 1048576
#define DT_N_S_soc_S_xspi_47001400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_clocks_IDX_0_NAME "xspix"
#define DT_N_S_soc_S_xspi_47001400_P_clocks_NAME_xspix_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_xspi_47001400_P_clocks_NAME_xspix_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_clocks_NAME_xspix_VAL_bus DT_N_S_soc_S_xspi_47001400_P_clocks_IDX_0_VAL_bus
#define DT_N_S_soc_S_xspi_47001400_P_clocks_NAME_xspix_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_clocks_NAME_xspix_VAL_bits DT_N_S_soc_S_xspi_47001400_P_clocks_IDX_0_VAL_bits
#define DT_N_S_soc_S_xspi_47001400_P_clocks_NAME_xspix_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_xspi_47001400_P_clocks_IDX_1_VAL_bus 13
#define DT_N_S_soc_S_xspi_47001400_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_clocks_IDX_1_VAL_bits 90340
#define DT_N_S_soc_S_xspi_47001400_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_clocks_IDX_1_NAME "xspi-ker"
#define DT_N_S_soc_S_xspi_47001400_P_clocks_NAME_xspi_ker_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_xspi_47001400_P_clocks_NAME_xspi_ker_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_clocks_NAME_xspi_ker_VAL_bus DT_N_S_soc_S_xspi_47001400_P_clocks_IDX_1_VAL_bus
#define DT_N_S_soc_S_xspi_47001400_P_clocks_NAME_xspi_ker_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_clocks_NAME_xspi_ker_VAL_bits DT_N_S_soc_S_xspi_47001400_P_clocks_IDX_1_VAL_bits
#define DT_N_S_soc_S_xspi_47001400_P_clocks_NAME_xspi_ker_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_xspi_47001400, clocks, 0) \
	fn(DT_N_S_soc_S_xspi_47001400, clocks, 1)
#define DT_N_S_soc_S_xspi_47001400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_xspi_47001400, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xspi_47001400, clocks, 1)
#define DT_N_S_soc_S_xspi_47001400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_xspi_47001400, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xspi_47001400, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_xspi_47001400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_xspi_47001400, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xspi_47001400, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_xspi_47001400_P_clocks_LEN 2
#define DT_N_S_soc_S_xspi_47001400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_xspi_47001400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_wakeup_source 0
#define DT_N_S_soc_S_xspi_47001400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_xspi_47001400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_xspi_47001400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/eth_crs_dv_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_PATH "/soc/pin-controller@42020000/eth_crs_dv_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_FULL_NAME "eth_crs_dv_pa7"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_FULL_NAME_UNQUOTED eth_crs_dv_pa7
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_FULL_NAME_TOKEN eth_crs_dv_pa7
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_FULL_NAME_UPPER_TOKEN ETH_CRS_DV_PA7

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_FOREACH_NODELABEL(fn) fn(eth_crs_dv_pa7)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_FOREACH_NODELABEL_VARGS(fn, ...) fn(eth_crs_dv_pa7, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_ORD 123
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_ORD_STR_SORTABLE 00123

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_SUPPORTS_ORDS \
	130, /* /soc/ethernet@40028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_EXISTS 1
#define DT_N_NODELABEL_eth_crs_dv_pa7 DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_pinmux 235
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_slew_rate_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_slew_rate_IDX_0_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/eth_ref_clk_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_PATH "/soc/pin-controller@42020000/eth_ref_clk_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_FULL_NAME "eth_ref_clk_pa1"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_FULL_NAME_UNQUOTED eth_ref_clk_pa1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_FULL_NAME_TOKEN eth_ref_clk_pa1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_FULL_NAME_UPPER_TOKEN ETH_REF_CLK_PA1

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_FOREACH_NODELABEL(fn) fn(eth_ref_clk_pa1)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_FOREACH_NODELABEL_VARGS(fn, ...) fn(eth_ref_clk_pa1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_ORD 124
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_ORD_STR_SORTABLE 00124

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_SUPPORTS_ORDS \
	130, /* /soc/ethernet@40028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_EXISTS 1
#define DT_N_NODELABEL_eth_ref_clk_pa1 DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_pinmux 43
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_slew_rate_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_slew_rate_IDX_0_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/eth_rxd0_pc4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_PATH "/soc/pin-controller@42020000/eth_rxd0_pc4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_FULL_NAME "eth_rxd0_pc4"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_FULL_NAME_UNQUOTED eth_rxd0_pc4
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_FULL_NAME_TOKEN eth_rxd0_pc4
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_FULL_NAME_UPPER_TOKEN ETH_RXD0_PC4

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_FOREACH_NODELABEL(fn) fn(eth_rxd0_pc4)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_FOREACH_NODELABEL_VARGS(fn, ...) fn(eth_rxd0_pc4, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_ORD 125
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_ORD_STR_SORTABLE 00125

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_SUPPORTS_ORDS \
	130, /* /soc/ethernet@40028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_EXISTS 1
#define DT_N_NODELABEL_eth_rxd0_pc4 DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_pinmux 1163
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_slew_rate_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_slew_rate_IDX_0_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/eth_rxd1_pc5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_PATH "/soc/pin-controller@42020000/eth_rxd1_pc5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_FULL_NAME "eth_rxd1_pc5"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_FULL_NAME_UNQUOTED eth_rxd1_pc5
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_FULL_NAME_TOKEN eth_rxd1_pc5
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_FULL_NAME_UPPER_TOKEN ETH_RXD1_PC5

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_FOREACH_NODELABEL(fn) fn(eth_rxd1_pc5)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_FOREACH_NODELABEL_VARGS(fn, ...) fn(eth_rxd1_pc5, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_ORD 126
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_ORD_STR_SORTABLE 00126

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_SUPPORTS_ORDS \
	130, /* /soc/ethernet@40028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_EXISTS 1
#define DT_N_NODELABEL_eth_rxd1_pc5 DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_pinmux 1195
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_slew_rate_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_slew_rate_IDX_0_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/eth_tx_en_pg11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_PATH "/soc/pin-controller@42020000/eth_tx_en_pg11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_FULL_NAME "eth_tx_en_pg11"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_FULL_NAME_UNQUOTED eth_tx_en_pg11
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_FULL_NAME_TOKEN eth_tx_en_pg11
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_FULL_NAME_UPPER_TOKEN ETH_TX_EN_PG11

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_CHILD_IDX 20

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_FOREACH_NODELABEL(fn) fn(eth_tx_en_pg11)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_FOREACH_NODELABEL_VARGS(fn, ...) fn(eth_tx_en_pg11, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_ORD 127
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_ORD_STR_SORTABLE 00127

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_SUPPORTS_ORDS \
	130, /* /soc/ethernet@40028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_EXISTS 1
#define DT_N_NODELABEL_eth_tx_en_pg11 DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_pinmux 3435
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_slew_rate_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_slew_rate_IDX_0_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/eth_txd0_pg13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_PATH "/soc/pin-controller@42020000/eth_txd0_pg13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_FULL_NAME "eth_txd0_pg13"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_FULL_NAME_UNQUOTED eth_txd0_pg13
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_FULL_NAME_TOKEN eth_txd0_pg13
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_FULL_NAME_UPPER_TOKEN ETH_TXD0_PG13

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_FOREACH_NODELABEL(fn) fn(eth_txd0_pg13)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_FOREACH_NODELABEL_VARGS(fn, ...) fn(eth_txd0_pg13, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_ORD 128
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_ORD_STR_SORTABLE 00128

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_SUPPORTS_ORDS \
	130, /* /soc/ethernet@40028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_EXISTS 1
#define DT_N_NODELABEL_eth_txd0_pg13 DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_pinmux 3499
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_slew_rate_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_slew_rate_IDX_0_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/eth_txd1_pb15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_PATH "/soc/pin-controller@42020000/eth_txd1_pb15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_FULL_NAME "eth_txd1_pb15"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_FULL_NAME_UNQUOTED eth_txd1_pb15
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_FULL_NAME_TOKEN eth_txd1_pb15
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_FULL_NAME_UPPER_TOKEN ETH_TXD1_PB15

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_CHILD_IDX 19

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_FOREACH_NODELABEL(fn) fn(eth_txd1_pb15)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_FOREACH_NODELABEL_VARGS(fn, ...) fn(eth_txd1_pb15, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_ORD 129
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_ORD_STR_SORTABLE 00129

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_SUPPORTS_ORDS \
	130, /* /soc/ethernet@40028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_EXISTS 1
#define DT_N_NODELABEL_eth_txd1_pb15 DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_pinmux 1003
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_slew_rate_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_slew_rate_IDX_0_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/ethernet@40028000
 *
 * Node identifier: DT_N_S_soc_S_ethernet_40028000
 *
 * Binding (compatible = st,stm32h7-ethernet):
 *   $ZEPHYR_BASE\dts\bindings\ethernet\st,stm32h7-ethernet.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ethernet_40028000_PATH "/soc/ethernet@40028000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ethernet_40028000_FULL_NAME "ethernet@40028000"
#define DT_N_S_soc_S_ethernet_40028000_FULL_NAME_UNQUOTED ethernet@40028000
#define DT_N_S_soc_S_ethernet_40028000_FULL_NAME_TOKEN ethernet_40028000
#define DT_N_S_soc_S_ethernet_40028000_FULL_NAME_UPPER_TOKEN ETHERNET_40028000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ethernet_40028000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ethernet_40028000_CHILD_IDX 31

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ethernet_40028000_NODELABEL_NUM 1
#define DT_N_S_soc_S_ethernet_40028000_FOREACH_NODELABEL(fn) fn(mac)
#define DT_N_S_soc_S_ethernet_40028000_FOREACH_NODELABEL_VARGS(fn, ...) fn(mac, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ethernet_40028000_CHILD_NUM 1
#define DT_N_S_soc_S_ethernet_40028000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_ethernet_40028000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio)
#define DT_N_S_soc_S_ethernet_40028000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio)
#define DT_N_S_soc_S_ethernet_40028000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio)
#define DT_N_S_soc_S_ethernet_40028000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio)
#define DT_N_S_soc_S_ethernet_40028000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ethernet_40028000_ORD 130
#define DT_N_S_soc_S_ethernet_40028000_ORD_STR_SORTABLE 00130

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ethernet_40028000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	123, /* /soc/pin-controller@42020000/eth_crs_dv_pa7 */ \
	124, /* /soc/pin-controller@42020000/eth_ref_clk_pa1 */ \
	125, /* /soc/pin-controller@42020000/eth_rxd0_pc4 */ \
	126, /* /soc/pin-controller@42020000/eth_rxd1_pc5 */ \
	127, /* /soc/pin-controller@42020000/eth_tx_en_pg11 */ \
	128, /* /soc/pin-controller@42020000/eth_txd0_pg13 */ \
	129, /* /soc/pin-controller@42020000/eth_txd1_pb15 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ethernet_40028000_SUPPORTS_ORDS \
	133, /* /soc/ethernet@40028000/mdio */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ethernet_40028000_EXISTS 1
#define DT_N_INST_0_st_stm32h7_ethernet DT_N_S_soc_S_ethernet_40028000
#define DT_N_INST_0_st_stm32_ethernet   DT_N_S_soc_S_ethernet_40028000
#define DT_N_NODELABEL_mac              DT_N_S_soc_S_ethernet_40028000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ethernet_40028000_REG_NUM 1
#define DT_N_S_soc_S_ethernet_40028000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_REG_IDX_0_VAL_ADDRESS 1073905664 /* 0x40028000 */
#define DT_N_S_soc_S_ethernet_40028000_REG_IDX_0_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_soc_S_ethernet_40028000_RANGES_NUM 0
#define DT_N_S_soc_S_ethernet_40028000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ethernet_40028000_IRQ_NUM 1
#define DT_N_S_soc_S_ethernet_40028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_IRQ_IDX_0_VAL_irq 106
#define DT_N_S_soc_S_ethernet_40028000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_ethernet_40028000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_ethernet_40028000_IRQ_LEVEL 1
#define DT_N_S_soc_S_ethernet_40028000_COMPAT_MATCHES_st_stm32h7_ethernet 1
#define DT_N_S_soc_S_ethernet_40028000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_ethernet_40028000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_COMPAT_MODEL_IDX_0 "stm32h7-ethernet"
#define DT_N_S_soc_S_ethernet_40028000_COMPAT_MATCHES_st_stm32_ethernet 1
#define DT_N_S_soc_S_ethernet_40028000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_ethernet_40028000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_COMPAT_MODEL_IDX_1 "stm32-ethernet"
#define DT_N_S_soc_S_ethernet_40028000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ethernet_40028000_PINCTRL_NUM 1
#define DT_N_S_soc_S_ethernet_40028000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_ethernet_40028000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_ethernet_40028000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_ethernet_40028000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4
#define DT_N_S_soc_S_ethernet_40028000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5
#define DT_N_S_soc_S_ethernet_40028000_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1
#define DT_N_S_soc_S_ethernet_40028000_PINCTRL_NAME_default_IDX_3_PH DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7
#define DT_N_S_soc_S_ethernet_40028000_PINCTRL_NAME_default_IDX_4_PH DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11
#define DT_N_S_soc_S_ethernet_40028000_PINCTRL_NAME_default_IDX_5_PH DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13
#define DT_N_S_soc_S_ethernet_40028000_PINCTRL_NAME_default_IDX_6_PH DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15

/* Generic property macros: */
#define DT_N_S_soc_S_ethernet_40028000_P_reg {1073905664 /* 0x40028000 */, 32768 /* 0x8000 */}
#define DT_N_S_soc_S_ethernet_40028000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_reg_IDX_0 1073905664
#define DT_N_S_soc_S_ethernet_40028000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_reg_IDX_1 32768
#define DT_N_S_soc_S_ethernet_40028000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_interrupts {106 /* 0x6a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_ethernet_40028000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_interrupts_IDX_0 106
#define DT_N_S_soc_S_ethernet_40028000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_ethernet_40028000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_VAL_bus 136
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_VAL_bits 524288
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_NAME "stmmaceth"
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_stmmaceth_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_stmmaceth_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_stmmaceth_VAL_bus DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_VAL_bus
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_stmmaceth_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_stmmaceth_VAL_bits DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_VAL_bits
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_stmmaceth_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_VAL_bus 136
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_VAL_bits 1048576
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_NAME "mac-clk-tx"
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_tx_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_tx_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_tx_VAL_bus DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_VAL_bus
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_tx_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_tx_VAL_bits DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_VAL_bits
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_tx_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_VAL_bus 136
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_VAL_bits 2097152
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_NAME "mac-clk-rx"
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_rx_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_rx_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_rx_VAL_bus DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_VAL_bus
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_rx_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_rx_VAL_bits DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_VAL_bits
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_rx_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000, clocks, 0) \
	fn(DT_N_S_soc_S_ethernet_40028000, clocks, 1) \
	fn(DT_N_S_soc_S_ethernet_40028000, clocks, 2)
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_40028000, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_40028000, clocks, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_40028000, clocks, 2)
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, clocks, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, clocks, 2, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_40028000, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_40028000, clocks, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_40028000, clocks, 2, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_LEN 3
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names {"stmmaceth", "mac-clk-tx", "mac-clk-rx"}
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_0 "stmmaceth"
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_0_STRING_UNQUOTED stmmaceth
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_0_STRING_TOKEN stmmaceth
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_0_STRING_UPPER_TOKEN STMMACETH
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_1 "mac-clk-tx"
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_1_STRING_UNQUOTED mac-clk-tx
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_1_STRING_TOKEN mac_clk_tx
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_1_STRING_UPPER_TOKEN MAC_CLK_TX
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_2 "mac-clk-rx"
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_2_STRING_UNQUOTED mac-clk-rx
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_2_STRING_TOKEN mac_clk_rx
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_2_STRING_UPPER_TOKEN MAC_CLK_RX
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000, clock_names, 0) \
	fn(DT_N_S_soc_S_ethernet_40028000, clock_names, 1) \
	fn(DT_N_S_soc_S_ethernet_40028000, clock_names, 2)
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_40028000, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_40028000, clock_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_40028000, clock_names, 2)
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, clock_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, clock_names, 2, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_40028000, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_40028000, clock_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_40028000, clock_names, 2, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_LEN 3
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_3 DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_4 DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_4_PH DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_4_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_5 DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_5_PH DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_5_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_6 DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_6_PH DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_6_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 3) \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 4) \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 5) \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 6)
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 6)
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 6, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 6, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_LEN 7
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_names, 0)
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_names, 0)
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_zephyr_random_mac_address 0
#define DT_N_S_soc_S_ethernet_40028000_P_zephyr_random_mac_address_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_status "okay"
#define DT_N_S_soc_S_ethernet_40028000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_ethernet_40028000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ethernet_40028000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ethernet_40028000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_ethernet_40028000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_ethernet_40028000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000, status, 0)
#define DT_N_S_soc_S_ethernet_40028000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_40028000, status, 0)
#define DT_N_S_soc_S_ethernet_40028000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_40028000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_P_status_LEN 1
#define DT_N_S_soc_S_ethernet_40028000_P_status_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_compatible {"st,stm32h7-ethernet", "st,stm32-ethernet"}
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_IDX_0 "st,stm32h7-ethernet"
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32h7-ethernet
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_IDX_0_STRING_TOKEN st_stm32h7_ethernet
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32H7_ETHERNET
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_IDX_1 "st,stm32-ethernet"
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-ethernet
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_IDX_1_STRING_TOKEN st_stm32_ethernet
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_ETHERNET
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000, compatible, 0) \
	fn(DT_N_S_soc_S_ethernet_40028000, compatible, 1)
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_40028000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_40028000, compatible, 1)
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_40028000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_40028000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_LEN 2
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_ethernet_40028000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_wakeup_source 0
#define DT_N_S_soc_S_ethernet_40028000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ethernet_40028000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/eth_mdc_pc1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_PATH "/soc/pin-controller@42020000/eth_mdc_pc1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_FULL_NAME "eth_mdc_pc1"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_FULL_NAME_UNQUOTED eth_mdc_pc1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_FULL_NAME_TOKEN eth_mdc_pc1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_FULL_NAME_UPPER_TOKEN ETH_MDC_PC1

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_FOREACH_NODELABEL(fn) fn(eth_mdc_pc1)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_FOREACH_NODELABEL_VARGS(fn, ...) fn(eth_mdc_pc1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_ORD 131
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_ORD_STR_SORTABLE 00131

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_SUPPORTS_ORDS \
	133, /* /soc/ethernet@40028000/mdio */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_EXISTS 1
#define DT_N_NODELABEL_eth_mdc_pc1 DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_pinmux 1067
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_slew_rate_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_slew_rate_IDX_0_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/eth_mdio_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_PATH "/soc/pin-controller@42020000/eth_mdio_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_FULL_NAME "eth_mdio_pa2"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_FULL_NAME_UNQUOTED eth_mdio_pa2
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_FULL_NAME_TOKEN eth_mdio_pa2
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_FULL_NAME_UPPER_TOKEN ETH_MDIO_PA2

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_FOREACH_NODELABEL(fn) fn(eth_mdio_pa2)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_FOREACH_NODELABEL_VARGS(fn, ...) fn(eth_mdio_pa2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_ORD 132
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_ORD_STR_SORTABLE 00132

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_SUPPORTS_ORDS \
	133, /* /soc/ethernet@40028000/mdio */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_EXISTS 1
#define DT_N_NODELABEL_eth_mdio_pa2 DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_pinmux 75
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_slew_rate_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_slew_rate_IDX_0_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/ethernet@40028000/mdio
 *
 * Node identifier: DT_N_S_soc_S_ethernet_40028000_S_mdio
 *
 * Binding (compatible = st,stm32-mdio):
 *   $ZEPHYR_BASE\dts\bindings\mdio\st,stm32-mdio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_PATH "/soc/ethernet@40028000/mdio"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_FULL_NAME "mdio"
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_FULL_NAME_UNQUOTED mdio
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_FULL_NAME_TOKEN mdio
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_FULL_NAME_UPPER_TOKEN MDIO

/* Node parent (/soc/ethernet@40028000) identifier: */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_PARENT DT_N_S_soc_S_ethernet_40028000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_NODELABEL_NUM 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_FOREACH_NODELABEL(fn) fn(mdio)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_FOREACH_NODELABEL_VARGS(fn, ...) fn(mdio, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_CHILD_NUM 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_ORD 133
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_ORD_STR_SORTABLE 00133

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_REQUIRES_ORDS \
	130, /* /soc/ethernet@40028000 */ \
	131, /* /soc/pin-controller@42020000/eth_mdc_pc1 */ \
	132, /* /soc/pin-controller@42020000/eth_mdio_pa2 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_SUPPORTS_ORDS \
	134, /* /soc/ethernet@40028000/mdio/ethernet-phy@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_EXISTS 1
#define DT_N_INST_0_st_stm32_mdio DT_N_S_soc_S_ethernet_40028000_S_mdio
#define DT_N_NODELABEL_mdio       DT_N_S_soc_S_ethernet_40028000_S_mdio

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_REG_NUM 0
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_RANGES_NUM 0
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_IRQ_NUM 0
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_IRQ_LEVEL 0
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_COMPAT_MATCHES_st_stm32_mdio 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_COMPAT_MODEL_IDX_0 "stm32-mdio"
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_PINCTRL_NUM 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1

/* Generic property macros: */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, pinctrl_0, 1)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, pinctrl_0, 1)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, pinctrl_names, 0)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, pinctrl_names, 0)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_suppress_preamble 0
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_suppress_preamble_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_clock_frequency 2500000
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_status "okay"
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, status, 0)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, status, 0)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_status_LEN 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_status_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_compatible {"st,stm32-mdio"}
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_compatible_IDX_0 "st,stm32-mdio"
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-mdio
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_compatible_IDX_0_STRING_TOKEN st_stm32_mdio
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_MDIO
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, compatible, 0)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, compatible, 0)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_compatible_LEN 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_wakeup_source 0
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/ethernet@40028000/mdio/ethernet-phy@0
 *
 * Node identifier: DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0
 *
 * Binding (compatible = ethernet-phy):
 *   $ZEPHYR_BASE\dts\bindings\ethernet\ethernet-phy.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_PATH "/soc/ethernet@40028000/mdio/ethernet-phy@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_FULL_NAME "ethernet-phy@0"
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_FULL_NAME_UNQUOTED ethernet-phy@0
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_FULL_NAME_TOKEN ethernet_phy_0
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_FULL_NAME_UPPER_TOKEN ETHERNET_PHY_0

/* Node parent (/soc/ethernet@40028000/mdio) identifier: */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_PARENT DT_N_S_soc_S_ethernet_40028000_S_mdio

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_NODELABEL_NUM 0
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_CHILD_NUM 0
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_ORD 134
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_ORD_STR_SORTABLE 00134

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_REQUIRES_ORDS \
	133, /* /soc/ethernet@40028000/mdio */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_EXISTS 1
#define DT_N_INST_0_ethernet_phy DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0

/* Bus info (controller: '/soc/ethernet@40028000/mdio', type: '['mdio']') */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_BUS_mdio 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_BUS DT_N_S_soc_S_ethernet_40028000_S_mdio

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_REG_NUM 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_RANGES_NUM 0
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_IRQ_NUM 0
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_COMPAT_MATCHES_ethernet_phy 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_no_reset 0
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_no_reset_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_status "okay"
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0, status, 0)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0, status, 0)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_status_LEN 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_status_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_compatible {"ethernet-phy"}
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_compatible_IDX_0 "ethernet-phy"
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_compatible_IDX_0_STRING_UNQUOTED ethernet-phy
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_compatible_IDX_0_STRING_TOKEN ethernet_phy
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ETHERNET_PHY
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0, compatible, 0)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0, compatible, 0)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_compatible_LEN 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_wakeup_source 0
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000
 *
 * Binding (compatible = st,stm32-flash-controller):
 *   $ZEPHYR_BASE\dts\bindings\flash_controller\st,stm32-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_PATH "/soc/flash-controller@40022000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_FULL_NAME "flash-controller@40022000"
#define DT_N_S_soc_S_flash_controller_40022000_FULL_NAME_UNQUOTED flash-controller@40022000
#define DT_N_S_soc_S_flash_controller_40022000_FULL_NAME_TOKEN flash_controller_40022000
#define DT_N_S_soc_S_flash_controller_40022000_FULL_NAME_UPPER_TOKEN FLASH_CONTROLLER_40022000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40022000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_NODELABEL(fn) fn(flash)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_ORD 135
#define DT_N_S_soc_S_flash_controller_40022000_ORD_STR_SORTABLE 00135

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_SUPPORTS_ORDS \
	136, /* /soc/flash-controller@40022000/flash@8000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_EXISTS 1
#define DT_N_INST_0_st_stm32_flash_controller   DT_N_S_soc_S_flash_controller_40022000
#define DT_N_INST_0_st_stm32l5_flash_controller DT_N_S_soc_S_flash_controller_40022000
#define DT_N_NODELABEL_flash                    DT_N_S_soc_S_flash_controller_40022000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_REG_IDX_0_VAL_ADDRESS 1073881088 /* 0x40022000 */
#define DT_N_S_soc_S_flash_controller_40022000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_flash_controller_40022000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_VAL_irq 6
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_LEVEL 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MATCHES_st_stm32_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MODEL_IDX_0 "stm32-flash-controller"
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MATCHES_st_stm32l5_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MODEL_IDX_1 "stm32l5-flash-controller"
#define DT_N_S_soc_S_flash_controller_40022000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_P_st_rdp1_enable_byte 85
#define DT_N_S_soc_S_flash_controller_40022000_P_st_rdp1_enable_byte_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_reg {1073881088 /* 0x40022000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_IDX_0 1073881088
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible {"st,stm32-flash-controller", "st,stm32l5-flash-controller"}
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0 "st,stm32-flash-controller"
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-flash-controller
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0_STRING_TOKEN st_stm32_flash_controller
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1 "st,stm32l5-flash-controller"
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32l5-flash-controller
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1_STRING_TOKEN st_stm32l5_flash_controller
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32L5_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 0) \
	fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_LEN 2
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts {6 /* 0x6 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_IDX_0 6
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_40022000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40022000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_40022000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000
 *
 * Binding (compatible = st,stm32-nv-flash):
 *   $ZEPHYR_BASE\dts\bindings\mtd\st,stm32-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_PATH "/soc/flash-controller@40022000/flash@8000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FULL_NAME "flash@8000000"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FULL_NAME_UNQUOTED flash@8000000
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FULL_NAME_TOKEN flash_8000000
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FULL_NAME_UPPER_TOKEN FLASH_8000000

/* Node parent (/soc/flash-controller@40022000) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_PARENT DT_N_S_soc_S_flash_controller_40022000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_NODELABEL(fn) fn(flash0)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_ORD 136
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_ORD_STR_SORTABLE 00136

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REQUIRES_ORDS \
	135, /* /soc/flash-controller@40022000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_SUPPORTS_ORDS \
	137, /* /soc/flash-controller@40022000/flash@8000000/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_EXISTS 1
#define DT_N_INST_0_st_stm32_nv_flash DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000
#define DT_N_INST_0_soc_nv_flash      DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000
#define DT_N_NODELABEL_flash0         DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REG_IDX_0_VAL_ADDRESS 134217728 /* 0x8000000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REG_IDX_0_VAL_SIZE 2097152 /* 0x200000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_MATCHES_st_stm32_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_MODEL_IDX_0 "stm32-nv-flash"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_max_erase_time 5
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_max_erase_time_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_erase_block_size 8192
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_write_block_size 16
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible {"st,stm32-nv-flash", "soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0 "st,stm32-nv-flash"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-nv-flash
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0_STRING_TOKEN st_stm32_nv_flash
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_NV_FLASH
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_1 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_1_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_1_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_1_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 0) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_LEN 2
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg {134217728 /* 0x8000000 */, 2097152 /* 0x200000 */}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_IDX_0 134217728
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_IDX_1 2097152
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000/partitions
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE\dts\bindings\mtd\fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_PATH "/soc/flash-controller@40022000/flash@8000000/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FULL_NAME "partitions"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FULL_NAME_UNQUOTED partitions
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FULL_NAME_TOKEN partitions
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FULL_NAME_UPPER_TOKEN PARTITIONS

/* Node parent (/soc/flash-controller@40022000/flash@8000000) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_PARENT DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_NODELABEL_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_CHILD_NUM 4
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_CHILD_NUM_STATUS_OKAY 4
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_ORD 137
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_ORD_STR_SORTABLE 00137

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_REQUIRES_ORDS \
	136, /* /soc/flash-controller@40022000/flash@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_SUPPORTS_ORDS \
	138, /* /soc/flash-controller@40022000/flash@8000000/partitions/partition@0 */ \
	139, /* /soc/flash-controller@40022000/flash@8000000/partitions/partition@10000 */ \
	140, /* /soc/flash-controller@40022000/flash@8000000/partitions/partition@100000 */ \
	141, /* /soc/flash-controller@40022000/flash@8000000/partitions/partition@1f0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_PATH "/soc/flash-controller@40022000/flash@8000000/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FULL_NAME "partition@0"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FULL_NAME_UNQUOTED partition@0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FULL_NAME_TOKEN partition_0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FULL_NAME_UPPER_TOKEN PARTITION_0

/* Node parent (/soc/flash-controller@40022000/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_NODELABEL(fn) fn(boot_partition)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(boot_partition, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_ORD 138
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_ORD_STR_SORTABLE 00138

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_REQUIRES_ORDS \
	137, /* /soc/flash-controller@40022000/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_boot_partition DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label "mcuboot"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_STRING_UNQUOTED mcuboot
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_STRING_TOKEN mcuboot
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_STRING_UPPER_TOKEN MCUBOOT
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_IDX_0 "mcuboot"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_reg_IDX_1 65536
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000/partitions/partition@10000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_PATH "/soc/flash-controller@40022000/flash@8000000/partitions/partition@10000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FULL_NAME "partition@10000"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FULL_NAME_UNQUOTED partition@10000
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FULL_NAME_TOKEN partition_10000
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FULL_NAME_UPPER_TOKEN PARTITION_10000

/* Node parent (/soc/flash-controller@40022000/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_PARENT DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FOREACH_NODELABEL(fn) fn(slot0_partition)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot0_partition, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_ORD 139
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_ORD_STR_SORTABLE 00139

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_REQUIRES_ORDS \
	137, /* /soc/flash-controller@40022000/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_EXISTS 1
#define DT_N_NODELABEL_slot0_partition DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_REG_IDX_0_VAL_ADDRESS 65536 /* 0x10000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_REG_IDX_0_VAL_SIZE 983040 /* 0xf0000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_label "image-0"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_label_STRING_UNQUOTED image-0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_label_STRING_TOKEN image_0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_label_STRING_UPPER_TOKEN IMAGE_0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_label_IDX_0 "image-0"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000, label, 0)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000, label, 0)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_reg {65536 /* 0x10000 */, 983040 /* 0xf0000 */}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_reg_IDX_0 65536
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_reg_IDX_1 983040
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000/partitions/partition@100000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_PATH "/soc/flash-controller@40022000/flash@8000000/partitions/partition@100000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_FULL_NAME "partition@100000"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_FULL_NAME_UNQUOTED partition@100000
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_FULL_NAME_TOKEN partition_100000
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_FULL_NAME_UPPER_TOKEN PARTITION_100000

/* Node parent (/soc/flash-controller@40022000/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_PARENT DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_FOREACH_NODELABEL(fn) fn(slot1_partition)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot1_partition, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_ORD 140
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_ORD_STR_SORTABLE 00140

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_REQUIRES_ORDS \
	137, /* /soc/flash-controller@40022000/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_EXISTS 1
#define DT_N_NODELABEL_slot1_partition DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_REG_IDX_0_VAL_ADDRESS 1048576 /* 0x100000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_REG_IDX_0_VAL_SIZE 983040 /* 0xf0000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_PARTITION_ID 2

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_P_label "image-1"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_P_label_STRING_UNQUOTED image-1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_P_label_STRING_TOKEN image_1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_P_label_STRING_UPPER_TOKEN IMAGE_1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_P_label_IDX_0 "image-1"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000, label, 0)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000, label, 0)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_P_reg {1048576 /* 0x100000 */, 983040 /* 0xf0000 */}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_P_reg_IDX_0 1048576
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_P_reg_IDX_1 983040
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000/partitions/partition@1f0000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_PATH "/soc/flash-controller@40022000/flash@8000000/partitions/partition@1f0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_FULL_NAME "partition@1f0000"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_FULL_NAME_UNQUOTED partition@1f0000
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_FULL_NAME_TOKEN partition_1f0000
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_FULL_NAME_UPPER_TOKEN PARTITION_1F0000

/* Node parent (/soc/flash-controller@40022000/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_PARENT DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_FOREACH_NODELABEL(fn) fn(storage_partition)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(storage_partition, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_ORD 141
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_ORD_STR_SORTABLE 00141

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_REQUIRES_ORDS \
	137, /* /soc/flash-controller@40022000/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_EXISTS 1
#define DT_N_NODELABEL_storage_partition DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_REG_IDX_0_VAL_ADDRESS 2031616 /* 0x1f0000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_PARTITION_ID 3

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_P_label "storage"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_P_label_STRING_UNQUOTED storage
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_P_label_STRING_TOKEN storage
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_P_label_STRING_UPPER_TOKEN STORAGE
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_P_label_IDX_0 "storage"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000, label, 0)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000, label, 0)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_P_reg {2031616 /* 0x1f0000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_P_reg_IDX_0 2031616
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/gpio@42020000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_PATH "/soc/pin-controller@42020000/gpio@42020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FULL_NAME "gpio@42020000"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FULL_NAME_UNQUOTED gpio@42020000
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FULL_NAME_TOKEN gpio_42020000
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FULL_NAME_UPPER_TOKEN GPIO_42020000

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FOREACH_NODELABEL(fn) fn(gpioa)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpioa, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_ORD 142
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_ORD_STR_SORTABLE 00142

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_REQUIRES_ORDS \
	9, /* /soc/rcc@44020c00 */ \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_EXISTS 1
#define DT_N_INST_0_st_stm32_gpio DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000
#define DT_N_NODELABEL_gpioa      DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_REG_IDX_0_VAL_ADDRESS 1107427328 /* 0x42020000 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_reg {1107427328 /* 0x42020000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_reg_IDX_0 1107427328
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/gpio@42020400
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_PATH "/soc/pin-controller@42020000/gpio@42020400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FULL_NAME "gpio@42020400"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FULL_NAME_UNQUOTED gpio@42020400
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FULL_NAME_TOKEN gpio_42020400
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FULL_NAME_UPPER_TOKEN GPIO_42020400

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FOREACH_NODELABEL(fn) fn(gpiob)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpiob, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_ORD 143
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_ORD_STR_SORTABLE 00143

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_REQUIRES_ORDS \
	9, /* /soc/rcc@44020c00 */ \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_EXISTS 1
#define DT_N_INST_1_st_stm32_gpio DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400
#define DT_N_NODELABEL_gpiob      DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_REG_IDX_0_VAL_ADDRESS 1107428352 /* 0x42020400 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_reg {1107428352 /* 0x42020400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_reg_IDX_0 1107428352
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/gpio@42021000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_PATH "/soc/pin-controller@42020000/gpio@42021000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FULL_NAME "gpio@42021000"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FULL_NAME_UNQUOTED gpio@42021000
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FULL_NAME_TOKEN gpio_42021000
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FULL_NAME_UPPER_TOKEN GPIO_42021000

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FOREACH_NODELABEL(fn) fn(gpioe)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpioe, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_ORD 144
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_ORD_STR_SORTABLE 00144

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_REQUIRES_ORDS \
	9, /* /soc/rcc@44020c00 */ \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_EXISTS 1
#define DT_N_INST_5_st_stm32_gpio DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000
#define DT_N_NODELABEL_gpioe      DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_REG_IDX_0_VAL_ADDRESS 1107431424 /* 0x42021000 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_reg {1107431424 /* 0x42021000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_reg_IDX_0 1107431424
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_clocks_IDX_0_VAL_bits 16
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/gpio@42021c00
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_PATH "/soc/pin-controller@42020000/gpio@42021c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FULL_NAME "gpio@42021c00"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FULL_NAME_UNQUOTED gpio@42021c00
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FULL_NAME_TOKEN gpio_42021c00
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FULL_NAME_UPPER_TOKEN GPIO_42021C00

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FOREACH_NODELABEL(fn) fn(gpioh)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpioh, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_ORD 145
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_ORD_STR_SORTABLE 00145

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_REQUIRES_ORDS \
	9, /* /soc/rcc@44020c00 */ \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_EXISTS 1
#define DT_N_INST_4_st_stm32_gpio DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00
#define DT_N_NODELABEL_gpioh      DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_REG_IDX_0_VAL_ADDRESS 1107434496 /* 0x42021c00 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_reg {1107434496 /* 0x42021c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_reg_IDX_0 1107434496
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_clocks_IDX_0_VAL_bits 128
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/gpio@42022000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_PATH "/soc/pin-controller@42020000/gpio@42022000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FULL_NAME "gpio@42022000"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FULL_NAME_UNQUOTED gpio@42022000
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FULL_NAME_TOKEN gpio_42022000
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FULL_NAME_UPPER_TOKEN GPIO_42022000

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FOREACH_NODELABEL(fn) fn(gpioi)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpioi, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_ORD 146
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_ORD_STR_SORTABLE 00146

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_REQUIRES_ORDS \
	9, /* /soc/rcc@44020c00 */ \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_EXISTS 1
#define DT_N_INST_8_st_stm32_gpio DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000
#define DT_N_NODELABEL_gpioi      DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_REG_IDX_0_VAL_ADDRESS 1107435520 /* 0x42022000 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_reg {1107435520 /* 0x42022000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_reg_IDX_0 1107435520
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_clocks_IDX_0_VAL_bits 256
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_ngpios 16
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_PATH "/soc/timers@40000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_FULL_NAME "timers@40000000"
#define DT_N_S_soc_S_timers_40000000_FULL_NAME_UNQUOTED timers@40000000
#define DT_N_S_soc_S_timers_40000000_FULL_NAME_TOKEN timers_40000000
#define DT_N_S_soc_S_timers_40000000_FULL_NAME_UPPER_TOKEN TIMERS_40000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000000_CHILD_IDX 20

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40000000_FOREACH_NODELABEL(fn) fn(timers2)
#define DT_N_S_soc_S_timers_40000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000000_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm) fn(DT_N_S_soc_S_timers_40000000_S_counter)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000000_S_counter)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_ORD 147
#define DT_N_S_soc_S_timers_40000000_ORD_STR_SORTABLE 00147

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_SUPPORTS_ORDS \
	148, /* /soc/timers@40000000/counter */ \
	149, /* /soc/timers@40000000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_EXISTS 1
#define DT_N_INST_2_st_stm32_timers DT_N_S_soc_S_timers_40000000
#define DT_N_NODELABEL_timers2      DT_N_S_soc_S_timers_40000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000000_REG_NUM 1
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_VAL_ADDRESS 1073741824 /* 0x40000000 */
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq 45
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40000000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40000000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40000000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_P_reg {1073741824 /* 0x40000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_0 1073741824
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, clocks, 0)
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, clocks, 0)
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_timers_40000000_P_resets_IDX_0_VAL_id 3712
#define DT_N_S_soc_S_timers_40000000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, resets, 0)
#define DT_N_S_soc_S_timers_40000000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, resets, 0)
#define DT_N_S_soc_S_timers_40000000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000000_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_status "disabled"
#define DT_N_S_soc_S_timers_40000000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, status, 0)
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, status, 0)
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts {45 /* 0x2d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_0 45
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_S_counter_PATH "/soc/timers@40000000/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_timers_40000000_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_timers_40000000_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_timers_40000000_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/timers@40000000) identifier: */
#define DT_N_S_soc_S_timers_40000000_S_counter_PARENT DT_N_S_soc_S_timers_40000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000000_S_counter_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000000_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000000_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_S_counter_ORD 148
#define DT_N_S_soc_S_timers_40000000_S_counter_ORD_STR_SORTABLE 00148

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_S_counter_REQUIRES_ORDS \
	147, /* /soc/timers@40000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_S_counter_EXISTS 1
#define DT_N_INST_0_st_stm32_counter DT_N_S_soc_S_timers_40000000_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000000_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000000_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000000_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40000000_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000000_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40000000_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000000_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000000_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000000_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000000_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PATH "/soc/timers@40000000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timers_40000000_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timers_40000000_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timers_40000000_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timers@40000000) identifier: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PARENT DT_N_S_soc_S_timers_40000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000000_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_ORD 149
#define DT_N_S_soc_S_timers_40000000_S_pwm_ORD_STR_SORTABLE 00149

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_REQUIRES_ORDS \
	147, /* /soc/timers@40000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_EXISTS 1
#define DT_N_INST_2_st_stm32_pwm DT_N_S_soc_S_timers_40000000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40000000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_S_counter_PATH "/soc/timers@40000400/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_timers_40000400_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_timers_40000400_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_timers_40000400_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/timers@40000400) identifier: */
#define DT_N_S_soc_S_timers_40000400_S_counter_PARENT DT_N_S_soc_S_timers_40000400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000400_S_counter_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000400_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000400_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_S_counter_ORD 150
#define DT_N_S_soc_S_timers_40000400_S_counter_ORD_STR_SORTABLE 00150

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_S_counter_REQUIRES_ORDS \
	53, /* /soc/timers@40000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_S_counter_EXISTS 1
#define DT_N_INST_1_st_stm32_counter DT_N_S_soc_S_timers_40000400_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000400_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000400_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40000400_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000400_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000400_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000400_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000400_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000800
 *
 * Node identifier: DT_N_S_soc_S_timers_40000800
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000800_PATH "/soc/timers@40000800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000800_FULL_NAME "timers@40000800"
#define DT_N_S_soc_S_timers_40000800_FULL_NAME_UNQUOTED timers@40000800
#define DT_N_S_soc_S_timers_40000800_FULL_NAME_TOKEN timers_40000800
#define DT_N_S_soc_S_timers_40000800_FULL_NAME_UPPER_TOKEN TIMERS_40000800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000800_CHILD_IDX 62

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000800_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40000800_FOREACH_NODELABEL(fn) fn(timers4)
#define DT_N_S_soc_S_timers_40000800_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers4, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000800_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40000800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm) fn(DT_N_S_soc_S_timers_40000800_S_counter)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000800_S_counter)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000800_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000800_ORD 151
#define DT_N_S_soc_S_timers_40000800_ORD_STR_SORTABLE 00151

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000800_SUPPORTS_ORDS \
	152, /* /soc/timers@40000800/counter */ \
	153, /* /soc/timers@40000800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000800_EXISTS 1
#define DT_N_INST_5_st_stm32_timers DT_N_S_soc_S_timers_40000800
#define DT_N_NODELABEL_timers4      DT_N_S_soc_S_timers_40000800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000800_REG_NUM 1
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_VAL_ADDRESS 1073743872 /* 0x40000800 */
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000800_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq 47
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40000800_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40000800_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40000800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000800_P_reg {1073743872 /* 0x40000800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_0 1073743872
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bits 4
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, clocks, 0)
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, clocks, 0)
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_timers_40000800_P_resets_IDX_0_VAL_id 3714
#define DT_N_S_soc_S_timers_40000800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, resets, 0)
#define DT_N_S_soc_S_timers_40000800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, resets, 0)
#define DT_N_S_soc_S_timers_40000800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000800_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_status "disabled"
#define DT_N_S_soc_S_timers_40000800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, status, 0)
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, status, 0)
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts {47 /* 0x2f */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_0 47
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000800/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40000800_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000800_S_counter_PATH "/soc/timers@40000800/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000800_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_timers_40000800_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_timers_40000800_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_timers_40000800_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/timers@40000800) identifier: */
#define DT_N_S_soc_S_timers_40000800_S_counter_PARENT DT_N_S_soc_S_timers_40000800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000800_S_counter_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000800_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000800_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000800_S_counter_ORD 152
#define DT_N_S_soc_S_timers_40000800_S_counter_ORD_STR_SORTABLE 00152

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000800_S_counter_REQUIRES_ORDS \
	151, /* /soc/timers@40000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000800_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000800_S_counter_EXISTS 1
#define DT_N_INST_4_st_stm32_counter DT_N_S_soc_S_timers_40000800_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000800_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000800_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000800_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40000800_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000800_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40000800_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000800_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000800_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000800_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000800_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000800/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000800_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_PATH "/soc/timers@40000800/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timers_40000800_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timers_40000800_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timers_40000800_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timers@40000800) identifier: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_PARENT DT_N_S_soc_S_timers_40000800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000800_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_ORD 153
#define DT_N_S_soc_S_timers_40000800_S_pwm_ORD_STR_SORTABLE 00153

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_REQUIRES_ORDS \
	151, /* /soc/timers@40000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_EXISTS 1
#define DT_N_INST_5_st_stm32_pwm DT_N_S_soc_S_timers_40000800_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40000800_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000c00
 *
 * Node identifier: DT_N_S_soc_S_timers_40000c00
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000c00_PATH "/soc/timers@40000c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000c00_FULL_NAME "timers@40000c00"
#define DT_N_S_soc_S_timers_40000c00_FULL_NAME_UNQUOTED timers@40000c00
#define DT_N_S_soc_S_timers_40000c00_FULL_NAME_TOKEN timers_40000c00
#define DT_N_S_soc_S_timers_40000c00_FULL_NAME_UPPER_TOKEN TIMERS_40000C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000c00_CHILD_IDX 63

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40000c00_FOREACH_NODELABEL(fn) fn(timers5)
#define DT_N_S_soc_S_timers_40000c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers5, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000c00_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40000c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000c00_S_pwm) fn(DT_N_S_soc_S_timers_40000c00_S_counter)
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000c00_S_counter)
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000c00_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000c00_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000c00_ORD 154
#define DT_N_S_soc_S_timers_40000c00_ORD_STR_SORTABLE 00154

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000c00_SUPPORTS_ORDS \
	155, /* /soc/timers@40000c00/counter */ \
	156, /* /soc/timers@40000c00/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000c00_EXISTS 1
#define DT_N_INST_6_st_stm32_timers DT_N_S_soc_S_timers_40000c00
#define DT_N_NODELABEL_timers5      DT_N_S_soc_S_timers_40000c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000c00_REG_NUM 1
#define DT_N_S_soc_S_timers_40000c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_REG_IDX_0_VAL_ADDRESS 1073744896 /* 0x40000c00 */
#define DT_N_S_soc_S_timers_40000c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000c00_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000c00_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_irq 48
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40000c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40000c00_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40000c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000c00_P_reg {1073744896 /* 0x40000c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_0 1073744896
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bits 8
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, clocks, 0)
#define DT_N_S_soc_S_timers_40000c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00, clocks, 0)
#define DT_N_S_soc_S_timers_40000c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_timers_40000c00_P_resets_IDX_0_VAL_id 3715
#define DT_N_S_soc_S_timers_40000c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, resets, 0)
#define DT_N_S_soc_S_timers_40000c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00, resets, 0)
#define DT_N_S_soc_S_timers_40000c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000c00_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_status "disabled"
#define DT_N_S_soc_S_timers_40000c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000c00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, status, 0)
#define DT_N_S_soc_S_timers_40000c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00, status, 0)
#define DT_N_S_soc_S_timers_40000c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40000c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupts {48 /* 0x30 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_0 48
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000c00/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40000c00_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_PATH "/soc/timers@40000c00/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_timers_40000c00_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_timers_40000c00_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_timers_40000c00_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/timers@40000c00) identifier: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_PARENT DT_N_S_soc_S_timers_40000c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000c00_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_ORD 155
#define DT_N_S_soc_S_timers_40000c00_S_counter_ORD_STR_SORTABLE 00155

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_REQUIRES_ORDS \
	154, /* /soc/timers@40000c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_EXISTS 1
#define DT_N_INST_5_st_stm32_counter DT_N_S_soc_S_timers_40000c00_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000c00_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40000c00_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000c00/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000c00_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_PATH "/soc/timers@40000c00/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timers@40000c00) identifier: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_PARENT DT_N_S_soc_S_timers_40000c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_ORD 156
#define DT_N_S_soc_S_timers_40000c00_S_pwm_ORD_STR_SORTABLE 00156

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_REQUIRES_ORDS \
	154, /* /soc/timers@40000c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_EXISTS 1
#define DT_N_INST_6_st_stm32_pwm DT_N_S_soc_S_timers_40000c00_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001000
 *
 * Node identifier: DT_N_S_soc_S_timers_40001000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001000_PATH "/soc/timers@40001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001000_FULL_NAME "timers@40001000"
#define DT_N_S_soc_S_timers_40001000_FULL_NAME_UNQUOTED timers@40001000
#define DT_N_S_soc_S_timers_40001000_FULL_NAME_TOKEN timers_40001000
#define DT_N_S_soc_S_timers_40001000_FULL_NAME_UPPER_TOKEN TIMERS_40001000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001000_CHILD_IDX 22

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40001000_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40001000_FOREACH_NODELABEL(fn) fn(timers6)
#define DT_N_S_soc_S_timers_40001000_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers6, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001000_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40001000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40001000_S_pwm) fn(DT_N_S_soc_S_timers_40001000_S_counter)
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001000_S_counter)
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001000_ORD 157
#define DT_N_S_soc_S_timers_40001000_ORD_STR_SORTABLE 00157

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001000_SUPPORTS_ORDS \
	158, /* /soc/timers@40001000/counter */ \
	159, /* /soc/timers@40001000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001000_EXISTS 1
#define DT_N_INST_3_st_stm32_timers DT_N_S_soc_S_timers_40001000
#define DT_N_NODELABEL_timers6      DT_N_S_soc_S_timers_40001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001000_REG_NUM 1
#define DT_N_S_soc_S_timers_40001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_REG_IDX_0_VAL_ADDRESS 1073745920 /* 0x40001000 */
#define DT_N_S_soc_S_timers_40001000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40001000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_irq 49
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40001000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40001000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40001000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40001000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001000_P_reg {1073745920 /* 0x40001000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_0 1073745920
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bits 16
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, clocks, 0)
#define DT_N_S_soc_S_timers_40001000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, clocks, 0)
#define DT_N_S_soc_S_timers_40001000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_timers_40001000_P_resets_IDX_0_VAL_id 3716
#define DT_N_S_soc_S_timers_40001000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, resets, 0)
#define DT_N_S_soc_S_timers_40001000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, resets, 0)
#define DT_N_S_soc_S_timers_40001000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40001000_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_status "disabled"
#define DT_N_S_soc_S_timers_40001000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40001000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40001000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, status, 0)
#define DT_N_S_soc_S_timers_40001000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, status, 0)
#define DT_N_S_soc_S_timers_40001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_status_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupts {49 /* 0x31 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_0 49
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40001000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40001000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001000/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40001000_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001000_S_counter_PATH "/soc/timers@40001000/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001000_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_timers_40001000_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_timers_40001000_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_timers_40001000_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/timers@40001000) identifier: */
#define DT_N_S_soc_S_timers_40001000_S_counter_PARENT DT_N_S_soc_S_timers_40001000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001000_S_counter_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40001000_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001000_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001000_S_counter_ORD 158
#define DT_N_S_soc_S_timers_40001000_S_counter_ORD_STR_SORTABLE 00158

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001000_S_counter_REQUIRES_ORDS \
	157, /* /soc/timers@40001000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001000_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001000_S_counter_EXISTS 1
#define DT_N_INST_2_st_stm32_counter DT_N_S_soc_S_timers_40001000_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001000_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001000_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40001000_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40001000_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001000_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40001000_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001000_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40001000_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001000_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40001000_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40001000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_PATH "/soc/timers@40001000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timers_40001000_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timers_40001000_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timers_40001000_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timers@40001000) identifier: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_PARENT DT_N_S_soc_S_timers_40001000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001000_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_ORD 159
#define DT_N_S_soc_S_timers_40001000_S_pwm_ORD_STR_SORTABLE 00159

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_REQUIRES_ORDS \
	157, /* /soc/timers@40001000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_EXISTS 1
#define DT_N_INST_3_st_stm32_pwm DT_N_S_soc_S_timers_40001000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40001000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001400
 *
 * Node identifier: DT_N_S_soc_S_timers_40001400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001400_PATH "/soc/timers@40001400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001400_FULL_NAME "timers@40001400"
#define DT_N_S_soc_S_timers_40001400_FULL_NAME_UNQUOTED timers@40001400
#define DT_N_S_soc_S_timers_40001400_FULL_NAME_TOKEN timers_40001400
#define DT_N_S_soc_S_timers_40001400_FULL_NAME_UPPER_TOKEN TIMERS_40001400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40001400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001400_CHILD_IDX 23

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40001400_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40001400_FOREACH_NODELABEL(fn) fn(timers7)
#define DT_N_S_soc_S_timers_40001400_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers7, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001400_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40001400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40001400_S_pwm) fn(DT_N_S_soc_S_timers_40001400_S_counter)
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001400_S_counter)
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001400_ORD 160
#define DT_N_S_soc_S_timers_40001400_ORD_STR_SORTABLE 00160

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001400_SUPPORTS_ORDS \
	161, /* /soc/timers@40001400/counter */ \
	162, /* /soc/timers@40001400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001400_EXISTS 1
#define DT_N_INST_4_st_stm32_timers DT_N_S_soc_S_timers_40001400
#define DT_N_NODELABEL_timers7      DT_N_S_soc_S_timers_40001400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001400_REG_NUM 1
#define DT_N_S_soc_S_timers_40001400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_REG_IDX_0_VAL_ADDRESS 1073746944 /* 0x40001400 */
#define DT_N_S_soc_S_timers_40001400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40001400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_irq 50
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40001400_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40001400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40001400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40001400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001400_P_reg {1073746944 /* 0x40001400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_0 1073746944
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40001400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, clocks, 0)
#define DT_N_S_soc_S_timers_40001400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400, clocks, 0)
#define DT_N_S_soc_S_timers_40001400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_timers_40001400_P_resets_IDX_0_VAL_id 3717
#define DT_N_S_soc_S_timers_40001400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, resets, 0)
#define DT_N_S_soc_S_timers_40001400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400, resets, 0)
#define DT_N_S_soc_S_timers_40001400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_st_countermode 0
#define DT_N_S_soc_S_timers_40001400_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_status "disabled"
#define DT_N_S_soc_S_timers_40001400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40001400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40001400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, status, 0)
#define DT_N_S_soc_S_timers_40001400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400, status, 0)
#define DT_N_S_soc_S_timers_40001400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_status_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40001400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40001400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40001400_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40001400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40001400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, compatible, 0)
#define DT_N_S_soc_S_timers_40001400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400, compatible, 0)
#define DT_N_S_soc_S_timers_40001400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupts {50 /* 0x32 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_0 50
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40001400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40001400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40001400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001400/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40001400_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001400_S_counter_PATH "/soc/timers@40001400/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001400_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_timers_40001400_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_timers_40001400_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_timers_40001400_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/timers@40001400) identifier: */
#define DT_N_S_soc_S_timers_40001400_S_counter_PARENT DT_N_S_soc_S_timers_40001400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001400_S_counter_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40001400_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001400_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001400_S_counter_ORD 161
#define DT_N_S_soc_S_timers_40001400_S_counter_ORD_STR_SORTABLE 00161

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001400_S_counter_REQUIRES_ORDS \
	160, /* /soc/timers@40001400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001400_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001400_S_counter_EXISTS 1
#define DT_N_INST_3_st_stm32_counter DT_N_S_soc_S_timers_40001400_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001400_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001400_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40001400_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40001400_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001400_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40001400_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001400_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40001400_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001400_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40001400_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40001400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_PATH "/soc/timers@40001400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timers_40001400_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timers_40001400_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timers_40001400_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timers@40001400) identifier: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_PARENT DT_N_S_soc_S_timers_40001400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40001400_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001400_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40001400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001400_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001400_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40001400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_ORD 162
#define DT_N_S_soc_S_timers_40001400_S_pwm_ORD_STR_SORTABLE 00162

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_REQUIRES_ORDS \
	160, /* /soc/timers@40001400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_EXISTS 1
#define DT_N_INST_4_st_stm32_pwm DT_N_S_soc_S_timers_40001400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40001400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001400_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40001400_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001800
 *
 * Node identifier: DT_N_S_soc_S_timers_40001800
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001800_PATH "/soc/timers@40001800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001800_FULL_NAME "timers@40001800"
#define DT_N_S_soc_S_timers_40001800_FULL_NAME_UNQUOTED timers@40001800
#define DT_N_S_soc_S_timers_40001800_FULL_NAME_TOKEN timers_40001800
#define DT_N_S_soc_S_timers_40001800_FULL_NAME_UPPER_TOKEN TIMERS_40001800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40001800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001800_CHILD_IDX 64

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40001800_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40001800_FOREACH_NODELABEL(fn) fn(timers12)
#define DT_N_S_soc_S_timers_40001800_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers12, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001800_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40001800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40001800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40001800_S_pwm) fn(DT_N_S_soc_S_timers_40001800_S_counter)
#define DT_N_S_soc_S_timers_40001800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001800_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001800_S_counter)
#define DT_N_S_soc_S_timers_40001800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001800_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001800_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001800_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001800_ORD 163
#define DT_N_S_soc_S_timers_40001800_ORD_STR_SORTABLE 00163

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001800_SUPPORTS_ORDS \
	164, /* /soc/timers@40001800/counter */ \
	165, /* /soc/timers@40001800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001800_EXISTS 1
#define DT_N_INST_7_st_stm32_timers DT_N_S_soc_S_timers_40001800
#define DT_N_NODELABEL_timers12     DT_N_S_soc_S_timers_40001800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001800_REG_NUM 1
#define DT_N_S_soc_S_timers_40001800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_REG_IDX_0_VAL_ADDRESS 1073747968 /* 0x40001800 */
#define DT_N_S_soc_S_timers_40001800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40001800_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_VAL_irq 120
#define DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40001800_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40001800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40001800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40001800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40001800_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40001800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40001800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001800_P_reg {1073747968 /* 0x40001800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40001800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_reg_IDX_0 1073747968
#define DT_N_S_soc_S_timers_40001800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40001800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_timers_40001800_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_timers_40001800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_clocks_IDX_0_VAL_bits 64
#define DT_N_S_soc_S_timers_40001800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800, clocks, 0)
#define DT_N_S_soc_S_timers_40001800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001800, clocks, 0)
#define DT_N_S_soc_S_timers_40001800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40001800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_timers_40001800_P_resets_IDX_0_VAL_id 3718
#define DT_N_S_soc_S_timers_40001800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800, resets, 0)
#define DT_N_S_soc_S_timers_40001800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001800, resets, 0)
#define DT_N_S_soc_S_timers_40001800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40001800_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_st_countermode 0
#define DT_N_S_soc_S_timers_40001800_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_status "disabled"
#define DT_N_S_soc_S_timers_40001800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40001800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40001800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800, status, 0)
#define DT_N_S_soc_S_timers_40001800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001800, status, 0)
#define DT_N_S_soc_S_timers_40001800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_P_status_LEN 1
#define DT_N_S_soc_S_timers_40001800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40001800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40001800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40001800_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40001800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40001800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800, compatible, 0)
#define DT_N_S_soc_S_timers_40001800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001800, compatible, 0)
#define DT_N_S_soc_S_timers_40001800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_interrupts {120 /* 0x78 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40001800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_interrupts_IDX_0 120
#define DT_N_S_soc_S_timers_40001800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40001800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40001800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40001800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001800/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40001800_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001800_S_counter_PATH "/soc/timers@40001800/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001800_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_timers_40001800_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_timers_40001800_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_timers_40001800_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/timers@40001800) identifier: */
#define DT_N_S_soc_S_timers_40001800_S_counter_PARENT DT_N_S_soc_S_timers_40001800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001800_S_counter_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40001800_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40001800_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40001800_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001800_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40001800_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40001800_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001800_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001800_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001800_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40001800_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001800_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001800_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001800_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001800_S_counter_ORD 164
#define DT_N_S_soc_S_timers_40001800_S_counter_ORD_STR_SORTABLE 00164

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001800_S_counter_REQUIRES_ORDS \
	163, /* /soc/timers@40001800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001800_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001800_S_counter_EXISTS 1
#define DT_N_INST_6_st_stm32_counter DT_N_S_soc_S_timers_40001800_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001800_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40001800_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001800_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001800_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001800_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40001800_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40001800_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001800_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40001800_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001800_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001800_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40001800_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40001800_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001800_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001800_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40001800_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_counter_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001800_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40001800_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001800_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40001800_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001800_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001800_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40001800_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40001800_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40001800_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40001800_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40001800_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40001800_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40001800_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40001800_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001800_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40001800_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001800_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40001800_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001800/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40001800_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_PATH "/soc/timers@40001800/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timers_40001800_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timers_40001800_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timers_40001800_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timers@40001800) identifier: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_PARENT DT_N_S_soc_S_timers_40001800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40001800_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40001800_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001800_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40001800_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40001800_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001800_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001800_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001800_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40001800_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001800_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_ORD 165
#define DT_N_S_soc_S_timers_40001800_S_pwm_ORD_STR_SORTABLE 00165

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_REQUIRES_ORDS \
	163, /* /soc/timers@40001800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_EXISTS 1
#define DT_N_INST_7_st_stm32_pwm DT_N_S_soc_S_timers_40001800_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40001800_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001800_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001800_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40001800_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001800_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40001800_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001c00
 *
 * Node identifier: DT_N_S_soc_S_timers_40001c00
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001c00_PATH "/soc/timers@40001c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001c00_FULL_NAME "timers@40001c00"
#define DT_N_S_soc_S_timers_40001c00_FULL_NAME_UNQUOTED timers@40001c00
#define DT_N_S_soc_S_timers_40001c00_FULL_NAME_TOKEN timers_40001c00
#define DT_N_S_soc_S_timers_40001c00_FULL_NAME_UPPER_TOKEN TIMERS_40001C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40001c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001c00_CHILD_IDX 65

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40001c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40001c00_FOREACH_NODELABEL(fn) fn(timers13)
#define DT_N_S_soc_S_timers_40001c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers13, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001c00_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40001c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40001c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40001c00_S_pwm) fn(DT_N_S_soc_S_timers_40001c00_S_counter)
#define DT_N_S_soc_S_timers_40001c00_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001c00_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001c00_S_counter)
#define DT_N_S_soc_S_timers_40001c00_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001c00_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001c00_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001c00_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001c00_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001c00_ORD 166
#define DT_N_S_soc_S_timers_40001c00_ORD_STR_SORTABLE 00166

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001c00_SUPPORTS_ORDS \
	167, /* /soc/timers@40001c00/counter */ \
	168, /* /soc/timers@40001c00/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001c00_EXISTS 1
#define DT_N_INST_8_st_stm32_timers DT_N_S_soc_S_timers_40001c00
#define DT_N_NODELABEL_timers13     DT_N_S_soc_S_timers_40001c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001c00_REG_NUM 1
#define DT_N_S_soc_S_timers_40001c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_REG_IDX_0_VAL_ADDRESS 1073748992 /* 0x40001c00 */
#define DT_N_S_soc_S_timers_40001c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40001c00_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001c00_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_VAL_irq 121
#define DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40001c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40001c00_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40001c00_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40001c00_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40001c00_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40001c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40001c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001c00_P_reg {1073748992 /* 0x40001c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40001c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_reg_IDX_0 1073748992
#define DT_N_S_soc_S_timers_40001c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40001c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_timers_40001c00_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_timers_40001c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_clocks_IDX_0_VAL_bits 128
#define DT_N_S_soc_S_timers_40001c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00, clocks, 0)
#define DT_N_S_soc_S_timers_40001c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001c00, clocks, 0)
#define DT_N_S_soc_S_timers_40001c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40001c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_timers_40001c00_P_resets_IDX_0_VAL_id 3719
#define DT_N_S_soc_S_timers_40001c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00, resets, 0)
#define DT_N_S_soc_S_timers_40001c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001c00, resets, 0)
#define DT_N_S_soc_S_timers_40001c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40001c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_st_countermode 0
#define DT_N_S_soc_S_timers_40001c00_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_status "disabled"
#define DT_N_S_soc_S_timers_40001c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40001c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40001c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001c00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00, status, 0)
#define DT_N_S_soc_S_timers_40001c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001c00, status, 0)
#define DT_N_S_soc_S_timers_40001c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_P_status_LEN 1
#define DT_N_S_soc_S_timers_40001c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40001c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40001c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40001c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40001c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40001c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00, compatible, 0)
#define DT_N_S_soc_S_timers_40001c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001c00, compatible, 0)
#define DT_N_S_soc_S_timers_40001c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_interrupts {121 /* 0x79 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40001c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_interrupts_IDX_0 121
#define DT_N_S_soc_S_timers_40001c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40001c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40001c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40001c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001c00/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40001c00_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001c00_S_counter_PATH "/soc/timers@40001c00/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001c00_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_timers_40001c00_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_timers_40001c00_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_timers_40001c00_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/timers@40001c00) identifier: */
#define DT_N_S_soc_S_timers_40001c00_S_counter_PARENT DT_N_S_soc_S_timers_40001c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001c00_S_counter_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40001c00_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40001c00_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40001c00_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001c00_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40001c00_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40001c00_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001c00_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001c00_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001c00_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40001c00_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001c00_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001c00_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001c00_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001c00_S_counter_ORD 167
#define DT_N_S_soc_S_timers_40001c00_S_counter_ORD_STR_SORTABLE 00167

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001c00_S_counter_REQUIRES_ORDS \
	166, /* /soc/timers@40001c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001c00_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001c00_S_counter_EXISTS 1
#define DT_N_INST_7_st_stm32_counter DT_N_S_soc_S_timers_40001c00_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001c00_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40001c00_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001c00_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001c00_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001c00_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40001c00_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40001c00_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001c00_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40001c00_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001c00_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001c00_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001c00_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001c00_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001c00_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001c00_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001c00_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001c00/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40001c00_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_PATH "/soc/timers@40001c00/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timers_40001c00_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timers_40001c00_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timers_40001c00_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timers@40001c00) identifier: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_PARENT DT_N_S_soc_S_timers_40001c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40001c00_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40001c00_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40001c00_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40001c00_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001c00_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001c00_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001c00_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40001c00_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_ORD 168
#define DT_N_S_soc_S_timers_40001c00_S_pwm_ORD_STR_SORTABLE 00168

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_REQUIRES_ORDS \
	166, /* /soc/timers@40001c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_EXISTS 1
#define DT_N_INST_8_st_stm32_pwm DT_N_S_soc_S_timers_40001c00_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40001c00_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001c00_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001c00_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001c00_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40001c00_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001c00_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40001c00_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40002000
 *
 * Node identifier: DT_N_S_soc_S_timers_40002000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40002000_PATH "/soc/timers@40002000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40002000_FULL_NAME "timers@40002000"
#define DT_N_S_soc_S_timers_40002000_FULL_NAME_UNQUOTED timers@40002000
#define DT_N_S_soc_S_timers_40002000_FULL_NAME_TOKEN timers_40002000
#define DT_N_S_soc_S_timers_40002000_FULL_NAME_UPPER_TOKEN TIMERS_40002000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40002000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40002000_CHILD_IDX 66

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40002000_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40002000_FOREACH_NODELABEL(fn) fn(timers14)
#define DT_N_S_soc_S_timers_40002000_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers14, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40002000_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40002000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40002000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40002000_S_pwm) fn(DT_N_S_soc_S_timers_40002000_S_counter)
#define DT_N_S_soc_S_timers_40002000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40002000_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40002000_S_counter)
#define DT_N_S_soc_S_timers_40002000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40002000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40002000_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40002000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40002000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40002000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40002000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40002000_ORD 169
#define DT_N_S_soc_S_timers_40002000_ORD_STR_SORTABLE 00169

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40002000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40002000_SUPPORTS_ORDS \
	170, /* /soc/timers@40002000/counter */ \
	171, /* /soc/timers@40002000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40002000_EXISTS 1
#define DT_N_INST_9_st_stm32_timers DT_N_S_soc_S_timers_40002000
#define DT_N_NODELABEL_timers14     DT_N_S_soc_S_timers_40002000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40002000_REG_NUM 1
#define DT_N_S_soc_S_timers_40002000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_REG_IDX_0_VAL_ADDRESS 1073750016 /* 0x40002000 */
#define DT_N_S_soc_S_timers_40002000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40002000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40002000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40002000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_VAL_irq 122
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40002000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40002000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40002000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40002000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40002000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40002000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40002000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40002000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40002000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40002000_P_reg {1073750016 /* 0x40002000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40002000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_reg_IDX_0 1073750016
#define DT_N_S_soc_S_timers_40002000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40002000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_timers_40002000_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_timers_40002000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_clocks_IDX_0_VAL_bits 256
#define DT_N_S_soc_S_timers_40002000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000, clocks, 0)
#define DT_N_S_soc_S_timers_40002000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40002000, clocks, 0)
#define DT_N_S_soc_S_timers_40002000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40002000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40002000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_timers_40002000_P_resets_IDX_0_VAL_id 3720
#define DT_N_S_soc_S_timers_40002000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000, resets, 0)
#define DT_N_S_soc_S_timers_40002000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40002000, resets, 0)
#define DT_N_S_soc_S_timers_40002000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40002000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40002000_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40002000_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_status "disabled"
#define DT_N_S_soc_S_timers_40002000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40002000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40002000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40002000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40002000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40002000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000, status, 0)
#define DT_N_S_soc_S_timers_40002000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40002000, status, 0)
#define DT_N_S_soc_S_timers_40002000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40002000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_status_LEN 1
#define DT_N_S_soc_S_timers_40002000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40002000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40002000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40002000_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40002000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40002000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000, compatible, 0)
#define DT_N_S_soc_S_timers_40002000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40002000, compatible, 0)
#define DT_N_S_soc_S_timers_40002000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40002000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_interrupts {122 /* 0x7a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40002000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_interrupts_IDX_0 122
#define DT_N_S_soc_S_timers_40002000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40002000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40002000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40002000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40002000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40002000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40002000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40002000/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40002000_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40002000_S_counter_PATH "/soc/timers@40002000/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40002000_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_timers_40002000_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_timers_40002000_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_timers_40002000_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/timers@40002000) identifier: */
#define DT_N_S_soc_S_timers_40002000_S_counter_PARENT DT_N_S_soc_S_timers_40002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40002000_S_counter_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40002000_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40002000_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40002000_S_counter_ORD 170
#define DT_N_S_soc_S_timers_40002000_S_counter_ORD_STR_SORTABLE 00170

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40002000_S_counter_REQUIRES_ORDS \
	169, /* /soc/timers@40002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40002000_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40002000_S_counter_EXISTS 1
#define DT_N_INST_8_st_stm32_counter DT_N_S_soc_S_timers_40002000_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40002000_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40002000_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40002000_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40002000_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40002000_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40002000_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40002000_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40002000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40002000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40002000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40002000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40002000_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40002000_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40002000_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40002000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40002000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_PATH "/soc/timers@40002000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timers_40002000_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timers_40002000_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timers_40002000_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timers@40002000) identifier: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_PARENT DT_N_S_soc_S_timers_40002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40002000_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_ORD 171
#define DT_N_S_soc_S_timers_40002000_S_pwm_ORD_STR_SORTABLE 00171

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_REQUIRES_ORDS \
	169, /* /soc/timers@40002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_EXISTS 1
#define DT_N_INST_9_st_stm32_pwm DT_N_S_soc_S_timers_40002000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40002000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40002000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40002000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40002000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40002000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40012c00
 *
 * Node identifier: DT_N_S_soc_S_timers_40012c00
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40012c00_PATH "/soc/timers@40012c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40012c00_FULL_NAME "timers@40012c00"
#define DT_N_S_soc_S_timers_40012c00_FULL_NAME_UNQUOTED timers@40012c00
#define DT_N_S_soc_S_timers_40012c00_FULL_NAME_TOKEN timers_40012c00
#define DT_N_S_soc_S_timers_40012c00_FULL_NAME_UPPER_TOKEN TIMERS_40012C00

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40012c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40012c00_CHILD_IDX 19

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40012c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40012c00_FOREACH_NODELABEL(fn) fn(timers1)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40012c00_CHILD_NUM 1
#define DT_N_S_soc_S_timers_40012c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00_S_pwm)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40012c00_ORD 172
#define DT_N_S_soc_S_timers_40012c00_ORD_STR_SORTABLE 00172

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40012c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40012c00_SUPPORTS_ORDS \
	173, /* /soc/timers@40012c00/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40012c00_EXISTS 1
#define DT_N_INST_1_st_stm32_timers DT_N_S_soc_S_timers_40012c00
#define DT_N_NODELABEL_timers1      DT_N_S_soc_S_timers_40012c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40012c00_REG_NUM 1
#define DT_N_S_soc_S_timers_40012c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_REG_IDX_0_VAL_ADDRESS 1073818624 /* 0x40012c00 */
#define DT_N_S_soc_S_timers_40012c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40012c00_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40012c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40012c00_IRQ_NUM 4
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_irq 41
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_irq 42
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_irq 43
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_irq 44
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40012c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_CONTROLLER DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_CONTROLLER DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_CONTROLLER DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_CONTROLLER DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_CONTROLLER
#define DT_N_S_soc_S_timers_40012c00_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40012c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40012c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40012c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40012c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40012c00_P_reg {1073818624 /* 0x40012c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_0 1073818624
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40012c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bus 164
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, clocks, 0)
#define DT_N_S_soc_S_timers_40012c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, clocks, 0)
#define DT_N_S_soc_S_timers_40012c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_timers_40012c00_P_resets_IDX_0_VAL_id 3979
#define DT_N_S_soc_S_timers_40012c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, resets, 0)
#define DT_N_S_soc_S_timers_40012c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, resets, 0)
#define DT_N_S_soc_S_timers_40012c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40012c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_st_countermode 0
#define DT_N_S_soc_S_timers_40012c00_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_status "disabled"
#define DT_N_S_soc_S_timers_40012c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40012c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40012c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40012c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40012c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40012c00_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, status, 0)
#define DT_N_S_soc_S_timers_40012c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, status, 0)
#define DT_N_S_soc_S_timers_40012c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_status_LEN 1
#define DT_N_S_soc_S_timers_40012c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40012c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, compatible, 0)
#define DT_N_S_soc_S_timers_40012c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, compatible, 0)
#define DT_N_S_soc_S_timers_40012c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40012c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts {41 /* 0x29 */, 0 /* 0x0 */, 42 /* 0x2a */, 0 /* 0x0 */, 43 /* 0x2b */, 0 /* 0x0 */, 44 /* 0x2c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_0 41
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_2 42
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_4 43
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_6 44
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names {"brk", "up", "trgcom", "cc"}
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0 "brk"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0_STRING_UNQUOTED brk
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0_STRING_TOKEN brk
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN BRK
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1 "up"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1_STRING_UNQUOTED up
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1_STRING_TOKEN up
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN UP
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_2 "trgcom"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_2_STRING_UNQUOTED trgcom
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_2_STRING_TOKEN trgcom
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN TRGCOM
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_3 "cc"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_3_STRING_UNQUOTED cc
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_3_STRING_TOKEN cc
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN CC
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 1) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 2) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 3)
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 3)
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40012c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40012c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40012c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40012c00/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40012c00_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PATH "/soc/timers@40012c00/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timers@40012c00) identifier: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PARENT DT_N_S_soc_S_timers_40012c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_ORD 173
#define DT_N_S_soc_S_timers_40012c00_S_pwm_ORD_STR_SORTABLE 00173

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_REQUIRES_ORDS \
	172, /* /soc/timers@40012c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_EXISTS 1
#define DT_N_INST_1_st_stm32_pwm DT_N_S_soc_S_timers_40012c00_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014000
 *
 * Node identifier: DT_N_S_soc_S_timers_40014000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014000_PATH "/soc/timers@40014000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014000_FULL_NAME "timers@40014000"
#define DT_N_S_soc_S_timers_40014000_FULL_NAME_UNQUOTED timers@40014000
#define DT_N_S_soc_S_timers_40014000_FULL_NAME_TOKEN timers_40014000
#define DT_N_S_soc_S_timers_40014000_FULL_NAME_UPPER_TOKEN TIMERS_40014000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014000_CHILD_IDX 67

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40014000_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40014000_FOREACH_NODELABEL(fn) fn(timers15)
#define DT_N_S_soc_S_timers_40014000_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers15, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014000_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40014000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm) fn(DT_N_S_soc_S_timers_40014000_S_counter)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014000_S_counter)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014000_ORD 174
#define DT_N_S_soc_S_timers_40014000_ORD_STR_SORTABLE 00174

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014000_SUPPORTS_ORDS \
	175, /* /soc/timers@40014000/counter */ \
	176, /* /soc/timers@40014000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014000_EXISTS 1
#define DT_N_INST_10_st_stm32_timers DT_N_S_soc_S_timers_40014000
#define DT_N_NODELABEL_timers15      DT_N_S_soc_S_timers_40014000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014000_REG_NUM 1
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_VAL_ADDRESS 1073823744 /* 0x40014000 */
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq 71
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40014000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40014000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40014000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014000_P_reg {1073823744 /* 0x40014000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_0 1073823744
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bus 164
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bits 65536
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, clocks, 0)
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, clocks, 0)
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_timers_40014000_P_resets_IDX_0_VAL_id 3984
#define DT_N_S_soc_S_timers_40014000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, resets, 0)
#define DT_N_S_soc_S_timers_40014000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, resets, 0)
#define DT_N_S_soc_S_timers_40014000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40014000_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_status "disabled"
#define DT_N_S_soc_S_timers_40014000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, status, 0)
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, status, 0)
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts {71 /* 0x47 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_0 71
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014000/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40014000_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014000_S_counter_PATH "/soc/timers@40014000/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014000_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_timers_40014000_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_timers_40014000_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_timers_40014000_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/timers@40014000) identifier: */
#define DT_N_S_soc_S_timers_40014000_S_counter_PARENT DT_N_S_soc_S_timers_40014000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014000_S_counter_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40014000_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014000_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014000_S_counter_ORD 175
#define DT_N_S_soc_S_timers_40014000_S_counter_ORD_STR_SORTABLE 00175

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014000_S_counter_REQUIRES_ORDS \
	174, /* /soc/timers@40014000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014000_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014000_S_counter_EXISTS 1
#define DT_N_INST_9_st_stm32_counter DT_N_S_soc_S_timers_40014000_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014000_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014000_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40014000_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014000_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014000_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014000_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014000_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_PATH "/soc/timers@40014000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timers_40014000_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timers_40014000_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timers_40014000_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timers@40014000) identifier: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_PARENT DT_N_S_soc_S_timers_40014000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014000_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_ORD 176
#define DT_N_S_soc_S_timers_40014000_S_pwm_ORD_STR_SORTABLE 00176

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_REQUIRES_ORDS \
	174, /* /soc/timers@40014000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_EXISTS 1
#define DT_N_INST_10_st_stm32_pwm DT_N_S_soc_S_timers_40014000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40014000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_PATH "/soc/timers@40014400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_FULL_NAME "timers@40014400"
#define DT_N_S_soc_S_timers_40014400_FULL_NAME_UNQUOTED timers@40014400
#define DT_N_S_soc_S_timers_40014400_FULL_NAME_TOKEN timers_40014400
#define DT_N_S_soc_S_timers_40014400_FULL_NAME_UPPER_TOKEN TIMERS_40014400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014400_CHILD_IDX 68

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40014400_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40014400_FOREACH_NODELABEL(fn) fn(timers16)
#define DT_N_S_soc_S_timers_40014400_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers16, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014400_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40014400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm) fn(DT_N_S_soc_S_timers_40014400_S_counter)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014400_S_counter)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_ORD 177
#define DT_N_S_soc_S_timers_40014400_ORD_STR_SORTABLE 00177

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_SUPPORTS_ORDS \
	178, /* /soc/timers@40014400/counter */ \
	179, /* /soc/timers@40014400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_EXISTS 1
#define DT_N_INST_11_st_stm32_timers DT_N_S_soc_S_timers_40014400
#define DT_N_NODELABEL_timers16      DT_N_S_soc_S_timers_40014400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_REG_NUM 1
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_VAL_ADDRESS 1073824768 /* 0x40014400 */
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq 72
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40014400_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40014400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40014400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_P_reg {1073824768 /* 0x40014400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_0 1073824768
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bus 164
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bits 131072
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, clocks, 0)
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, clocks, 0)
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_timers_40014400_P_resets_IDX_0_VAL_id 3985
#define DT_N_S_soc_S_timers_40014400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, resets, 0)
#define DT_N_S_soc_S_timers_40014400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, resets, 0)
#define DT_N_S_soc_S_timers_40014400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_st_countermode 0
#define DT_N_S_soc_S_timers_40014400_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, status, 0)
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, status, 0)
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts {72 /* 0x48 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_0 72
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_S_counter_PATH "/soc/timers@40014400/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_timers_40014400_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_timers_40014400_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_timers_40014400_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/timers@40014400) identifier: */
#define DT_N_S_soc_S_timers_40014400_S_counter_PARENT DT_N_S_soc_S_timers_40014400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014400_S_counter_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40014400_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014400_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_S_counter_ORD 178
#define DT_N_S_soc_S_timers_40014400_S_counter_ORD_STR_SORTABLE 00178

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_S_counter_REQUIRES_ORDS \
	177, /* /soc/timers@40014400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_S_counter_EXISTS 1
#define DT_N_INST_10_st_stm32_counter DT_N_S_soc_S_timers_40014400_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014400_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40014400_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014400_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014400_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PATH "/soc/timers@40014400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timers_40014400_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timers_40014400_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timers_40014400_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timers@40014400) identifier: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PARENT DT_N_S_soc_S_timers_40014400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014400_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_ORD 179
#define DT_N_S_soc_S_timers_40014400_S_pwm_ORD_STR_SORTABLE 00179

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_REQUIRES_ORDS \
	177, /* /soc/timers@40014400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_EXISTS 1
#define DT_N_INST_11_st_stm32_pwm DT_N_S_soc_S_timers_40014400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40014400_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE\dts\bindings\timer\st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_PATH "/soc/timers@40014800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_FULL_NAME "timers@40014800"
#define DT_N_S_soc_S_timers_40014800_FULL_NAME_UNQUOTED timers@40014800
#define DT_N_S_soc_S_timers_40014800_FULL_NAME_TOKEN timers_40014800
#define DT_N_S_soc_S_timers_40014800_FULL_NAME_UPPER_TOKEN TIMERS_40014800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014800_CHILD_IDX 69

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40014800_NODELABEL_NUM 1
#define DT_N_S_soc_S_timers_40014800_FOREACH_NODELABEL(fn) fn(timers17)
#define DT_N_S_soc_S_timers_40014800_FOREACH_NODELABEL_VARGS(fn, ...) fn(timers17, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014800_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40014800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm) fn(DT_N_S_soc_S_timers_40014800_S_counter)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014800_S_counter)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014800_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_ORD 180
#define DT_N_S_soc_S_timers_40014800_ORD_STR_SORTABLE 00180

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@44020c00 */ \
	52, /* /soc/rcc@44020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_SUPPORTS_ORDS \
	181, /* /soc/timers@40014800/counter */ \
	182, /* /soc/timers@40014800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_EXISTS 1
#define DT_N_INST_12_st_stm32_timers DT_N_S_soc_S_timers_40014800
#define DT_N_NODELABEL_timers17      DT_N_S_soc_S_timers_40014800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_REG_NUM 1
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_VAL_ADDRESS 1073825792 /* 0x40014800 */
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014800_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq 73
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40014800_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40014800_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40014800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_P_reg {1073825792 /* 0x40014800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_0 1073825792
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_44020c00
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bus 164
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, clocks, 0)
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, clocks, 0)
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_44020c00_S_reset_controller
#define DT_N_S_soc_S_timers_40014800_P_resets_IDX_0_VAL_id 3986
#define DT_N_S_soc_S_timers_40014800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, resets, 0)
#define DT_N_S_soc_S_timers_40014800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, resets, 0)
#define DT_N_S_soc_S_timers_40014800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_st_countermode 0
#define DT_N_S_soc_S_timers_40014800_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, status, 0)
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, status, 0)
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts {73 /* 0x49 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_0 73
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_S_counter_PATH "/soc/timers@40014800/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_timers_40014800_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_timers_40014800_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_timers_40014800_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/timers@40014800) identifier: */
#define DT_N_S_soc_S_timers_40014800_S_counter_PARENT DT_N_S_soc_S_timers_40014800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014800_S_counter_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40014800_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014800_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_S_counter_ORD 181
#define DT_N_S_soc_S_timers_40014800_S_counter_ORD_STR_SORTABLE 00181

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_S_counter_REQUIRES_ORDS \
	180, /* /soc/timers@40014800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_S_counter_EXISTS 1
#define DT_N_INST_11_st_stm32_counter DT_N_S_soc_S_timers_40014800_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014800_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40014800_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014800_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014800_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PATH "/soc/timers@40014800/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_FULL_NAME "pwm"
#define DT_N_S_soc_S_timers_40014800_S_pwm_FULL_NAME_UNQUOTED pwm
#define DT_N_S_soc_S_timers_40014800_S_pwm_FULL_NAME_TOKEN pwm
#define DT_N_S_soc_S_timers_40014800_S_pwm_FULL_NAME_UPPER_TOKEN PWM

/* Node parent (/soc/timers@40014800) identifier: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PARENT DT_N_S_soc_S_timers_40014800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_NODELABEL_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014800_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_ORD 182
#define DT_N_S_soc_S_timers_40014800_S_pwm_ORD_STR_SORTABLE 00182

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_REQUIRES_ORDS \
	180, /* /soc/timers@40014800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_EXISTS 1
#define DT_N_INST_12_st_stm32_pwm DT_N_S_soc_S_timers_40014800_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40014800_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_40022000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_entropy                 DT_N_S_soc_S_rng_420c0800
#define DT_CHOSEN_zephyr_entropy_EXISTS          1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_serial_40004800
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_serial_40004800
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_soc_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_code_partition          DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000
#define DT_CHOSEN_zephyr_code_partition_EXISTS   1
#define DT_CHOSEN_zephyr_canbus                  DT_N_S_soc_S_can_4000a400
#define DT_CHOSEN_zephyr_canbus_EXISTS           1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40022000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000) fn(DT_N_S_soc_S_memory_40036400) fn(DT_N_S_soc_S_power_states) fn(DT_N_S_soc_S_power_states_S_state0) fn(DT_N_S_soc_S_rcc_44020c00) fn(DT_N_S_soc_S_rcc_44020c00_S_reset_controller) fn(DT_N_S_soc_S_interrupt_controller_44022000) fn(DT_N_S_soc_S_pin_controller_42020000) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6) fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11) fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0) fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0) fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9) fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12) fn(DT_N_S_soc_S_timers_44004400) fn(DT_N_S_soc_S_timers_40009400) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_serial_40004400) fn(DT_N_S_soc_S_serial_40004800) fn(DT_N_S_soc_S_serial_44002400) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_watchdog_40002c00) fn(DT_N_S_soc_S_dac_42028400) fn(DT_N_S_soc_S_adc_42028000) fn(DT_N_S_soc_S_rtc_44007800) fn(DT_N_S_soc_S_timers_40012c00) fn(DT_N_S_soc_S_timers_40012c00_S_pwm) fn(DT_N_S_soc_S_timers_40000000) fn(DT_N_S_soc_S_timers_40000000_S_pwm) fn(DT_N_S_soc_S_timers_40000000_S_counter) fn(DT_N_S_soc_S_timers_40000400) fn(DT_N_S_soc_S_timers_40000400_S_pwm) fn(DT_N_S_soc_S_timers_40000400_S_counter) fn(DT_N_S_soc_S_timers_40001000) fn(DT_N_S_soc_S_timers_40001000_S_pwm) fn(DT_N_S_soc_S_timers_40001000_S_counter) fn(DT_N_S_soc_S_timers_40001400) fn(DT_N_S_soc_S_timers_40001400_S_pwm) fn(DT_N_S_soc_S_timers_40001400_S_counter) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_spi_40003800) fn(DT_N_S_soc_S_spi_40003c00) fn(DT_N_S_soc_S_can_4000a400) fn(DT_N_S_soc_S_rng_420c0800) fn(DT_N_S_soc_S_ethernet_40028000) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0) fn(DT_N_S_soc_S_dma_40020000) fn(DT_N_S_soc_S_dma_40021000) fn(DT_N_S_soc_S_i2s_40013000) fn(DT_N_S_soc_S_i2s_40003800) fn(DT_N_S_soc_S_i2s_40003c00) fn(DT_N_S_soc_S_usb_40016000) fn(DT_N_S_soc_S_digi_dietemp_40008c00) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_memory_20040000) fn(DT_N_S_soc_S_memory_20050000) fn(DT_N_S_soc_S_timers_44004800) fn(DT_N_S_soc_S_timers_44004c00) fn(DT_N_S_soc_S_timers_44005000) fn(DT_N_S_soc_S_timers_44005400) fn(DT_N_S_soc_S_serial_40004c00) fn(DT_N_S_soc_S_serial_40005000) fn(DT_N_S_soc_S_serial_40007800) fn(DT_N_S_soc_S_serial_40007c00) fn(DT_N_S_soc_S_serial_40008000) fn(DT_N_S_soc_S_serial_40006400) fn(DT_N_S_soc_S_serial_40006800) fn(DT_N_S_soc_S_serial_40006c00) fn(DT_N_S_soc_S_serial_40008400) fn(DT_N_S_soc_S_i2c_44002800) fn(DT_N_S_soc_S_i2c_44002c00) fn(DT_N_S_soc_S_spi_40014c00) fn(DT_N_S_soc_S_spi_44002000) fn(DT_N_S_soc_S_spi_40015000) fn(DT_N_S_soc_S_xspi_47001400) fn(DT_N_S_soc_S_adc_42028100) fn(DT_N_S_soc_S_timers_40000800) fn(DT_N_S_soc_S_timers_40000800_S_pwm) fn(DT_N_S_soc_S_timers_40000800_S_counter) fn(DT_N_S_soc_S_timers_40000c00) fn(DT_N_S_soc_S_timers_40000c00_S_pwm) fn(DT_N_S_soc_S_timers_40000c00_S_counter) fn(DT_N_S_soc_S_timers_40001800) fn(DT_N_S_soc_S_timers_40001800_S_pwm) fn(DT_N_S_soc_S_timers_40001800_S_counter) fn(DT_N_S_soc_S_timers_40001c00) fn(DT_N_S_soc_S_timers_40001c00_S_pwm) fn(DT_N_S_soc_S_timers_40001c00_S_counter) fn(DT_N_S_soc_S_timers_40002000) fn(DT_N_S_soc_S_timers_40002000_S_pwm) fn(DT_N_S_soc_S_timers_40002000_S_counter) fn(DT_N_S_soc_S_timers_40014000) fn(DT_N_S_soc_S_timers_40014000_S_pwm) fn(DT_N_S_soc_S_timers_40014000_S_counter) fn(DT_N_S_soc_S_timers_40014400) fn(DT_N_S_soc_S_timers_40014400_S_pwm) fn(DT_N_S_soc_S_timers_40014400_S_counter) fn(DT_N_S_soc_S_timers_40014800) fn(DT_N_S_soc_S_timers_40014800_S_pwm) fn(DT_N_S_soc_S_timers_40014800_S_counter) fn(DT_N_S_soc_S_aes_420c0000) fn(DT_N_S_soc_S_can_4000a800) fn(DT_N_S_soc_S_sdmmc_46008000) fn(DT_N_S_soc_S_memory_controller_47000400) fn(DT_N_S_soc_S_sdmmc_46008c00) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_hsi) fn(DT_N_S_clocks_S_clk_hsi48) fn(DT_N_S_clocks_S_clk_csi) fn(DT_N_S_clocks_S_clk_lse) fn(DT_N_S_clocks_S_clk_lsi) fn(DT_N_S_clocks_S_pll) fn(DT_N_S_clocks_S_pll2) fn(DT_N_S_clocks_S_pll3) fn(DT_N_S_mcos) fn(DT_N_S_mcos_S_mco1) fn(DT_N_S_mcos_S_mco2) fn(DT_N_S_dietemp) fn(DT_N_S_vref) fn(DT_N_S_vbat) fn(DT_N_S_usbphy) fn(DT_N_S_smbus1) fn(DT_N_S_smbus2) fn(DT_N_S_smbus3) fn(DT_N_S_smbus4) fn(DT_N_S_connector) fn(DT_N_S_st_morpho_header) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2) fn(DT_N_S_leds_S_led_3) fn(DT_N_S_gpio_keys) fn(DT_N_S_gpio_keys_S_button) fn(DT_N_S_pwmleds) fn(DT_N_S_pwmleds_S_green_led_1)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40022000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000) fn(DT_N_S_soc_S_power_states) fn(DT_N_S_soc_S_power_states_S_state0) fn(DT_N_S_soc_S_rcc_44020c00) fn(DT_N_S_soc_S_rcc_44020c00_S_reset_controller) fn(DT_N_S_soc_S_interrupt_controller_44022000) fn(DT_N_S_soc_S_pin_controller_42020000) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6) fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11) fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0) fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0) fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9) fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12) fn(DT_N_S_soc_S_serial_40004800) fn(DT_N_S_soc_S_serial_44002400) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_dac_42028400) fn(DT_N_S_soc_S_adc_42028000) fn(DT_N_S_soc_S_rtc_44007800) fn(DT_N_S_soc_S_timers_40000400) fn(DT_N_S_soc_S_timers_40000400_S_pwm) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_can_4000a400) fn(DT_N_S_soc_S_rng_420c0800) fn(DT_N_S_soc_S_ethernet_40028000) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0) fn(DT_N_S_soc_S_dma_40020000) fn(DT_N_S_soc_S_dma_40021000) fn(DT_N_S_soc_S_usb_40016000) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_memory_20040000) fn(DT_N_S_soc_S_memory_20050000) fn(DT_N_S_soc_S_timers_44004c00) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_lsi) fn(DT_N_S_clocks_S_pll) fn(DT_N_S_mcos) fn(DT_N_S_vref) fn(DT_N_S_vbat) fn(DT_N_S_usbphy) fn(DT_N_S_connector) fn(DT_N_S_st_morpho_header) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2) fn(DT_N_S_leds_S_led_3) fn(DT_N_S_gpio_keys) fn(DT_N_S_gpio_keys_S_button) fn(DT_N_S_pwmleds_S_green_led_1)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_40036400, __VA_ARGS__) fn(DT_N_S_soc_S_power_states, __VA_ARGS__) fn(DT_N_S_soc_S_power_states_S_state0, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_44020c00, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_44020c00_S_reset_controller, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_44022000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_timers_44004400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40009400, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_44002400, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40002c00, __VA_ARGS__) fn(DT_N_S_soc_S_dac_42028400, __VA_ARGS__) fn(DT_N_S_soc_S_adc_42028000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_44007800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40012c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001000_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001400_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003c00, __VA_ARGS__) fn(DT_N_S_soc_S_can_4000a400, __VA_ARGS__) fn(DT_N_S_soc_S_rng_420c0800, __VA_ARGS__) fn(DT_N_S_soc_S_ethernet_40028000, __VA_ARGS__) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, __VA_ARGS__) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40003c00, __VA_ARGS__) fn(DT_N_S_soc_S_usb_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_digi_dietemp_40008c00, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20040000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20050000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_44004800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_44004c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_44005000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_44005400, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004c00, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40005000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40007800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40007c00, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40006400, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40006800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40006c00, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40008400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_44002800, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_44002c00, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40014c00, __VA_ARGS__) fn(DT_N_S_soc_S_spi_44002000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_xspi_47001400, __VA_ARGS__) fn(DT_N_S_soc_S_adc_42028100, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000c00_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001800_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001c00_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001c00_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40002000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40002000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40002000_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_aes_420c0000, __VA_ARGS__) fn(DT_N_S_soc_S_can_4000a800, __VA_ARGS__) fn(DT_N_S_soc_S_sdmmc_46008000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_controller_47000400, __VA_ARGS__) fn(DT_N_S_soc_S_sdmmc_46008c00, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hsi48, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_csi, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__) fn(DT_N_S_clocks_S_pll2, __VA_ARGS__) fn(DT_N_S_clocks_S_pll3, __VA_ARGS__) fn(DT_N_S_mcos, __VA_ARGS__) fn(DT_N_S_mcos_S_mco1, __VA_ARGS__) fn(DT_N_S_mcos_S_mco2, __VA_ARGS__) fn(DT_N_S_dietemp, __VA_ARGS__) fn(DT_N_S_vref, __VA_ARGS__) fn(DT_N_S_vbat, __VA_ARGS__) fn(DT_N_S_usbphy, __VA_ARGS__) fn(DT_N_S_smbus1, __VA_ARGS__) fn(DT_N_S_smbus2, __VA_ARGS__) fn(DT_N_S_smbus3, __VA_ARGS__) fn(DT_N_S_smbus4, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_st_morpho_header, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__) fn(DT_N_S_pwmleds, __VA_ARGS__) fn(DT_N_S_pwmleds_S_green_led_1, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000, __VA_ARGS__) fn(DT_N_S_soc_S_power_states, __VA_ARGS__) fn(DT_N_S_soc_S_power_states_S_state0, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_44020c00, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_44020c00_S_reset_controller, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_44022000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp15_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_inp3_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out2_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_crs_dv_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdc_pc1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_mdio_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_ref_clk_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd0_pc4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_rxd1_pc5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd0_pg13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_txd1_pb15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_eth_tx_en_pg11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_rx_pd0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_fdcan1_tx_pd1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pg9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch3_pb0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_rx_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_lpuart1_tx_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dm_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_dp_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_44002400, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_dac_42028400, __VA_ARGS__) fn(DT_N_S_soc_S_adc_42028000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_44007800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_can_4000a400, __VA_ARGS__) fn(DT_N_S_soc_S_rng_420c0800, __VA_ARGS__) fn(DT_N_S_soc_S_ethernet_40028000, __VA_ARGS__) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, __VA_ARGS__) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_usb_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20040000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20050000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_44004c00, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__) fn(DT_N_S_mcos, __VA_ARGS__) fn(DT_N_S_vref, __VA_ARGS__) fn(DT_N_S_vbat, __VA_ARGS__) fn(DT_N_S_usbphy, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_st_morpho_header, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__) fn(DT_N_S_pwmleds_S_green_led_1, __VA_ARGS__)
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_0 DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000
#define DT_COMPAT_fixed_partitions_LABEL_image_0_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_1 DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_100000
#define DT_COMPAT_fixed_partitions_LABEL_image_1_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_storage DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_1f0000
#define DT_COMPAT_fixed_partitions_LABEL_storage_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_st_stm32h563zi_nucleo 1
#define DT_COMPAT_HAS_OKAY_st_stm32h563 1
#define DT_COMPAT_HAS_OKAY_st_stm32h5 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v8m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv8m_systick 1
#define DT_COMPAT_HAS_OKAY_st_stm32_flash_controller 1
#define DT_COMPAT_HAS_OKAY_st_stm32l5_flash_controller 1
#define DT_COMPAT_HAS_OKAY_st_stm32_nv_flash 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_zephyr_power_state 1
#define DT_COMPAT_HAS_OKAY_st_stm32u5_rcc 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rcc_rctl 1
#define DT_COMPAT_HAS_OKAY_st_stm32g0_exti 1
#define DT_COMPAT_HAS_OKAY_st_stm32_exti 1
#define DT_COMPAT_HAS_OKAY_st_stm32_pinctrl 1
#define DT_COMPAT_HAS_OKAY_st_stm32_gpio 1
#define DT_COMPAT_HAS_OKAY_st_stm32_usart 1
#define DT_COMPAT_HAS_OKAY_st_stm32_uart 1
#define DT_COMPAT_HAS_OKAY_st_stm32_lpuart 1
#define DT_COMPAT_HAS_OKAY_st_stm32_watchdog 1
#define DT_COMPAT_HAS_OKAY_st_stm32_dac 1
#define DT_COMPAT_HAS_OKAY_st_stm32_adc 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rtc 1
#define DT_COMPAT_HAS_OKAY_st_stm32_timers 1
#define DT_COMPAT_HAS_OKAY_st_stm32_pwm 1
#define DT_COMPAT_HAS_OKAY_st_stm32_i2c_v2 1
#define DT_COMPAT_HAS_OKAY_st_stm32h7_spi 1
#define DT_COMPAT_HAS_OKAY_st_stm32_spi_fifo 1
#define DT_COMPAT_HAS_OKAY_st_stm32_spi 1
#define DT_COMPAT_HAS_OKAY_st_stm32_fdcan 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rng 1
#define DT_COMPAT_HAS_OKAY_st_stm32h7_ethernet 1
#define DT_COMPAT_HAS_OKAY_st_stm32_ethernet 1
#define DT_COMPAT_HAS_OKAY_st_stm32_mdio 1
#define DT_COMPAT_HAS_OKAY_ethernet_phy 1
#define DT_COMPAT_HAS_OKAY_st_stm32u5_dma 1
#define DT_COMPAT_HAS_OKAY_st_stm32_usb 1
#define DT_COMPAT_HAS_OKAY_zephyr_memory_region 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_st_stm32_lptim 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m33 1
#define DT_COMPAT_HAS_OKAY_arm_armv8m_mpu 1
#define DT_COMPAT_HAS_OKAY_st_stm32_hse_clock 1
#define DT_COMPAT_HAS_OKAY_fixed_clock 1
#define DT_COMPAT_HAS_OKAY_st_stm32u5_pll_clock 1
#define DT_COMPAT_HAS_OKAY_st_stm32_vref 1
#define DT_COMPAT_HAS_OKAY_st_stm32_vbat 1
#define DT_COMPAT_HAS_OKAY_usb_nop_xceiv 1
#define DT_COMPAT_HAS_OKAY_arduino_header_r3 1
#define DT_COMPAT_HAS_OKAY_st_morpho_header 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_st_stm32h563zi_nucleo_NUM_OKAY 1
#define DT_N_INST_st_stm32h563_NUM_OKAY 1
#define DT_N_INST_st_stm32h5_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v8m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv8m_systick_NUM_OKAY 1
#define DT_N_INST_st_stm32_flash_controller_NUM_OKAY 1
#define DT_N_INST_st_stm32l5_flash_controller_NUM_OKAY 1
#define DT_N_INST_st_stm32_nv_flash_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_zephyr_power_state_NUM_OKAY 1
#define DT_N_INST_st_stm32u5_rcc_NUM_OKAY 1
#define DT_N_INST_st_stm32_rcc_rctl_NUM_OKAY 1
#define DT_N_INST_st_stm32g0_exti_NUM_OKAY 1
#define DT_N_INST_st_stm32_exti_NUM_OKAY 1
#define DT_N_INST_st_stm32_pinctrl_NUM_OKAY 1
#define DT_N_INST_st_stm32_gpio_NUM_OKAY 9
#define DT_N_INST_st_stm32_usart_NUM_OKAY 1
#define DT_N_INST_st_stm32_uart_NUM_OKAY 2
#define DT_N_INST_st_stm32_lpuart_NUM_OKAY 1
#define DT_N_INST_st_stm32_watchdog_NUM_OKAY 1
#define DT_N_INST_st_stm32_dac_NUM_OKAY 1
#define DT_N_INST_st_stm32_adc_NUM_OKAY 1
#define DT_N_INST_st_stm32_rtc_NUM_OKAY 1
#define DT_N_INST_st_stm32_timers_NUM_OKAY 1
#define DT_N_INST_st_stm32_pwm_NUM_OKAY 1
#define DT_N_INST_st_stm32_i2c_v2_NUM_OKAY 1
#define DT_N_INST_st_stm32h7_spi_NUM_OKAY 1
#define DT_N_INST_st_stm32_spi_fifo_NUM_OKAY 1
#define DT_N_INST_st_stm32_spi_NUM_OKAY 1
#define DT_N_INST_st_stm32_fdcan_NUM_OKAY 1
#define DT_N_INST_st_stm32_rng_NUM_OKAY 1
#define DT_N_INST_st_stm32h7_ethernet_NUM_OKAY 1
#define DT_N_INST_st_stm32_ethernet_NUM_OKAY 1
#define DT_N_INST_st_stm32_mdio_NUM_OKAY 1
#define DT_N_INST_ethernet_phy_NUM_OKAY 1
#define DT_N_INST_st_stm32u5_dma_NUM_OKAY 2
#define DT_N_INST_st_stm32_usb_NUM_OKAY 1
#define DT_N_INST_zephyr_memory_region_NUM_OKAY 3
#define DT_N_INST_mmio_sram_NUM_OKAY 3
#define DT_N_INST_st_stm32_lptim_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m33_NUM_OKAY 1
#define DT_N_INST_arm_armv8m_mpu_NUM_OKAY 1
#define DT_N_INST_st_stm32_hse_clock_NUM_OKAY 1
#define DT_N_INST_fixed_clock_NUM_OKAY 1
#define DT_N_INST_st_stm32u5_pll_clock_NUM_OKAY 1
#define DT_N_INST_st_stm32_vref_NUM_OKAY 1
#define DT_N_INST_st_stm32_vbat_NUM_OKAY 1
#define DT_N_INST_usb_nop_xceiv_NUM_OKAY 1
#define DT_N_INST_arduino_header_r3_NUM_OKAY 1
#define DT_N_INST_st_morpho_header_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_FOREACH_OKAY_st_stm32h563zi_nucleo(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_st_stm32h563zi_nucleo(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32h563zi_nucleo(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32h563zi_nucleo(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32h563(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_st_stm32h563(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32h563(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32h563(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32h5(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_st_stm32h5(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32h5(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32h5(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v8m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v8m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v8m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v8m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv8m_systick(fn) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_FOREACH_OKAY_VARGS_arm_armv8m_systick(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv8m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv8m_systick(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_40022000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32l5_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_40022000)
#define DT_FOREACH_OKAY_VARGS_st_stm32l5_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32l5_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32l5_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_partitions(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions)
#define DT_FOREACH_OKAY_VARGS_fixed_partitions(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_partitions(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_power_state(fn) fn(DT_N_S_soc_S_power_states_S_state0)
#define DT_FOREACH_OKAY_VARGS_zephyr_power_state(fn, ...) fn(DT_N_S_soc_S_power_states_S_state0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_power_state(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_power_state(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32u5_rcc(fn) fn(DT_N_S_soc_S_rcc_44020c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32u5_rcc(fn, ...) fn(DT_N_S_soc_S_rcc_44020c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32u5_rcc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32u5_rcc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_rcc_rctl(fn) fn(DT_N_S_soc_S_rcc_44020c00_S_reset_controller)
#define DT_FOREACH_OKAY_VARGS_st_stm32_rcc_rctl(fn, ...) fn(DT_N_S_soc_S_rcc_44020c00_S_reset_controller, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_rcc_rctl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_rcc_rctl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32g0_exti(fn) fn(DT_N_S_soc_S_interrupt_controller_44022000)
#define DT_FOREACH_OKAY_VARGS_st_stm32g0_exti(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_44022000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32g0_exti(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32g0_exti(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_exti(fn) fn(DT_N_S_soc_S_interrupt_controller_44022000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_exti(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_44022000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_exti(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_exti(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_pinctrl(fn) fn(DT_N_S_soc_S_pin_controller_42020000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_pinctrl(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_gpio(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_gpio(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_gpio(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5) fn(6) fn(7) fn(8)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__) fn(6, __VA_ARGS__) fn(7, __VA_ARGS__) fn(8, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_usart(fn) fn(DT_N_S_soc_S_serial_40004800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_usart(fn, ...) fn(DT_N_S_soc_S_serial_40004800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_usart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_usart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_uart(fn) fn(DT_N_S_soc_S_serial_40004800) fn(DT_N_S_soc_S_serial_44002400)
#define DT_FOREACH_OKAY_VARGS_st_stm32_uart(fn, ...) fn(DT_N_S_soc_S_serial_40004800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_44002400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_uart(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_uart(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_lpuart(fn) fn(DT_N_S_soc_S_serial_44002400)
#define DT_FOREACH_OKAY_VARGS_st_stm32_lpuart(fn, ...) fn(DT_N_S_soc_S_serial_44002400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_lpuart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_lpuart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_watchdog(fn) fn(DT_N_S_soc_S_watchdog_40003000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_watchdog(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_watchdog(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_watchdog(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_dac(fn) fn(DT_N_S_soc_S_dac_42028400)
#define DT_FOREACH_OKAY_VARGS_st_stm32_dac(fn, ...) fn(DT_N_S_soc_S_dac_42028400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_dac(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_dac(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_adc(fn) fn(DT_N_S_soc_S_adc_42028000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_adc(fn, ...) fn(DT_N_S_soc_S_adc_42028000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_adc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_adc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_rtc(fn) fn(DT_N_S_soc_S_rtc_44007800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_rtc(fn, ...) fn(DT_N_S_soc_S_rtc_44007800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_rtc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_rtc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_timers(fn) fn(DT_N_S_soc_S_timers_40000400)
#define DT_FOREACH_OKAY_VARGS_st_stm32_timers(fn, ...) fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_timers(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_timers(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_pwm(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm)
#define DT_FOREACH_OKAY_VARGS_st_stm32_pwm(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_pwm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_pwm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_i2c_v2(fn) fn(DT_N_S_soc_S_i2c_40005400)
#define DT_FOREACH_OKAY_VARGS_st_stm32_i2c_v2(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_i2c_v2(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_i2c_v2(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32h7_spi(fn) fn(DT_N_S_soc_S_spi_40013000)
#define DT_FOREACH_OKAY_VARGS_st_stm32h7_spi(fn, ...) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32h7_spi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32h7_spi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_spi_fifo(fn) fn(DT_N_S_soc_S_spi_40013000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_spi_fifo(fn, ...) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_spi_fifo(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_spi_fifo(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_spi(fn) fn(DT_N_S_soc_S_spi_40013000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_spi(fn, ...) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_spi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_spi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_fdcan(fn) fn(DT_N_S_soc_S_can_4000a400)
#define DT_FOREACH_OKAY_VARGS_st_stm32_fdcan(fn, ...) fn(DT_N_S_soc_S_can_4000a400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_fdcan(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_fdcan(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_rng(fn) fn(DT_N_S_soc_S_rng_420c0800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_rng(fn, ...) fn(DT_N_S_soc_S_rng_420c0800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_rng(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_rng(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32h7_ethernet(fn) fn(DT_N_S_soc_S_ethernet_40028000)
#define DT_FOREACH_OKAY_VARGS_st_stm32h7_ethernet(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32h7_ethernet(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32h7_ethernet(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_ethernet(fn) fn(DT_N_S_soc_S_ethernet_40028000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_ethernet(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_ethernet(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_ethernet(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_mdio(fn) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio)
#define DT_FOREACH_OKAY_VARGS_st_stm32_mdio(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_mdio(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_mdio(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ethernet_phy(fn) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0)
#define DT_FOREACH_OKAY_VARGS_ethernet_phy(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000_S_mdio_S_ethernet_phy_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ethernet_phy(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ethernet_phy(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32u5_dma(fn) fn(DT_N_S_soc_S_dma_40020000) fn(DT_N_S_soc_S_dma_40021000)
#define DT_FOREACH_OKAY_VARGS_st_stm32u5_dma(fn, ...) fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40021000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32u5_dma(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32u5_dma(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_usb(fn) fn(DT_N_S_soc_S_usb_40016000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_usb(fn, ...) fn(DT_N_S_soc_S_usb_40016000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_usb(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_usb(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_memory_region(fn) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_memory_20040000) fn(DT_N_S_soc_S_memory_20050000)
#define DT_FOREACH_OKAY_VARGS_zephyr_memory_region(fn, ...) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20040000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20050000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_memory_region(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_memory_region(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_memory_20040000) fn(DT_N_S_soc_S_memory_20050000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20040000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20050000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_lptim(fn) fn(DT_N_S_soc_S_timers_44004c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32_lptim(fn, ...) fn(DT_N_S_soc_S_timers_44004c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_lptim(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_lptim(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m33(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m33(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m33(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m33(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv8m_mpu(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_FOREACH_OKAY_VARGS_arm_armv8m_mpu(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv8m_mpu(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv8m_mpu(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_hse_clock(fn) fn(DT_N_S_clocks_S_clk_hse)
#define DT_FOREACH_OKAY_VARGS_st_stm32_hse_clock(fn, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_hse_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_hse_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_clock(fn) fn(DT_N_S_clocks_S_clk_lsi)
#define DT_FOREACH_OKAY_VARGS_fixed_clock(fn, ...) fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32u5_pll_clock(fn) fn(DT_N_S_clocks_S_pll)
#define DT_FOREACH_OKAY_VARGS_st_stm32u5_pll_clock(fn, ...) fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32u5_pll_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32u5_pll_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_vref(fn) fn(DT_N_S_vref)
#define DT_FOREACH_OKAY_VARGS_st_stm32_vref(fn, ...) fn(DT_N_S_vref, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_vref(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_vref(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_vbat(fn) fn(DT_N_S_vbat)
#define DT_FOREACH_OKAY_VARGS_st_stm32_vbat(fn, ...) fn(DT_N_S_vbat, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_vbat(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_vbat(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_usb_nop_xceiv(fn) fn(DT_N_S_usbphy)
#define DT_FOREACH_OKAY_VARGS_usb_nop_xceiv(fn, ...) fn(DT_N_S_usbphy, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_usb_nop_xceiv(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_usb_nop_xceiv(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arduino_header_r3(fn) fn(DT_N_S_connector)
#define DT_FOREACH_OKAY_VARGS_arduino_header_r3(fn, ...) fn(DT_N_S_connector, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arduino_header_r3(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arduino_header_r3(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_morpho_header(fn) fn(DT_N_S_st_morpho_header)
#define DT_FOREACH_OKAY_VARGS_st_morpho_header(fn, ...) fn(DT_N_S_st_morpho_header, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_morpho_header(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_morpho_header(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_keys(fn) fn(DT_N_S_gpio_keys)
#define DT_FOREACH_OKAY_VARGS_gpio_keys(fn, ...) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_keys(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_ethernet_phy_BUS_mdio 1
