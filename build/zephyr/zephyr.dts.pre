# 0 "C:/deviot/zephyrproject/zephyr/misc/empty_file.c"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "C:/deviot/zephyrproject/zephyr/boards/st/nucleo_h563zi/nucleo_h563zi.dts" 1







/dts-v1/;
# 1 "C:/deviot/zephyrproject/zephyr/boards/st/nucleo_h563zi/nucleo_h563zi-common.dtsi" 1







# 1 "C:/deviot/zephyrproject/zephyr/dts/arm/st/h5/stm32h563Xi.dtsi" 1 3 4






# 1 "C:/deviot/zephyrproject/zephyr/dts/common/mem.h" 1 3 4
# 8 "C:/deviot/zephyrproject/zephyr/dts/arm/st/h5/stm32h563Xi.dtsi" 2 3 4
# 1 "C:/deviot/zephyrproject/zephyr/dts/arm/st/h5/stm32h563.dtsi" 1 3 4






# 1 "C:/deviot/zephyrproject/zephyr/dts/arm/st/h5/stm32h562.dtsi" 1 3 4






# 1 "C:/deviot/zephyrproject/zephyr/dts/arm/st/h5/stm32h5.dtsi" 1 3 4







# 1 "C:/deviot/zephyrproject/zephyr/dts/arm/armv8-m.dtsi" 1 3 4


# 1 "C:/deviot/zephyrproject/zephyr/dts/common/skeleton.dtsi" 1 3 4
# 9 "C:/deviot/zephyrproject/zephyr/dts/common/skeleton.dtsi" 3 4
/ {
 #address-cells = <1>;
 #size-cells = <1>;
 chosen { };
 aliases { };
};
# 4 "C:/deviot/zephyrproject/zephyr/dts/arm/armv8-m.dtsi" 2 3 4

/ {
 soc {
  #address-cells = <1>;
  #size-cells = <1>;
  compatible = "simple-bus";
  interrupt-parent = <&nvic>;
  ranges;

  nvic: interrupt-controller@e000e100 {
   #address-cells = <1>;
   compatible = "arm,v8m-nvic";
   reg = <0xe000e100 0xc00>;
   interrupt-controller;
   #interrupt-cells = <2>;
  };

  systick: timer@e000e010 {
   compatible = "arm,armv8m-systick";
   reg = <0xe000e010 0x10>;
  };
 };
};
# 9 "C:/deviot/zephyrproject/zephyr/dts/arm/st/h5/stm32h5.dtsi" 2 3 4
# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/adc.h" 1 3 4
# 9 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/adc.h" 3 4
# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/dt-util.h" 1 3 4
# 19 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/dt-util.h" 3 4
# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/sys/util_macro.h" 1 3 4
# 34 "C:/deviot/zephyrproject/zephyr/include/zephyr/sys/util_macro.h" 3 4
# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 1 3 4
# 18 "C:/deviot/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 3 4
# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/sys/util_loops.h" 1 3 4
# 1083 "C:/deviot/zephyrproject/zephyr/include/zephyr/sys/util_loops.h" 3 4
# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/sys/util_listify.h" 1 3 4
# 1084 "C:/deviot/zephyrproject/zephyr/include/zephyr/sys/util_loops.h" 2 3 4
# 19 "C:/deviot/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4
# 162 "C:/deviot/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 3 4
# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/sys/util_internal_is_eq.h" 1 3 4
# 163 "C:/deviot/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4
# 193 "C:/deviot/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 3 4
# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/sys/util_internal_util_inc.h" 1 3 4
# 194 "C:/deviot/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4


# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/sys/util_internal_util_dec.h" 1 3 4
# 197 "C:/deviot/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4


# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/sys/util_internal_util_x2.h" 1 3 4
# 200 "C:/deviot/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4
# 35 "C:/deviot/zephyrproject/zephyr/include/zephyr/sys/util_macro.h" 2 3 4
# 20 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/dt-util.h" 2 3 4
# 10 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/adc.h" 2 3 4
# 10 "C:/deviot/zephyrproject/zephyr/dts/arm/st/h5/stm32h5.dtsi" 2 3 4
# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/clock/stm32h5_clock.h" 1 3 4
# 9 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/clock/stm32h5_clock.h" 3 4
# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/clock/stm32_common_clocks.h" 1 3 4
# 10 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/clock/stm32h5_clock.h" 2 3 4
# 11 "C:/deviot/zephyrproject/zephyr/dts/arm/st/h5/stm32h5.dtsi" 2 3 4
# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/gpio/gpio.h" 1 3 4
# 12 "C:/deviot/zephyrproject/zephyr/dts/arm/st/h5/stm32h5.dtsi" 2 3 4
# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/i2c/i2c.h" 1 3 4
# 13 "C:/deviot/zephyrproject/zephyr/dts/arm/st/h5/stm32h5.dtsi" 2 3 4
# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/reset/stm32h5_reset.h" 1 3 4
# 10 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/reset/stm32h5_reset.h" 3 4
# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/reset/stm32-common.h" 1 3 4
# 11 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/reset/stm32h5_reset.h" 2 3 4
# 14 "C:/deviot/zephyrproject/zephyr/dts/arm/st/h5/stm32h5.dtsi" 2 3 4
# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/dma/stm32_dma.h" 1 3 4
# 15 "C:/deviot/zephyrproject/zephyr/dts/arm/st/h5/stm32h5.dtsi" 2 3 4
# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/pwm/pwm.h" 1 3 4
# 16 "C:/deviot/zephyrproject/zephyr/dts/arm/st/h5/stm32h5.dtsi" 2 3 4
# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32l4_adc.h" 1 3 4
# 9 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32l4_adc.h" 3 4
# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32_adc.h" 1 3 4
# 10 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32l4_adc.h" 2 3 4
# 17 "C:/deviot/zephyrproject/zephyr/dts/arm/st/h5/stm32h5.dtsi" 2 3 4
# 1 "C:/deviot/zephyrproject/zephyr/dts/common/freq.h" 1 3 4
# 18 "C:/deviot/zephyrproject/zephyr/dts/arm/st/h5/stm32h5.dtsi" 2 3 4

/ {
 chosen {
  zephyr,flash-controller = &flash;
  zephyr,entropy = &rng;
 };

 cpus {
  #address-cells = <1>;
  #size-cells = <0>;

  cpu0: cpu@0 {
   device_type = "cpu";
   compatible = "arm,cortex-m33";
   reg = <0>;
   cpu-power-states = <&stop>;
   #address-cells = <1>;
   #size-cells = <1>;

   mpu: mpu@e000ed90 {
    compatible = "arm,armv8m-mpu";
    reg = <0xe000ed90 0x40>;
   };
  };
 };

 clocks {
  clk_hse: clk-hse {
   #clock-cells = <0>;
   compatible = "st,stm32-hse-clock";
   status = "disabled";
  };

  clk_hsi: clk-hsi {
   #clock-cells = <0>;
   compatible = "st,stm32h7-hsi-clock";
   hsi-div = <1>;
   clock-frequency = <((64) * 1000 * 1000)>;
   status = "disabled";
  };

  clk_hsi48: clk-hsi48 {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <((48) * 1000 * 1000)>;
   status = "disabled";
  };

  clk_csi: clk-csi {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <((4) * 1000 * 1000)>;
   status = "disabled";
  };

  clk_lse: clk-lse {
   #clock-cells = <0>;
   compatible = "st,stm32-lse-clock";
   clock-frequency = <32768>;
   driving-capability = <2>;
   status = "disabled";
  };

  clk_lsi: clk-lsi {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <((32) * 1000)>;
   status = "disabled";
  };

  pll1: pll: pll {
   #clock-cells = <0>;
   compatible = "st,stm32u5-pll-clock";
   status = "disabled";
  };

  pll2: pll2 {
   #clock-cells = <0>;
   compatible = "st,stm32u5-pll-clock";
   status = "disabled";
  };
 };

 mcos {
  mco1: mco1 {
   compatible = "st,stm32-clock-mco";
   status = "disabled";
  };

  mco2: mco2 {
   compatible = "st,stm32-clock-mco";
   status = "disabled";
  };
 };

 soc {
  flash: flash-controller@40022000 {
   compatible = "st,stm32-flash-controller", "st,stm32l5-flash-controller";
   reg = <0x40022000 0x400>;
   interrupts = <6 0>;

   #address-cells = <1>;
   #size-cells = <1>;

   flash0: flash@8000000 {
    compatible = "st,stm32-nv-flash", "soc-nv-flash";

    write-block-size = <16>;
    erase-block-size = <8192>;

    max-erase-time = <5>;
   };
  };

  backup_sram: memory@40036400 {
   compatible = "zephyr,memory-region", "st,stm32-backup-sram";
   reg = <0x40036400 ((2) * 1024)>;
   clocks = <&rcc (0x088) (1 << 28U)>;
   zephyr,memory-region = "BACKUP_SRAM";
   status = "disabled";
  };

  power-states {
   stop: state0 {
    compatible = "zephyr,power-state";
    power-state-name = "suspend-to-idle";
    substate-id = <1>;
    min-residency-us = <20>;
   };
  };

  rcc: rcc@44020c00 {
   compatible = "st,stm32u5-rcc";
   clocks-controller;
   #clock-cells = <2>;
   reg = <0x44020c00 0x400>;

   rctl: reset-controller {
    compatible = "st,stm32-rcc-rctl";
    #reset-cells = <1>;
   };
  };

  exti: interrupt-controller@44022000 {
   compatible = "st,stm32g0-exti", "st,stm32-exti";
   interrupt-controller;
   #interrupt-cells = <1>;
   #address-cells = <1>;
   reg = <0x44022000 0x400>;
   num-lines = <16>;
   interrupts = <11 0>, <12 0>, <13 0>, <14 0>,
         <15 0>, <16 0>, <17 0>, <18 0>,
         <19 0>, <20 0>, <21 0>, <22 0>,
         <23 0>, <24 0>, <25 0>, <26 0>;
   interrupt-names = "line0", "line1", "line2", "line3",
       "line4", "line5", "line6", "line7",
       "line8", "line9", "line10", "line11",
       "line12", "line13", "line14", "line15";
   line-ranges = <0 1>, <1 1>, <2 1>, <3 1>,
          <4 1>, <5 1>, <6 1>, <7 1>,
          <8 1>, <9 1>, <10 1>, <11 1>,
          <12 1>, <13 1>, <14 1>, <15 1>;
  };

  pinctrl: pin-controller@42020000 {
   compatible = "st,stm32-pinctrl";
   #address-cells = <1>;
   #size-cells = <1>;
   reg = <0x42020000 0x2000>;

   gpioa: gpio@42020000 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x42020000 0x400>;
    clocks = <&rcc (0x08C) (1 << 0U)>;
   };

   gpiob: gpio@42020400 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x42020400 0x400>;
    clocks = <&rcc (0x08C) (1 << 1U)>;
   };

   gpioc: gpio@42020800 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x42020800 0x400>;
    clocks = <&rcc (0x08C) (1 << 2U)>;
   };

   gpiod: gpio@42020c00 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x42020c00 0x400>;
    clocks = <&rcc (0x08C) (1 << 3U)>;
   };

   gpioh: gpio@42021c00 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x42021c00 0x400>;
    clocks = <&rcc (0x08C) (1 << 7U)>;
   };
  };

  lptim1: timers@44004400 {
   compatible = "st,stm32-lptim";
   clocks = <&rcc (0x0A8) (1 << 11U)>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x44004400 0x400>;
   interrupts = <64 1>;
   interrupt-names = "wakeup";
   status = "disabled";
  };

  lptim2: timers@40009400 {
   compatible = "st,stm32-lptim";
   clocks = <&rcc (0x0A0) (1 << 5U)>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40009400 0x400>;
   interrupts = <70 1>;
   interrupt-names = "wakeup";
   status = "disabled";
  };

  usart1: serial@40013800 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40013800 0x400>;
   clocks = <&rcc (0x0A4) (1 << 14U)>;
   resets = <&rctl (((0x7C) << 5U) | (14U))>;
   interrupts = <58 0>;
   status = "disabled";
  };

  usart2: serial@40004400 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40004400 0x400>;
   clocks = <&rcc (0x09c) (1 << 17U)>;
   resets = <&rctl (((0x74) << 5U) | (17U))>;
   interrupts = <59 0>;
   status = "disabled";
  };

  usart3: serial@40004800 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40004800 0x400>;
   clocks = <&rcc (0x09c) (1 << 18U)>;
   resets = <&rctl (((0x74) << 5U) | (18U))>;
   interrupts = <60 0>;
   status = "disabled";
  };

  lpuart1: serial@44002400 {
   compatible = "st,stm32-lpuart", "st,stm32-uart";
   reg = <0x44002400 0x400>;
   clocks = <&rcc (0x0A8) (1 << 6U)>;
   resets = <&rctl (((0x80) << 5U) | (6U))>;
   interrupts = <63 0>;
   status = "disabled";
  };

  iwdg: watchdog@40003000 {
   compatible = "st,stm32-watchdog";
   reg = <0x40003000 0x400>;
   status = "disabled";
  };

  wwdg: watchdog@40002c00 {
   compatible = "st,stm32-window-watchdog";
   reg = <0x40002c00 0x400>;
   clocks = <&rcc (0x09c) (1 << 11U)>;
   interrupts = <0 7>;
   status = "disabled";
  };

  dac1: dac@42028400 {
   compatible = "st,stm32-dac";
   reg = <0x42028400 0x400>;
   clocks = <&rcc (0x08C) (1 << 11U)>;
   status = "disabled";
   #io-channel-cells = <1>;
  };

  adc1: adc@42028000 {
   compatible = "st,stm32-adc";
   reg = <0x42028000 0x400>;
   clocks = <&rcc (0x08C) (1 << 10U)>;
   interrupts = <37 0>;
   status = "disabled";
   vref-mv = <3300>;
   #io-channel-cells = <1>;
   resolutions = <((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((3) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (2)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x00) & ((1UL << (3)) - 1UL)) << 16U) | (((12) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((3) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (2)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x01) & ((1UL << (3)) - 1UL)) << 16U) | (((10) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((3) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (2)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x02) & ((1UL << (3)) - 1UL)) << 16U) | (((8) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((3) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (2)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x03) & ((1UL << (3)) - 1UL)) << 16U) | (((6) & ((1UL << (13)) - 1UL)) << 19U))>;
   sampling-times = <3 7 13 25 48 93 248 641>;
   st,adc-sequencer = <1>;
  };

  rtc: rtc@44007800 {
   compatible = "st,stm32-rtc";
   reg = <0x44007800 0x400>;
   interrupts = <2 0>;
   clocks = <&rcc (0x0A8) (1 << 21U)>;
   prescaler = <32768>;
   alarms-count = <2>;
   alrm-exti-line = <17>;
   status = "disabled";
  };

  timers1: timers@40012c00 {
   compatible = "st,stm32-timers";
   reg = <0x40012c00 0x400>;
   clocks = <&rcc (0x0A4) (1 << 11U)>;
   resets = <&rctl (((0x7C) << 5U) | (11U))>;
   interrupts = <41 0>, <42 0>, <43 0>, <44 0>;
   interrupt-names = "brk", "up", "trgcom", "cc";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };
  };

  timers2: timers@40000000 {
   compatible = "st,stm32-timers";
   reg = <0x40000000 0x400>;
   clocks = <&rcc (0x09c) (1 << 0U)>;
   resets = <&rctl (((0x74) << 5U) | (0U))>;
   interrupts = <45 0>;
   interrupt-names = "global";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers3: timers@40000400 {
   compatible = "st,stm32-timers";
   reg = <0x40000400 0x400>;
   clocks = <&rcc (0x09c) (1 << 1U)>;
   resets = <&rctl (((0x74) << 5U) | (1U))>;
   interrupts = <46 0>;
   interrupt-names = "global";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers6: timers@40001000 {
   compatible = "st,stm32-timers";
   reg = <0x40001000 0x400>;
   clocks = <&rcc (0x09c) (1 << 4U)>;
   resets = <&rctl (((0x74) << 5U) | (4U))>;
   interrupts = <49 0>;
   interrupt-names = "global";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers7: timers@40001400 {
   compatible = "st,stm32-timers";
   reg = <0x40001400 0x400>;
   clocks = <&rcc (0x09c) (1 << 5U)>;
   resets = <&rctl (((0x74) << 5U) | (5U))>;
   interrupts = <50 0>;
   interrupt-names = "global";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  i2c1: i2c@40005400 {
   compatible = "st,stm32-i2c-v2";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40005400 0x400>;
   clocks = <&rcc (0x09c) (1 << 21U)>;
   interrupts = <51 0>, <52 0>;
   interrupt-names = "event", "error";
   status = "disabled";
  };

  i2c2: i2c@40005800 {
   compatible = "st,stm32-i2c-v2";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40005800 0x400>;
   clocks = <&rcc (0x09c) (1 << 22U)>;
   interrupts = <53 0>, <54 0>;
   interrupt-names = "event", "error";
   status = "disabled";
  };

  spi1: spi@40013000 {
   compatible = "st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40013000 0x400>;
   interrupts = <55 5>;
   clocks = <&rcc (0x0A4) (1 << 12U)>,
     <&rcc ((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) ((((0xE0) & 0xFFU) << 0U) | (((0) & 0x1FU) << 8U) | (((7) & 0x7U) << 13U) | (((0) & 0x7U) << 16U))>;
   status = "disabled";
  };

  spi2: spi@40003800 {
   compatible = "st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003800 0x400>;
   interrupts = <56 5>;
   clocks = <&rcc (0x09c) (1 << 14U)>,
     <&rcc ((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) ((((0xE0) & 0xFFU) << 0U) | (((3) & 0x1FU) << 8U) | (((7) & 0x7U) << 13U) | (((0) & 0x7U) << 16U))>;
   status = "disabled";
  };

  spi3: spi@40003c00 {
   compatible = "st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003c00 0x400>;
   interrupts = <57 5>;
   clocks = <&rcc (0x09c) (1 << 15U)>,
     <&rcc ((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) ((((0xE0) & 0xFFU) << 0U) | (((6) & 0x1FU) << 8U) | (((7) & 0x7U) << 13U) | (((0) & 0x7U) << 16U))>;
   status = "disabled";
  };

  fdcan1: can@4000a400 {
   compatible = "st,stm32-fdcan";
   reg = <0x4000a400 0x400>, <0x4000ac00 0x350>;
   reg-names = "m_can", "message_ram";
   interrupts = <39 0>, <40 0>;
   interrupt-names = "int0", "int1";
   clocks = <&rcc (0x0A0) (1 << 9U)>;
   bosch,mram-cfg = <0x0 28 8 3 3 0 3 3>;
   status = "disabled";
  };

  rng: rng@420c0800 {
   compatible = "st,stm32-rng";
   reg = <0x420c0800 0x400>;
   clocks = <&rcc (0x08C) (1 << 18U)>;
   interrupts = <114 0>;
   nist-config = <0xf00d00>;
   health-test-config = <0xaac7>;
   status = "disabled";
  };

  mac: ethernet@40028000 {
   compatible = "st,stm32h7-ethernet", "st,stm32-ethernet";
   reg = <0x40028000 0x8000>;
   interrupts = <106 0>;
   clock-names = "stmmaceth", "mac-clk-tx", "mac-clk-rx";
   clocks = <&rcc (0x088) (1 << 19U)>,
     <&rcc (0x088) (1 << 20U)>,
     <&rcc (0x088) (1 << 21U)>;
   status = "disabled";

   mdio: mdio {
    compatible = "st,stm32-mdio";
    #address-cells = <1>;
    #size-cells = <0>;
    status = "disabled";
   };
  };

  gpdma1: dma@40020000 {
   compatible = "st,stm32u5-dma";
   #dma-cells = <3>;
   reg = <0x40020000 0x1000>;
   interrupts = <27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0>;
   clocks = <&rcc (0x088) (1 << 0U)>;
   dma-channels = <8>;
   dma-requests = <140>;
   dma-offset = <0>;
   status = "disabled";
  };

  gpdma2: dma@40021000 {
   compatible = "st,stm32u5-dma";
   #dma-cells = <3>;
   reg = <0x40021000 0x1000>;
   interrupts = <90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0>;
   clocks = <&rcc (0x088) (1 << 1U)>;
   dma-channels = <8>;
   dma-requests = <140>;
   dma-offset = <8>;
   status = "disabled";
  };

  i2s1: i2s@40013000 {
   compatible = "st,stm32h7-i2s", "st,stm32-i2s";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40013000 0x400>;
   clocks = <&rcc (0x0A4) (1 << 12U)>,
    <&rcc ((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) ((((0xE0) & 0xFFU) << 0U) | (((0) & 0x1FU) << 8U) | (((7) & 0x7U) << 13U) | (((0) & 0x7U) << 16U))>;
   dmas = <&gpdma1 0 7 ((((1 & 0x3) << 6) | ((1 & 0x1) << 10)) |(((1 & 0x3) << 11) | ((1 & 0x3) << 13)) | ((2 & 0x3) << 16))

    &gpdma1 1 6 ((((2 & 0x3) << 6) | ((1 & 0x1) << 10)) | (((1 & 0x3) << 11) | ((1 & 0x3) << 13)) | ((2 & 0x3) << 16))>;

   dma-names = "tx", "rx";
   interrupts = <55 3>;
   status = "disabled";
  };

  i2s2: i2s@40003800 {
   compatible = "st,stm32h7-i2s", "st,stm32-i2s";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003800 0x400>;
   clocks = <&rcc (0x09c) (1 << 14U)>,
    <&rcc ((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) ((((0xE0) & 0xFFU) << 0U) | (((3) & 0x1FU) << 8U) | (((7) & 0x7U) << 13U) | (((0) & 0x7U) << 16U))>;
   dmas = <&gpdma1 2 9 ((((1 & 0x3) << 6) | ((1 & 0x1) << 10)) | (((1 & 0x3) << 11) | ((1 & 0x3) << 13)) | ((2 & 0x3) << 16))

    &gpdma1 3 8 ((((2 & 0x3) << 6) | ((1 & 0x1) << 10)) | (((1 & 0x3) << 11) | ((1 & 0x3) << 13)) | ((2 & 0x3) << 16))>;

   dma-names = "tx", "rx";
   interrupts = <56 3>;
   status = "disabled";
  };

  i2s3: i2s@40003c00 {
   compatible = "st,stm32h7-i2s", "st,stm32-i2s";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003c00 0x400>;
   clocks = <&rcc (0x09c) (1 << 15U)>,
    <&rcc ((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) ((((0xE0) & 0xFFU) << 0U) | (((6) & 0x1FU) << 8U) | (((7) & 0x7U) << 13U) | (((0) & 0x7U) << 16U))>;
   dmas = <&gpdma1 4 11 ((((1 & 0x3) << 6) | ((1 & 0x1) << 10)) | (((1 & 0x3) << 11) | ((1 & 0x3) << 13)) | ((2 & 0x3) << 16))

    &gpdma1 5 10 ((((2 & 0x3) << 6) | ((1 & 0x1) << 10)) | (((1 & 0x3) << 11) | ((1 & 0x3) << 13)) | ((2 & 0x3) << 16))>;

   dma-names = "tx", "rx";
   interrupts = <57 3>;
   status = "disabled";
  };

  usb: usb@40016000 {
   compatible = "st,stm32-usb";
   reg = <0x40016000 0x400>;
   interrupts = <74 0>;
   interrupt-names = "usb";
   num-bidir-endpoints = <8>;
   ram-size = <2048>;
   phys = <&usb_fs_phy>;
   clocks = <&rcc (0x0A4) (1 << 24U)>,
     <&rcc ((((0x003 + 1) + 1) + 1) + 1) ((((0xE4) & 0xFFU) << 0U) | (((4) & 0x1FU) << 8U) | (((3) & 0x7U) << 13U) | (((3) & 0x7U) << 16U))>;
   status = "disabled";
  };

  digi_die_temp: digi_dietemp@40008c00 {
   compatible = "st,stm32-digi-temp";
   reg = <0x40008c00 0x400>;
   interrupts = <113 0>;
   interrupt-names = "digi_temp";
   clocks = <&rcc (0x0A0) (1 << 3U)>;
   status = "disabled";
  };
 };

 die_temp: dietemp {
  compatible = "st,stm32-temp-cal";
  ts-cal1-addr = <0x08fff814>;
  ts-cal2-addr = <0x08fff818>;
  ts-cal1-temp = <30>;
  ts-cal2-temp = <130>;
  ts-cal-vrefanalog = <3300>;
  ts-cal-resolution = <12>;
  io-channels = <&adc1 16>;
  status = "disabled";
 };

 vref: vref {
  compatible = "st,stm32-vref";
  vrefint-cal-addr = <0x08FFF810>;
  vrefint-cal-mv = <3300>;
  io-channels = <&adc1 17>;
  status = "disabled";
 };

 vbat: vbat {
  compatible = "st,stm32-vbat";
  ratio = <4>;
  io-channels = <&adc1 2>;
  status = "disabled";
 };

 usb_fs_phy: usbphy {
  compatible = "usb-nop-xceiv";
  #phy-cells = <0>;
 };

 smbus1: smbus1 {
  compatible = "st,stm32-smbus";
  #address-cells = <1>;
  #size-cells = <0>;
  i2c = <&i2c1>;
  status = "disabled";
 };

 smbus2: smbus2 {
  compatible = "st,stm32-smbus";
  #address-cells = <1>;
  #size-cells = <0>;
  i2c = <&i2c2>;
  status = "disabled";
 };
};

&nvic {
 arm,num-irq-priority-bits = <4>;
};
# 8 "C:/deviot/zephyrproject/zephyr/dts/arm/st/h5/stm32h562.dtsi" 2 3 4
# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/flash_controller/ospi.h" 1 3 4
# 9 "C:/deviot/zephyrproject/zephyr/dts/arm/st/h5/stm32h562.dtsi" 2 3 4

# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/flash_controller/xspi.h" 1 3 4
# 11 "C:/deviot/zephyrproject/zephyr/dts/arm/st/h5/stm32h562.dtsi" 2 3 4


/ {
 clocks {

  pll3: pll3 {
   #clock-cells = <0>;
   compatible = "st,stm32u5-pll-clock";
   status = "disabled";
  };
 };

 soc {
  compatible = "st,stm32h562", "st,stm32h5", "simple-bus";

  pinctrl: pin-controller@42020000 {
   gpioe: gpio@42021000 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x42021000 0x400>;
    clocks = <&rcc (0x08C) (1 << 4U)>;
   };

   gpiof: gpio@42021400 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x42021400 0x400>;
    clocks = <&rcc (0x08C) (1 << 5U)>;
   };

   gpiog: gpio@42021800 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x42021800 0x400>;
    clocks = <&rcc (0x08C) (1 << 6U)>;
   };

   gpioi: gpio@42022000 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x42022000 0x400>;
    clocks = <&rcc (0x08C) (1 << 8U)>;
   };
  };

  sram1: memory@20000000 {
   compatible = "zephyr,memory-region", "mmio-sram";
   reg = <0x20000000 ((256) * 1024)>;
   zephyr,memory-region = "SRAM1";
  };

  sram2: memory@20040000 {
   compatible = "zephyr,memory-region", "mmio-sram";
   reg = <0x20040000 ((64) * 1024)>;
   zephyr,memory-region = "SRAM2";
  };

  sram3: memory@20050000 {
   compatible = "zephyr,memory-region", "mmio-sram";
   reg = <0x20050000 ((320) * 1024)>;
   zephyr,memory-region = "SRAM3";
  };

  backup_sram: memory@40036400 {
   reg = <0x40036400 ((4) * 1024)>;
  };

  lptim3: timers@44004800 {
   compatible = "st,stm32-lptim";
   clocks = <&rcc (0x0A8) (1 << 12U)>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x44004800 0x400>;
   interrupts = <127 1>;
   interrupt-names = "wakeup";
   status = "disabled";
  };

  lptim4: timers@44004c00 {
   compatible = "st,stm32-lptim";
   clocks = <&rcc (0x0A8) (1 << 13U)>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x44004c00 0x400>;
   interrupts = <128 1>;
   interrupt-names = "wakeup";
   status = "disabled";
  };

  lptim5: timers@44005000 {
   compatible = "st,stm32-lptim";
   clocks = <&rcc (0x0A8) (1 << 14U)>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x44005000 0x400>;
   interrupts = <129 1>;
   interrupt-names = "wakeup";
   status = "disabled";
  };

  lptim6: timers@44005400 {
   compatible = "st,stm32-lptim";
   clocks = <&rcc (0x0A8) (1 << 15U)>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x44005400 0x400>;
   interrupts = <130 1>;
   interrupt-names = "wakeup";
   status = "disabled";
  };

  uart4: serial@40004c00 {
   compatible = "st,stm32-uart";
   reg = <0x40004c00 0x400>;
   clocks = <&rcc (0x09c) (1 << 19U)>;
   resets = <&rctl (((0x74) << 5U) | (19U))>;
   interrupts = <61 0>;
   status = "disabled";
  };

  uart5: serial@40005000 {
   compatible = "st,stm32-uart";
   reg = <0x40005000 0x400>;
   clocks = <&rcc (0x09c) (1 << 20U)>;
   resets = <&rctl (((0x74) << 5U) | (20U))>;
   interrupts = <62 0>;
   status = "disabled";
  };

  uart7: serial@40007800 {
   compatible = "st,stm32-uart";
   reg = <0x40007800 0x400>;
   clocks = <&rcc (0x09c) (1 << 30U)>;
   resets = <&rctl (((0x74) << 5U) | (30U))>;
   interrupts = <98 0>;
   status = "disabled";
  };

  uart8: serial@40007c00 {
   compatible = "st,stm32-uart";
   reg = <0x40007c00 0x400>;
   clocks = <&rcc (0x09c) (1 << 31U)>;
   resets = <&rctl (((0x74) << 5U) | (31U))>;
   interrupts = <99 0>;
   status = "disabled";
  };

  uart9: serial@40008000 {
   compatible = "st,stm32-uart";
   reg = <0x40008000 0x400>;
   clocks = <&rcc (0x0A0) (1 << 0U)>;
   resets = <&rctl (((0x78) << 5U) | (0U))>;
   interrupts = <100 0>;
   status = "disabled";
  };

  usart6: serial@40006400 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40006400 0x400>;
   clocks = <&rcc (0x09c) (1 << 25U)>;
   resets = <&rctl (((0x74) << 5U) | (25U))>;
   interrupts = <85 0>;
   status = "disabled";
  };

  usart10: serial@40006800 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40006800 0x400>;
   clocks = <&rcc (0x09c) (1 << 26U)>;
   resets = <&rctl (((0x74) << 5U) | (26U))>;
   interrupts = <86 0>;
   status = "disabled";
  };

  usart11: serial@40006c00 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40006c00 0x400>;
   clocks = <&rcc (0x09c) (1 << 27U)>;
   resets = <&rctl (((0x74) << 5U) | (27U))>;
   interrupts = <87 0>;
   status = "disabled";
  };

  uart12: serial@40008400 {
   compatible = "st,stm32-uart";
   reg = <0x40008400 0x400>;
   clocks = <&rcc (0x0A0) (1 << 1U)>;
   resets = <&rctl (((0x78) << 5U) | (1U))>;
   interrupts = <101 0>;
   status = "disabled";
  };

  i2c3: i2c@44002800 {
   compatible = "st,stm32-i2c-v2";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x44002800 0x400>;
   clocks = <&rcc (0x0A8) (1 << 7U)>;
   interrupts = <80 0>, <81 0>;
   interrupt-names = "event", "error";
   status = "disabled";
  };

  i2c4: i2c@44002c00 {
   compatible = "st,stm32-i2c-v2";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x44002c00 0x400>;
   clocks = <&rcc (0x0A8) (1 << 8U)>;
   interrupts = <125 0>, <126 0>;
   interrupt-names = "event", "error";
   status = "disabled";
  };

  spi4: spi@40014c00 {
   compatible = "st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40014c00 0x400>;
   interrupts = <82 5>;
   clocks = <&rcc (0x0A4) (1 << 19U)>;
   status = "disabled";
  };

  spi5: spi@44002000 {
   compatible = "st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x44002000 0x400>;
   interrupts = <83 5>;
   clocks = <&rcc (0x0A8) (1 << 5U)>;
   status = "disabled";
  };

  spi6: spi@40015000 {
   compatible = "st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40015000 0x400>;
   interrupts = <84 5>;
   clocks = <&rcc (0x0A4) (1 << 20U)>;
   status = "disabled";
  };

  xspi1: xspi@47001400 {
   compatible = "st,stm32-xspi";
   reg = <0x47001400 0x400>;
   interrupts = <78 0>;
   clock-names = "xspix", "xspi-ker";
   clocks = <&rcc (0x094) (1 << 20U)>,
    <&rcc ((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) ((((0xE4) & 0xFFU) << 0U) | (((0) & 0x1FU) << 8U) | (((3) & 0x7U) << 13U) | (((1) & 0x7U) << 16U))>;
   #address-cells = <1>;
   #size-cells = <0>;
   status = "disabled";
  };

  adc2: adc@42028100 {
   compatible = "st,stm32-adc";
   reg = <0x42028100 0x400>;
   clocks = <&rcc (0x08C) (1 << 10U)>;
   interrupts = <69 0>;
   status = "disabled";
   vref-mv = <3300>;
   #io-channel-cells = <1>;
   resolutions = <((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((3) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (2)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x00) & ((1UL << (3)) - 1UL)) << 16U) | (((12) & ((1UL << (13)) - 1UL)) << 19U))
     ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((3) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (2)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x01) & ((1UL << (3)) - 1UL)) << 16U) | (((10) & ((1UL << (13)) - 1UL)) << 19U))
     ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((3) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (2)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x02) & ((1UL << (3)) - 1UL)) << 16U) | (((8) & ((1UL << (13)) - 1UL)) << 19U))
     ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((3) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (2)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x03) & ((1UL << (3)) - 1UL)) << 16U) | (((6) & ((1UL << (13)) - 1UL)) << 19U))>;
   sampling-times = <3 7 13 25 48 93 248 641>;
   st,adc-sequencer = <1>;
  };

  timers4: timers@40000800 {
   compatible = "st,stm32-timers";
   reg = <0x40000800 0x400>;
   clocks = <&rcc (0x09c) (1 << 2U)>;
   resets = <&rctl (((0x74) << 5U) | (2U))>;
   interrupts = <47 0>;
   interrupt-names = "global";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers5: timers@40000c00 {
   compatible = "st,stm32-timers";
   reg = <0x40000c00 0x400>;
   clocks = <&rcc (0x09c) (1 << 3U)>;
   resets = <&rctl (((0x74) << 5U) | (3U))>;
   interrupts = <48 0>;
   interrupt-names = "global";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers12: timers@40001800 {
   compatible = "st,stm32-timers";
   reg = <0x40001800 0x400>;
   clocks = <&rcc (0x09c) (1 << 6U)>;
   resets = <&rctl (((0x74) << 5U) | (6U))>;
   interrupts = <120 0>;
   interrupt-names = "global";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers13: timers@40001c00 {
   compatible = "st,stm32-timers";
   reg = <0x40001c00 0x400>;
   clocks = <&rcc (0x09c) (1 << 7U)>;
   resets = <&rctl (((0x74) << 5U) | (7U))>;
   interrupts = <121 0>;
   interrupt-names = "global";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers14: timers@40002000 {
   compatible = "st,stm32-timers";
   reg = <0x40002000 0x400>;
   clocks = <&rcc (0x09c) (1 << 8U)>;
   resets = <&rctl (((0x74) << 5U) | (8U))>;
   interrupts = <122 0>;
   interrupt-names = "global";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers15: timers@40014000 {
   compatible = "st,stm32-timers";
   reg = <0x40014000 0x400>;
   clocks = <&rcc (0x0A4) (1 << 16U)>;
   resets = <&rctl (((0x7C) << 5U) | (16U))>;
   interrupts = <71 0>;
   interrupt-names = "global";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers16: timers@40014400 {
   compatible = "st,stm32-timers";
   reg = <0x40014400 0x400>;
   clocks = <&rcc (0x0A4) (1 << 17U)>;
   resets = <&rctl (((0x7C) << 5U) | (17U))>;
   interrupts = <72 0>;
   interrupt-names = "global";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers17: timers@40014800 {
   compatible = "st,stm32-timers";
   reg = <0x40014800 0x400>;
   clocks = <&rcc (0x0A4) (1 << 18U)>;
   resets = <&rctl (((0x7C) << 5U) | (18U))>;
   interrupts = <73 0>;
   interrupt-names = "global";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  aes: aes@420c0000 {
   compatible = "st,stm32-aes";
   reg = <0x420c0000 0x400>;
   clocks = <&rcc (0x08C) (1 << 16U)>;
   resets = <&rctl (((0x64) << 5U) | (16U))>;
   interrupts = <116 0>;
   status = "disabled";
  };

  fdcan2: can@4000a800 {
   compatible = "st,stm32-fdcan";
   reg = <0x4000a800 0x400>, <0x4000ac00 0x6a0>;
   reg-names = "m_can", "message_ram";
   interrupts = <109 0>, <110 0>;
   interrupt-names = "int0", "int1";

   clocks = <&rcc (0x0A0) (1 << 9U)>;
   bosch,mram-cfg = <0x350 28 8 3 3 0 3 3>;
   status = "disabled";
  };

  sdmmc1: sdmmc@46008000 {
   compatible = "st,stm32-sdmmc";
   reg = <0x46008000 0x400>;
   clocks = <&rcc (0x094) (1 << 11U)>,
     <&rcc ((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) ((((0xE4) & 0xFFU) << 0U) | (((6) & 0x1FU) << 8U) | (((1) & 0x7U) << 13U) | (((0) & 0x7U) << 16U))>;
   resets = <&rctl (((0x6C) << 5U) | (11U))>;
   interrupts = <79 0>;
   status = "disabled";
  };

  fmc: memory-controller@47000400 {
   compatible = "st,stm32-fmc";
   reg = <0x47000400 0x400>;
   clocks = <&rcc (0x094) (1 << 16U)>;
   status = "disabled";
  };
 };

 smbus3: smbus3 {
  compatible = "st,stm32-smbus";
  #address-cells = <1>;
  #size-cells = <0>;
  i2c = <&i2c3>;
  status = "disabled";
 };

 smbus4: smbus4 {
  compatible = "st,stm32-smbus";
  #address-cells = <1>;
  #size-cells = <0>;
  i2c = <&i2c4>;
  status = "disabled";
 };
};
# 8 "C:/deviot/zephyrproject/zephyr/dts/arm/st/h5/stm32h563.dtsi" 2 3 4

/ {
 soc {
  compatible = "st,stm32h563", "st,stm32h5", "simple-bus";

  sdmmc2: sdmmc@46008c00 {
   compatible = "st,stm32-sdmmc";
   reg = <0x46008c00 0x400>;
   clocks = <&rcc (0x094) (1 << 12U)>,
     <&rcc ((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) ((((0xE4) & 0xFFU) << 0U) | (((7) & 0x1FU) << 8U) | (((1) & 0x7U) << 13U) | (((0) & 0x7U) << 16U))>;
   resets = <&rctl (((0x6C) << 5U) | (12U))>;
   interrupts = <102 0>;
   status = "disabled";
  };
 };
};
# 9 "C:/deviot/zephyrproject/zephyr/dts/arm/st/h5/stm32h563Xi.dtsi" 2 3 4

/ {
 soc {
  flash-controller@40022000 {
   flash0: flash@8000000 {
    reg = <0x08000000 ((2) * 1024 * 1024)>;
   };
  };
 };
};
# 9 "C:/deviot/zephyrproject/zephyr/boards/st/nucleo_h563zi/nucleo_h563zi-common.dtsi" 2
# 1 "C:/deviot/zephyrproject/modules/hal/stm32/dts/st/h5/stm32h563zitx-pinctrl.dtsi" 1 3 4






# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl.h" 1 3 4
# 10 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl.h" 3 4
# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl-common.h" 1 3 4
# 11 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl.h" 2 3 4
# 8 "C:/deviot/zephyrproject/modules/hal/stm32/dts/st/h5/stm32h563zitx-pinctrl.dtsi" 2 3 4

/ {
 soc {
  pinctrl: pin-controller@42020000 {



   /omit-if-no-ref/ adc1_inn1_pa0: adc1_inn1_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp0_pa0: adc1_inp0_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp1_pa1: adc1_inp1_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp14_pa2: adc1_inp14_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp15_pa3: adc1_inp15_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp18_pa4: adc1_inp18_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inn18_pa5: adc1_inn18_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp19_pa5: adc1_inp19_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp3_pa6: adc1_inp3_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inn3_pa7: adc1_inn3_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp7_pa7: adc1_inp7_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inn5_pb0: adc1_inn5_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp9_pb0: adc1_inp9_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp5_pb1: adc1_inp5_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp10_pc0: adc1_inp10_pc0 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inn10_pc1: adc1_inn10_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp11_pc1: adc1_inp11_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inn11_pc2: adc1_inn11_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp12_pc2: adc1_inp12_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inn12_pc3: adc1_inn12_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp13_pc3: adc1_inp13_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp4_pc4: adc1_inp4_pc4 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inn4_pc5: adc1_inn4_pc5 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp8_pc5: adc1_inp8_pc5 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp2_pf11: adc1_inp2_pf11 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inn2_pf12: adc1_inn2_pf12 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp6_pf12: adc1_inp6_pf12 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inn1_pa0: adc2_inn1_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp0_pa0: adc2_inp0_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp1_pa1: adc2_inp1_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp14_pa2: adc2_inp14_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp15_pa3: adc2_inp15_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp18_pa4: adc2_inp18_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inn18_pa5: adc2_inn18_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp19_pa5: adc2_inp19_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp3_pa6: adc2_inp3_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inn3_pa7: adc2_inn3_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp7_pa7: adc2_inp7_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inn5_pb0: adc2_inn5_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp9_pb0: adc2_inp9_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp5_pb1: adc2_inp5_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp10_pc0: adc2_inp10_pc0 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inn10_pc1: adc2_inn10_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp11_pc1: adc2_inp11_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inn11_pc2: adc2_inn11_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp12_pc2: adc2_inp12_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inn12_pc3: adc2_inn12_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp13_pc3: adc2_inp13_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp4_pc4: adc2_inp4_pc4 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inn4_pc5: adc2_inn4_pc5 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp8_pc5: adc2_inp8_pc5 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp2_pf13: adc2_inp2_pf13 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inn2_pf14: adc2_inn2_pf14 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp6_pf14: adc2_inp6_pf14 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ analog_pa0: analog_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa1: analog_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa2: analog_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa3: analog_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa4: analog_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa5: analog_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa6: analog_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa7: analog_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa8: analog_pa8 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa9: analog_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa10: analog_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa11: analog_pa11 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa12: analog_pa12 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa13: analog_pa13 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa14: analog_pa14 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa15: analog_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb0: analog_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb1: analog_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb2: analog_pb2 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb3: analog_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb4: analog_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb5: analog_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb6: analog_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb7: analog_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb8: analog_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb9: analog_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb10: analog_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb12: analog_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb13: analog_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb14: analog_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb15: analog_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc0: analog_pc0 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc1: analog_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc2: analog_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc3: analog_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc4: analog_pc4 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc5: analog_pc5 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc6: analog_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc7: analog_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc8: analog_pc8 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc9: analog_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc10: analog_pc10 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc11: analog_pc11 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc12: analog_pc12 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc13: analog_pc13 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc14: analog_pc14 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc15: analog_pc15 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd0: analog_pd0 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd1: analog_pd1 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd2: analog_pd2 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd3: analog_pd3 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd4: analog_pd4 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd5: analog_pd5 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd6: analog_pd6 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd7: analog_pd7 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd8: analog_pd8 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd9: analog_pd9 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd10: analog_pd10 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd11: analog_pd11 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd12: analog_pd12 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd13: analog_pd13 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd14: analog_pd14 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd15: analog_pd15 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe0: analog_pe0 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe2: analog_pe2 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe3: analog_pe3 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe4: analog_pe4 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe5: analog_pe5 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe6: analog_pe6 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe7: analog_pe7 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe8: analog_pe8 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe9: analog_pe9 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe10: analog_pe10 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe11: analog_pe11 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe12: analog_pe12 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe13: analog_pe13 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe14: analog_pe14 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe15: analog_pe15 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf0: analog_pf0 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf1: analog_pf1 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf2: analog_pf2 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf3: analog_pf3 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf4: analog_pf4 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf5: analog_pf5 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf6: analog_pf6 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf7: analog_pf7 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf8: analog_pf8 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf9: analog_pf9 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf10: analog_pf10 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf11: analog_pf11 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf12: analog_pf12 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf13: analog_pf13 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf14: analog_pf14 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf15: analog_pf15 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg0: analog_pg0 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg1: analog_pg1 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg2: analog_pg2 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg3: analog_pg3 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg4: analog_pg4 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg5: analog_pg5 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg6: analog_pg6 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg7: analog_pg7 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg8: analog_pg8 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg9: analog_pg9 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg10: analog_pg10 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg11: analog_pg11 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg12: analog_pg12 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg13: analog_pg13 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg14: analog_pg14 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg15: analog_pg15 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph0: analog_ph0 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph1: analog_ph1 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ dac1_out1_pa4: dac1_out1_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ dac1_out2_pa5: dac1_out2_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ dcmi_hsync_pa4: dcmi_hsync_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_pixclk_pa6: dcmi_pixclk_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d3_pa8: dcmi_d3_pa8 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d0_pa9: dcmi_d0_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d1_pa10: dcmi_d1_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d7_pb4: dcmi_d7_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d5_pb6: dcmi_d5_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_vsync_pb7: dcmi_vsync_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d6_pb8: dcmi_d6_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d7_pb9: dcmi_d7_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d2_pb15: dcmi_d2_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d0_pc6: dcmi_d0_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d1_pc7: dcmi_d1_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d2_pc8: dcmi_d2_pc8 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d3_pc9: dcmi_d3_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d4_pc11: dcmi_d4_pc11 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d5_pd3: dcmi_d5_pd3 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d2_pe0: dcmi_d2_pe0 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d3_pe2: dcmi_d3_pe2 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d4_pe4: dcmi_d4_pe4 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d6_pe5: dcmi_d6_pe5 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d7_pe6: dcmi_d7_pe6 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_vsync_pg9: dcmi_vsync_pg9 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d2_pg10: dcmi_d2_pg10 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d3_pg11: dcmi_d3_pg11 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_col_pa3: eth_col_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_crs_pa0: eth_crs_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_crs_dv_pa7: eth_crs_dv_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_mdc_pc1: eth_mdc_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_mdio_pa2: eth_mdio_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_pps_out_pb5: eth_pps_out_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_pps_out_pg8: eth_pps_out_pg8 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_ref_clk_pa1: eth_ref_clk_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_rxd0_pc4: eth_rxd0_pc4 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_rxd1_pc5: eth_rxd1_pc5 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_rxd2_pb0: eth_rxd2_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_rxd3_pb1: eth_rxd3_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_rx_clk_pa1: eth_rx_clk_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_rx_dv_pa7: eth_rx_dv_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_rx_er_pb10: eth_rx_er_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_txd0_pb12: eth_txd0_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_txd0_pc10: eth_txd0_pc10 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_txd0_pg13: eth_txd0_pg13 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_txd1_pb15: eth_txd1_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_txd1_pg12: eth_txd1_pg12 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_txd1_pg14: eth_txd1_pg14 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_txd2_pc2: eth_txd2_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_txd3_pb8: eth_txd3_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_txd3_pe2: eth_txd3_pe2 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_tx_clk_pc3: eth_tx_clk_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_tx_en_pa5: eth_tx_en_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_tx_en_pg11: eth_tx_en_pg11 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ fdcan1_rx_pa11: fdcan1_rx_pa11 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan1_rx_pb8: fdcan1_rx_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan1_rx_pd0: fdcan1_rx_pd0 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan1_rx_pe0: fdcan1_rx_pe0 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan2_rx_pb5: fdcan2_rx_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan2_rx_pb12: fdcan2_rx_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan2_rx_pd9: fdcan2_rx_pd9 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ fdcan1_tx_pa12: fdcan1_tx_pa12 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan1_tx_pb7: fdcan1_tx_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan1_tx_pb9: fdcan1_tx_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan1_tx_pd1: fdcan1_tx_pd1 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan1_tx_pd5: fdcan1_tx_pd5 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan2_tx_pa10: fdcan2_tx_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan2_tx_pb6: fdcan2_tx_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan2_tx_pb13: fdcan2_tx_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ fmc_nwe_pa7: fmc_nwe_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdnwe_pa7: fmc_sdnwe_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_noe_pa8: fmc_noe_pa8 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nwe_pa9: fmc_nwe_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nbl1_pa15: fmc_nbl1_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdcke1_pb5: fmc_sdcke1_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdne1_pb6: fmc_sdne1_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nl_pb7: fmc_nl_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a25_pc0: fmc_a25_pc0 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdnwe_pc0: fmc_sdnwe_pc0 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdne0_pc2: fmc_sdne0_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdcke0_pc3: fmc_sdcke0_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdne0_pc4: fmc_sdne0_pc4 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdcke0_pc5: fmc_sdcke0_pc5 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nwait_pc6: fmc_nwait_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_ne1_pc7: fmc_ne1_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_int_pc8: fmc_int_pc8 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nce_pc8: fmc_nce_pc8 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_ne2_pc8: fmc_ne2_pc8 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d2_pd0: fmc_d2_pd0 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d3_pd1: fmc_d3_pd1 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_clk_pd3: fmc_clk_pd3 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_noe_pd4: fmc_noe_pd4 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nwe_pd5: fmc_nwe_pd5 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nwait_pd6: fmc_nwait_pd6 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nce_pd7: fmc_nce_pd7 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_ne1_pd7: fmc_ne1_pd7 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d13_pd8: fmc_d13_pd8 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d14_pd9: fmc_d14_pd9 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d15_pd10: fmc_d15_pd10 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a16_pd11: fmc_a16_pd11 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a17_pd12: fmc_a17_pd12 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a18_pd13: fmc_a18_pd13 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d0_pd14: fmc_d0_pd14 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d1_pd15: fmc_d1_pd15 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nbl0_pe0: fmc_nbl0_pe0 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a23_pe2: fmc_a23_pe2 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a19_pe3: fmc_a19_pe3 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a20_pe4: fmc_a20_pe4 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a21_pe5: fmc_a21_pe5 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a22_pe6: fmc_a22_pe6 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d4_pe7: fmc_d4_pe7 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d5_pe8: fmc_d5_pe8 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d6_pe9: fmc_d6_pe9 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d7_pe10: fmc_d7_pe10 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d8_pe11: fmc_d8_pe11 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d9_pe12: fmc_d9_pe12 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d10_pe13: fmc_d10_pe13 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d11_pe14: fmc_d11_pe14 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d12_pe15: fmc_d12_pe15 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a0_pf0: fmc_a0_pf0 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a1_pf1: fmc_a1_pf1 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a2_pf2: fmc_a2_pf2 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a3_pf3: fmc_a3_pf3 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a4_pf4: fmc_a4_pf4 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a5_pf5: fmc_a5_pf5 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdnras_pf11: fmc_sdnras_pf11 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a6_pf12: fmc_a6_pf12 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a7_pf13: fmc_a7_pf13 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a8_pf14: fmc_a8_pf14 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a9_pf15: fmc_a9_pf15 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a10_pg0: fmc_a10_pg0 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a11_pg1: fmc_a11_pg1 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a12_pg2: fmc_a12_pg2 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a13_pg3: fmc_a13_pg3 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a14_pg4: fmc_a14_pg4 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a15_pg5: fmc_a15_pg5 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_ne3_pg6: fmc_ne3_pg6 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_int_pg7: fmc_int_pg7 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdclk_pg8: fmc_sdclk_pg8 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nce_pg9: fmc_nce_pg9 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_ne2_pg9: fmc_ne2_pg9 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_ne3_pg10: fmc_ne3_pg10 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_ne4_pg12: fmc_ne4_pg12 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a24_pg13: fmc_a24_pg13 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a25_pg14: fmc_a25_pg14 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdncas_pg15: fmc_sdncas_pg15 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ i2c1_scl_pb6: i2c1_scl_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c1_scl_pb8: i2c1_scl_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_scl_pb10: i2c2_scl_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_scl_pf1: i2c2_scl_pf1 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c3_scl_pa8: i2c3_scl_pa8 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_scl_pb6: i2c4_scl_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_scl_pb8: i2c4_scl_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_scl_pd12: i2c4_scl_pd12 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_scl_pf5: i2c4_scl_pf5 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_scl_pg7: i2c4_scl_pg7 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ i2c1_sda_pb7: i2c1_sda_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c1_sda_pb9: i2c1_sda_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_sda_pb3: i2c2_sda_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_sda_pb12: i2c2_sda_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_sda_pf0: i2c2_sda_pf0 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c3_sda_pc9: i2c3_sda_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_sda_pb7: i2c4_sda_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_sda_pb9: i2c4_sda_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_sda_pd13: i2c4_sda_pd13 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_sda_pf15: i2c4_sda_pf15 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_sda_pg6: i2c4_sda_pg6 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ i2c1_smba_pb5: i2c1_smba_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ i2c2_smba_pb13: i2c2_smba_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ i2c2_smba_pf2: i2c2_smba_pf2 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ i2c3_smba_pa9: i2c3_smba_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ i2c4_smba_pb5: i2c4_smba_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ i2c4_smba_pd11: i2c4_smba_pd11 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ i2c4_smba_pf13: i2c4_smba_pf13 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
   };



   /omit-if-no-ref/ i2s1_ck_pa5: i2s1_ck_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s1_ck_pb3: i2s1_ck_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s1_ck_pg11: i2s1_ck_pg11 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s2_ck_pa9: i2s2_ck_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s2_ck_pa12: i2s2_ck_pa12 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s2_ck_pb10: i2s2_ck_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s2_ck_pb13: i2s2_ck_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s2_ck_pd3: i2s2_ck_pd3 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s3_ck_pb3: i2s3_ck_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s3_ck_pc10: i2s3_ck_pc10 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ i2s1_mck_pc4: i2s1_mck_pc4 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s2_mck_pc6: i2s2_mck_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s3_mck_pc7: i2s3_mck_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ i2s1_ws_pa4: i2s1_ws_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s1_ws_pa15: i2s1_ws_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s1_ws_pg10: i2s1_ws_pg10 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s2_ws_pa3: i2s2_ws_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s2_ws_pa11: i2s2_ws_pa11 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s2_ws_pb4: i2s2_ws_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s2_ws_pb9: i2s2_ws_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s2_ws_pb12: i2s2_ws_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s3_ws_pa4: i2s3_ws_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s3_ws_pa15: i2s3_ws_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ i3c1_scl_pb6: i3c1_scl_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i3c1_scl_pb8: i3c1_scl_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i3c1_scl_pd12: i3c1_scl_pd12 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i3c1_scl_pf5: i3c1_scl_pf5 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i3c1_scl_pg7: i3c1_scl_pg7 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ i3c1_sda_pb7: i3c1_sda_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i3c1_sda_pb9: i3c1_sda_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i3c1_sda_pd13: i3c1_sda_pd13 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i3c1_sda_pf15: i3c1_sda_pf15 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i3c1_sda_pg6: i3c1_sda_pg6 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ debug_jtms_swdio_pa13: debug_jtms_swdio_pa13 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ debug_jtck_swclk_pa14: debug_jtck_swclk_pa14 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ debug_jtdi_pa15: debug_jtdi_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ debug_jtdo_swo_pb3: debug_jtdo_swo_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ debug_jtrst_pb4: debug_jtrst_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ octospi1_dqs_pa1: octospi1_dqs_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io3_pa1: octospi1_io3_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_clk_pa3: octospi1_clk_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io3_pa6: octospi1_io3_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io2_pa7: octospi1_io2_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io1_pb0: octospi1_io1_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io0_pb1: octospi1_io0_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_clk_pb2: octospi1_clk_pb2 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_dqs_pb2: octospi1_dqs_pb2 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_clk_pb4: octospi1_clk_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_nclk_pb5: octospi1_nclk_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_ncs_pb6: octospi1_ncs_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_ncs_pb10: octospi1_ncs_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_nclk_pb12: octospi1_nclk_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_clk_pb15: octospi1_clk_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io7_pc0: octospi1_io7_pc0 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io4_pc1: octospi1_io4_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io2_pc2: octospi1_io2_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io5_pc2: octospi1_io5_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io0_pc3: octospi1_io0_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io6_pc3: octospi1_io6_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_dqs_pc5: octospi1_dqs_pc5 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io5_pc6: octospi1_io5_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io6_pc7: octospi1_io6_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io0_pc9: octospi1_io0_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io1_pc10: octospi1_io1_pc10 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_ncs_pc11: octospi1_ncs_pc11 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io4_pd4: octospi1_io4_pd4 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io5_pd5: octospi1_io5_pd5 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io6_pd6: octospi1_io6_pd6 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io7_pd7: octospi1_io7_pd7 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io0_pd11: octospi1_io0_pd11 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io1_pd12: octospi1_io1_pd12 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io3_pd13: octospi1_io3_pd13 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io2_pe2: octospi1_io2_pe2 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io4_pe7: octospi1_io4_pe7 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io5_pe8: octospi1_io5_pe8 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io6_pe9: octospi1_io6_pe9 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io7_pe10: octospi1_io7_pe10 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_ncs_pe11: octospi1_ncs_pe11 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io3_pf6: octospi1_io3_pf6 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io2_pf7: octospi1_io2_pf7 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io0_pf8: octospi1_io0_pf8 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io1_pf9: octospi1_io1_pf9 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_clk_pf10: octospi1_clk_pf10 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_nclk_pf11: octospi1_nclk_pf11 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_ncs_pg6: octospi1_ncs_pg6 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io6_pg9: octospi1_io6_pg9 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospi1_io7_pg14: octospi1_io7_pg14 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ rcc_mco_1_pa8: rcc_mco_1_pa8 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ rcc_mco_2_pc9: rcc_mco_2_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ sdmmc1_d0_pa10: sdmmc1_d0_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_cmd_pb2: sdmmc1_cmd_pb2 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_ckin_pb8: sdmmc1_ckin_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d4_pb8: sdmmc1_d4_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_cdir_pb9: sdmmc1_cdir_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d5_pb9: sdmmc1_d5_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d0_pb13: sdmmc1_d0_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d0dir_pc6: sdmmc1_d0dir_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d6_pc6: sdmmc1_d6_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d123dir_pc7: sdmmc1_d123dir_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d7_pc7: sdmmc1_d7_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d0_pc8: sdmmc1_d0_pc8 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d1_pc9: sdmmc1_d1_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d2_pc10: sdmmc1_d2_pc10 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d3_pc11: sdmmc1_d3_pc11 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_ck_pc12: sdmmc1_ck_pc12 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_cmd_pd2: sdmmc1_cmd_pd2 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_cmd_pa0: sdmmc2_cmd_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d2_pb3: sdmmc2_d2_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d3_pb4: sdmmc2_d3_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_ckin_pb7: sdmmc2_ckin_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d5_pb7: sdmmc2_d5_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d4_pb8: sdmmc2_d4_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_ckin_pb9: sdmmc2_ckin_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d5_pb9: sdmmc2_d5_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d0_pb14: sdmmc2_d0_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d1_pb15: sdmmc2_d1_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_ck_pc1: sdmmc2_ck_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d6_pc6: sdmmc2_d6_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d7_pc7: sdmmc2_d7_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_ck_pd6: sdmmc2_ck_pd6 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_cmd_pd7: sdmmc2_cmd_pd7 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d0_pg9: sdmmc2_d0_pg9 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d1_pg10: sdmmc2_d1_pg10 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d2_pg11: sdmmc2_d2_pg11 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d3_pg12: sdmmc2_d3_pg12 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d6_pg13: sdmmc2_d6_pg13 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d7_pg14: sdmmc2_d7_pg14 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ spi1_miso_pa6: spi1_miso_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi1_miso_pb4: spi1_miso_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi1_miso_pg9: spi1_miso_pg9 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_miso_pb14: spi2_miso_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_miso_pc2: spi2_miso_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_miso_pb4: spi3_miso_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_miso_pc11: spi3_miso_pc11 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi4_miso_pe5: spi4_miso_pe5 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi4_miso_pe13: spi4_miso_pe13 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi5_miso_pf8: spi5_miso_pf8 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi6_miso_pa6: spi6_miso_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi6_miso_pb4: spi6_miso_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi6_miso_pg12: spi6_miso_pg12 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };



   /omit-if-no-ref/ spi1_mosi_pa7: spi1_mosi_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi1_mosi_pb5: spi1_mosi_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi1_mosi_pd7: spi1_mosi_pd7 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_mosi_pb15: spi2_mosi_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_mosi_pc1: spi2_mosi_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_mosi_pc3: spi2_mosi_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_mosi_pg1: spi2_mosi_pg1 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_mosi_pb2: spi3_mosi_pb2 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_mosi_pb5: spi3_mosi_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_mosi_pc12: spi3_mosi_pc12 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_mosi_pd6: spi3_mosi_pd6 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi4_mosi_pe6: spi4_mosi_pe6 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi4_mosi_pe14: spi4_mosi_pe14 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi5_mosi_pf9: spi5_mosi_pf9 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi5_mosi_pf11: spi5_mosi_pf11 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi6_mosi_pa7: spi6_mosi_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi6_mosi_pb5: spi6_mosi_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi6_mosi_pg14: spi6_mosi_pg14 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };



   /omit-if-no-ref/ spi1_nss_pa4: spi1_nss_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi1_nss_pa15: spi1_nss_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi1_nss_pg10: spi1_nss_pg10 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi2_nss_pa3: spi2_nss_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi2_nss_pa11: spi2_nss_pa11 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi2_nss_pb4: spi2_nss_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi2_nss_pb9: spi2_nss_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi2_nss_pb12: spi2_nss_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi3_nss_pa4: spi3_nss_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi3_nss_pa15: spi3_nss_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi4_nss_pe4: spi4_nss_pe4 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi4_nss_pe11: spi4_nss_pe11 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi5_nss_pf6: spi5_nss_pf6 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi6_nss_pa0: spi6_nss_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi6_nss_pa4: spi6_nss_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi6_nss_pa15: spi6_nss_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi6_nss_pg8: spi6_nss_pg8 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };



   /omit-if-no-ref/ spi1_sck_pa5: spi1_sck_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi1_sck_pb3: spi1_sck_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi1_sck_pg11: spi1_sck_pg11 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi2_sck_pa9: spi2_sck_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi2_sck_pa12: spi2_sck_pa12 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi2_sck_pb10: spi2_sck_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi2_sck_pb13: spi2_sck_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi2_sck_pd3: spi2_sck_pd3 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi3_sck_pb3: spi3_sck_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi3_sck_pc10: spi3_sck_pc10 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi4_sck_pe2: spi4_sck_pe2 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi4_sck_pe12: spi4_sck_pe12 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi5_sck_pf7: spi5_sck_pf7 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi6_sck_pa5: spi6_sck_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi6_sck_pb3: spi6_sck_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi6_sck_pc12: spi6_sck_pc12 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi6_sck_pg13: spi6_sck_pg13 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ tim1_bkin_pa6: tim1_bkin_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_bkin_pb12: tim1_bkin_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_bkin2_pe6: tim1_bkin2_pe6 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_bkin_pe15: tim1_bkin_pe15 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_bkin2_pg4: tim1_bkin2_pg4 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_bkin_pa0: tim15_bkin_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_bkin_pd2: tim15_bkin_pd2 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_bkin_pe3: tim15_bkin_pe3 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim16_bkin_pb4: tim16_bkin_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim16_bkin_pc0: tim16_bkin_pc0 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim16_bkin_pf10: tim16_bkin_pf10 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_bkin_pb5: tim17_bkin_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_bkin_pg6: tim17_bkin_pg6 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_bkin_pa6: tim8_bkin_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_bkin2_pa8: tim8_bkin2_pa8 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_bkin_pg2: tim8_bkin_pg2 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_bkin2_pg3: tim8_bkin2_pg3 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ tim1_ch1n_pa7: tim1_ch1n_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1_pa8: tim1_ch1_pa8 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2_pa9: tim1_ch2_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3_pa10: tim1_ch3_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch4_pa11: tim1_ch4_pa11 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2n_pb0: tim1_ch2n_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3n_pb1: tim1_ch3n_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1n_pb13: tim1_ch1n_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2n_pb14: tim1_ch2n_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3n_pb15: tim1_ch3n_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch4n_pc5: tim1_ch4n_pc5 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch4n_pd5: tim1_ch4n_pd5 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1n_pe8: tim1_ch1n_pe8 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1_pe9: tim1_ch1_pe9 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2n_pe10: tim1_ch2n_pe10 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2_pe11: tim1_ch2_pe11 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3n_pe12: tim1_ch3n_pe12 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3_pe13: tim1_ch3_pe13 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch4_pe14: tim1_ch4_pe14 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch4n_pe15: tim1_ch4n_pe15 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch1_pa0: tim2_ch1_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch2_pa1: tim2_ch2_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch3_pa2: tim2_ch3_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch4_pa3: tim2_ch4_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch1_pa5: tim2_ch1_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch1_pa15: tim2_ch1_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch2_pb3: tim2_ch2_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch3_pb10: tim2_ch3_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim12_ch1_pb14: tim12_ch1_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim12_ch2_pb15: tim12_ch2_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch4_pc4: tim2_ch4_pc4 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim13_ch1_pa6: tim13_ch1_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch1_pa6: tim3_ch1_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch2_pa7: tim3_ch2_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch3_pb0: tim3_ch3_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch4_pb1: tim3_ch4_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch1_pb4: tim3_ch1_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch2_pb5: tim3_ch2_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch1_pc6: tim3_ch1_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch2_pc7: tim3_ch2_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch3_pc8: tim3_ch3_pc8 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch4_pc9: tim3_ch4_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim13_ch1_pf8: tim13_ch1_pf8 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim14_ch1_pa7: tim14_ch1_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch1_pb6: tim4_ch1_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch2_pb7: tim4_ch2_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch3_pb8: tim4_ch3_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch4_pb9: tim4_ch4_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch4_pc2: tim4_ch4_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch1_pd12: tim4_ch1_pd12 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch2_pd13: tim4_ch2_pd13 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch3_pd14: tim4_ch3_pd14 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch4_pd15: tim4_ch4_pd15 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim14_ch1_pf9: tim14_ch1_pf9 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch1_pa0: tim5_ch1_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_ch1n_pa1: tim15_ch1n_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch2_pa1: tim5_ch2_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_ch1_pa2: tim15_ch1_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch3_pa2: tim5_ch3_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_ch2_pa3: tim15_ch2_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch4_pa3: tim5_ch4_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_ch1_pc12: tim15_ch1_pc12 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_ch1n_pe4: tim15_ch1n_pe4 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_ch1_pe5: tim15_ch1_pe5 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_ch2_pe6: tim15_ch2_pe6 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim16_ch1n_pb6: tim16_ch1n_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim16_ch1_pb8: tim16_ch1_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim16_ch1_pf6: tim16_ch1_pf6 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim16_ch1n_pf8: tim16_ch1n_pf8 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_ch1n_pb7: tim17_ch1n_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_ch1_pb9: tim17_ch1_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_ch1_pc2: tim17_ch1_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_ch1_pf7: tim17_ch1_pf7 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_ch1n_pf9: tim17_ch1n_pf9 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch1n_pa5: tim8_ch1n_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch1n_pa7: tim8_ch1n_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch2n_pb0: tim8_ch2n_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch3n_pb1: tim8_ch3n_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch4n_pb2: tim8_ch4n_pb2 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch2n_pb14: tim8_ch2n_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch3n_pb15: tim8_ch3n_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch1_pc6: tim8_ch1_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch2_pc7: tim8_ch2_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch3_pc8: tim8_ch3_pc8 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch4_pc9: tim8_ch4_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch4n_pd0: tim8_ch4n_pd0 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ usart10_cts_pg13: usart10_cts_pg13 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ lpuart1_cts_pa11: lpuart1_cts_pa11 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart1_cts_pa11: usart1_cts_pa11 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart11_cts_pb15: usart11_cts_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart11_cts_pf5: usart11_cts_pf5 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart2_cts_pa0: usart2_cts_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ uart12_cts_pb3: uart12_cts_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart2_cts_pd3: usart2_cts_pd3 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ uart12_cts_pe8: uart12_cts_pe8 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart3_cts_pb13: usart3_cts_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart3_cts_pd11: usart3_cts_pd11 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ uart4_cts_pb0: uart4_cts_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ uart4_cts_pb15: uart4_cts_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ uart5_cts_pc9: uart5_cts_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart6_cts_pg13: usart6_cts_pg13 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart6_cts_pg15: usart6_cts_pg15 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ uart7_cts_pe10: uart7_cts_pe10 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ uart7_cts_pf9: uart7_cts_pf9 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ uart8_cts_pd14: uart8_cts_pd14 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ uart9_cts_pd0: uart9_cts_pd0 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ uart4_de_pa15: uart4_de_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ uart4_de_pb14: uart4_de_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ uart5_de_pc8: uart5_de_pc8 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    drive-push-pull;
   };



   /omit-if-no-ref/ usart10_rts_pg14: usart10_rts_pg14 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ lpuart1_rts_pa12: lpuart1_rts_pa12 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart1_rts_pa12: usart1_rts_pa12 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart11_rts_pc1: usart11_rts_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart11_rts_pg11: usart11_rts_pg11 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart2_rts_pa1: usart2_rts_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ uart12_rts_pc5: uart12_rts_pc5 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart2_rts_pd4: usart2_rts_pd4 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ uart12_rts_pe7: uart12_rts_pe7 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart3_rts_pb14: usart3_rts_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart3_rts_pd12: usart3_rts_pd12 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ uart4_rts_pa15: uart4_rts_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ uart4_rts_pb14: uart4_rts_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ uart5_rts_pc8: uart5_rts_pc8 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart6_rts_pg8: usart6_rts_pg8 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart6_rts_pg12: usart6_rts_pg12 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ uart7_rts_pe9: uart7_rts_pe9 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ uart7_rts_pf8: uart7_rts_pf8 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ uart8_rts_pd15: uart8_rts_pd15 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ uart9_rts_pd13: uart9_rts_pd13 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ usart10_rx_pe2: usart10_rx_pe2 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart10_rx_pg11: usart10_rx_pg11 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart11_rx_pa7: usart11_rx_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ lpuart1_rx_pa10: lpuart1_rx_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart1_rx_pa10: usart1_rx_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ lpuart1_rx_pb7: lpuart1_rx_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart1_rx_pb7: usart1_rx_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart1_rx_pb15: usart1_rx_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart11_rx_pf4: usart11_rx_pf4 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart2_rx_pa3: usart2_rx_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart2_rx_pd6: usart2_rx_pd6 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart12_rx_pe9: uart12_rx_pe9 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart12_rx_pf5: uart12_rx_pf5 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart12_rx_pg2: uart12_rx_pg2 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart3_rx_pc4: usart3_rx_pc4 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart3_rx_pc11: usart3_rx_pc11 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart3_rx_pd9: usart3_rx_pd9 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart4_rx_pa1: uart4_rx_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart4_rx_pa11: uart4_rx_pa11 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart4_rx_pb8: uart4_rx_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart4_rx_pc11: uart4_rx_pc11 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart4_rx_pd0: uart4_rx_pd0 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart4_rx_pd11: uart4_rx_pd11 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart5_rx_pb5: uart5_rx_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart5_rx_pb12: uart5_rx_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart5_rx_pb15: uart5_rx_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart5_rx_pd2: uart5_rx_pd2 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart6_rx_pc7: usart6_rx_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart6_rx_pg9: usart6_rx_pg9 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart7_rx_pa8: uart7_rx_pa8 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart7_rx_pb3: uart7_rx_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart7_rx_pe7: uart7_rx_pe7 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart7_rx_pf6: uart7_rx_pf6 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart8_rx_pe0: uart8_rx_pe0 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart9_rx_pd14: uart9_rx_pd14 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart9_rx_pg0: uart9_rx_pg0 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ usart10_tx_pe3: usart10_tx_pe3 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart10_tx_pg12: usart10_tx_pg12 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart11_tx_pa6: usart11_tx_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ lpuart1_tx_pa9: lpuart1_tx_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart1_tx_pa9: usart1_tx_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ lpuart1_tx_pb6: lpuart1_tx_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart1_tx_pb6: usart1_tx_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart1_tx_pb14: usart1_tx_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart11_tx_pf3: usart11_tx_pf3 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart2_tx_pa2: usart2_tx_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart2_tx_pd5: usart2_tx_pd5 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart12_tx_pe10: uart12_tx_pe10 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart12_tx_pf2: uart12_tx_pf2 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart12_tx_pg3: uart12_tx_pg3 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart3_tx_pb10: usart3_tx_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart3_tx_pc10: usart3_tx_pc10 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart3_tx_pd8: usart3_tx_pd8 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart4_tx_pa0: uart4_tx_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart4_tx_pa12: uart4_tx_pa12 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart4_tx_pb9: uart4_tx_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart4_tx_pc10: uart4_tx_pc10 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart4_tx_pd1: uart4_tx_pd1 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart4_tx_pd12: uart4_tx_pd12 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart5_tx_pb6: uart5_tx_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart5_tx_pb13: uart5_tx_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart5_tx_pc12: uart5_tx_pc12 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart6_tx_pc6: usart6_tx_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart6_tx_pg14: usart6_tx_pg14 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart7_tx_pa15: uart7_tx_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart7_tx_pb4: uart7_tx_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart7_tx_pe8: uart7_tx_pe8 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart7_tx_pf7: uart7_tx_pf7 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart8_tx_pe2: uart8_tx_pe2 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart9_tx_pd15: uart9_tx_pd15 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart9_tx_pg1: uart9_tx_pg1 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    bias-pull-up;
   };



   /omit-if-no-ref/ ucpd1_cc1_pb13: ucpd1_cc1_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ucpd1_cc2_pb14: ucpd1_cc2_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ usb_dm_pa11: usb_dm_pa11 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_dp_pa12: usb_dp_pa12 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

  };
 };
};
# 10 "C:/deviot/zephyrproject/zephyr/boards/st/nucleo_h563zi/nucleo_h563zi-common.dtsi" 2
# 1 "C:/deviot/zephyrproject/zephyr/boards/st/nucleo_h563zi/arduino_r3_connector.dtsi" 1







/ {
 arduino_header: connector {
  compatible = "arduino-header-r3";
  #gpio-cells = <2>;
  gpio-map-mask = <0xffffffff 0xffffffc0>;
  gpio-map-pass-thru = <0 0x3f>;
  gpio-map = <0 0 &gpioa 6 0>,
      <1 0 &gpioc 0 0>,
      <2 0 &gpioc 3 0>,
      <3 0 &gpiob 1 0>,
      <4 0 &gpioc 2 0>,
      <5 0 &gpiof 11 0>,
      <6 0 &gpiob 7 0>,
      <7 0 &gpiob 6 0>,
      <8 0 &gpiog 14 0>,
      <9 0 &gpioe 13 0>,
      <10 0 &gpioe 14 0>,
      <11 0 &gpioe 11 0>,
      <12 0 &gpioe 9 0>,
      <13 0 &gpiog 12 0>,
      <14 0 &gpiof 3 0>,
      <15 0 &gpiod 15 0>,
      <16 0 &gpiod 14 0>,
      <17 0 &gpiob 5 0>,
      <18 0 &gpiog 9 0>,
      <19 0 &gpioa 5 0>,
      <20 0 &gpiob 9 0>,
      <21 0 &gpiob 8 0>;
 };
};

arduino_serial: &lpuart1 {};
arduino_spi: &spi1 {};
arduino_i2c: &i2c1 {};
# 11 "C:/deviot/zephyrproject/zephyr/boards/st/nucleo_h563zi/nucleo_h563zi-common.dtsi" 2
# 1 "C:/deviot/zephyrproject/zephyr/boards/st/nucleo_h563zi/st_morpho_connector.dtsi" 1






# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/gpio/st-morpho-header.h" 1 3 4
# 8 "C:/deviot/zephyrproject/zephyr/boards/st/nucleo_h563zi/st_morpho_connector.dtsi" 2

/ {
 st_morpho_header: st-morpho-header {
  compatible = "st-morpho-header";
  #gpio-cells = <2>;
  gpio-map-mask = <0xFF 0x0>;
  gpio-map-pass-thru = <0x0 0x3F>;
  gpio-map = <0 0 &gpioc 10 0>,
      <1 0 &gpioc 11 0>,
      <2 0 &gpioc 12 0>,
      <3 0 &gpiod 2 0>,
      <8 0 &gpiof 6 0>,
      <10 0 &gpiof 7 0>,
      <12 0 &gpioa 13 0>,
      <14 0 &gpioa 14 0>,
      <16 0 &gpioa 15 0>,
      <20 0 &gpiob 7 0>,
      <22 0 &gpioc 13 0>,
      <24 0 &gpioc 14 0>,
      <26 0 &gpioc 15 0>,
      <27 0 &gpioa 0 0>,
      <28 0 &gpioh 0 0>,
      <29 0 &gpioa 1 0>,
      <30 0 &gpioh 1 0>,
      <31 0 &gpioa 4 0>,
      <33 0 &gpiob 0 0>,
      <34 0 &gpioc 2 0>,
      <35 0 &gpioc 1 0>,
      <36 0 &gpioc 3 0>,
      <37 0 &gpioc 0 0>,
      <38 0 &gpiod 4 0>,
      <39 0 &gpiod 3 0>,
      <40 0 &gpiod 5 0>,
      <41 0 &gpiog 2 0>,
      <42 0 &gpiod 6 0>,
      <43 0 &gpiog 3 0>,
      <44 0 &gpiod 7 0>,
      <45 0 &gpioe 2 0>,
      <46 0 &gpioe 3 0>,
      <47 0 &gpioe 4 0>,
      <49 0 &gpioe 5 0>,
      <50 0 &gpiof 1 0>,
      <51 0 &gpiof 2 0>,
      <52 0 &gpiof 0 0>,
      <53 0 &gpiof 8 0>,
      <54 0 &gpiod 1 0>,
      <55 0 &gpiof 9 0>,
      <56 0 &gpiod 0 0>,
      <57 0 &gpiog 1 0>,
      <58 0 &gpiog 0 0>,
      <61 0 &gpioe 6 0>,
      <62 0 &gpiog 9 0>,
      <63 0 &gpiog 15 0>,
      <64 0 &gpiog 12 0>,
      <65 0 &gpiog 10 0>,
      <67 0 &gpiog 13 0>,
      <68 0 &gpiod 9 0>,
      <69 0 &gpiog 11 0>,

      <72 0 &gpioc 9 0>,
      <73 0 &gpioc 8 0>,
      <74 0 &gpiob 8 0>,
      <75 0 &gpioc 6 0>,
      <76 0 &gpiob 9 0>,
      <77 0 &gpioc 5 0>,
      <81 0 &gpiod 8 0>,
      <82 0 &gpioa 5 0>,
      <83 0 &gpioa 12 0>,
      <84 0 &gpioa 6 0>,
      <85 0 &gpioa 11 0>,
      <86 0 &gpioa 7 0>,
      <87 0 &gpiob 12 0>,
      <88 0 &gpiob 6 0>,
      <90 0 &gpioc 7 0>,
      <92 0 &gpioa 9 0>,
      <93 0 &gpiob 2 0>,
      <94 0 &gpioa 8 0>,
      <95 0 &gpiob 1 0>,
      <96 0 &gpiob 10 0>,
      <97 0 &gpiob 15 0>,
      <98 0 &gpiob 4 0>,
      <99 0 &gpiob 14 0>,
      <100 0 &gpiob 5 0>,
      <101 0 &gpiob 13 0>,
      <102 0 &gpiob 3 0>,
      <104 0 &gpioa 10 0>,
      <105 0 &gpioc 4 0>,
      <106 0 &gpioa 2 0>,
      <107 0 &gpiof 5 0>,
      <108 0 &gpioa 3 0>,
      <109 0 &gpiof 4 0>,
      <111 0 &gpioe 8 0>,
      <112 0 &gpiod 13 0>,
      <113 0 &gpiof 10 0>,
      <114 0 &gpiod 12 0>,
      <115 0 &gpioe 7 0>,
      <116 0 &gpiod 11 0>,
      <117 0 &gpiod 14 0>,
      <118 0 &gpioe 10 0>,
      <119 0 &gpiod 15 0>,
      <120 0 &gpioe 12 0>,
      <121 0 &gpiof 14 0>,
      <122 0 &gpioe 14 0>,
      <123 0 &gpioe 9 0>,
      <124 0 &gpioe 15 0>,
      <126 0 &gpioe 13 0>,
      <127 0 &gpioe 11 0>,
      <128 0 &gpiof 13 0>,
      <129 0 &gpiof 3 0>,
      <130 0 &gpiof 12 0>,
      <131 0 &gpiof 15 0>,
      <132 0 &gpiog 14 0>,
      <133 0 &gpiof 11 0>,
      <135 0 &gpioe 0 0>,
      <136 0 &gpiod 10 0>,
      <137 0 &gpiog 8 0>,
      <138 0 &gpiog 7 0>,
      <139 0 &gpiog 5 0>,
      <140 0 &gpiog 4 0>,
      <141 0 &gpiog 6 0>;
 };
};
# 12 "C:/deviot/zephyrproject/zephyr/boards/st/nucleo_h563zi/nucleo_h563zi-common.dtsi" 2
# 1 "C:/deviot/zephyrproject/zephyr/include/zephyr/dt-bindings/input/input-event-codes.h" 1 3 4
# 13 "C:/deviot/zephyrproject/zephyr/boards/st/nucleo_h563zi/nucleo_h563zi-common.dtsi" 2

/ {
 leds: leds {
  compatible = "gpio-leds";
  led1: led_1 {
   gpios = <&gpioc 0 (0 << 0)>;
   label = "User LD1";
  };
  led2: led_2 {
   gpios = <&gpioc 1 (0 << 0)>;
   label = "User LD2";
  };
  buzzer: buzzer_1 {
   gpios = <&gpioa 15 (1 << 0)>;
   label = "User LD3";
  };
  vcc_lora: vcc_lora{
   gpios = <&gpiob 12 (0 << 0)>;
   label = "user_vcc_lora";
  };
  lora_pullup_tx: lora_pullup_tx{
   gpios = <&gpiob 13 (0 << 0)>;
   label = "pullup_lora_tx";
  };
  lora_pullup_rx: lora_pullup_rx{
   gpios = <&gpiob 14 (1 << 0)>;
   label = "pullup_lora_rx";
  };
 };

 gpio_keys {
  compatible = "gpio-keys";
  user_button: button {
   label = "User";
   gpios = <&gpioc 13 (0 << 0)>;
   zephyr,code = <11>;
  };
 };

 pwmleds: pwmleds {
  compatible = "pwm-leds";
  status = "disabled";

  pwm_led_1: green_led_1 {
   pwms = <&pwm3 3 (((20) * 1000UL) * 1000UL) (0 << 0)>;
   label = "green led";
  };
 };
};

&clk_hse {
 clock-frequency = <((25) * 1000 * 1000)>;
 status = "okay";
};

&clk_hsi48 {
 status = "disabled";
};


&clk_hsi {
 clock-frequency = <((64) * 1000 * 1000)>;
 status = "disabled";
};

&clk_lse {
 status = "disabled";
};

&clk_lsi{
 clock-frequency = <((32) * 1000)>;
 status = "disable";
};

&clk_csi{
 clock-frequency = <((4) * 1000 * 1000)>;
 status = "disabled";
};

&pll {
 div-m = <2>;
 mul-n = <40>;
 div-p = <2>;
 div-q = <2>;
 div-r = <2>;
 clocks = <&clk_hse>;
 status = "okay";
};

&i2c1 {
 pinctrl-0 = <&i2c1_scl_pb8 &i2c1_sda_pb9>;
 pinctrl-names = "default";
 status = "okay";
};

&rcc {
 clocks = <&pll>;
 clock-frequency = <((250) * 1000 * 1000)>;
 ahb-prescaler = <1>;
 apb1-prescaler = <1>;
 apb2-prescaler = <1>;
 apb3-prescaler = <1>;
};

&lpuart1 {
 pinctrl-0 = <&lpuart1_tx_pb6 &lpuart1_rx_pb7>;
 pinctrl-names = "default";
 current-speed = <115200>;
 status = "okay";
};

&usart3 {
 pinctrl-0 = <&usart3_tx_pb10 &usart3_rx_pd9>;
 pinctrl-names = "default";
 current-speed = <9600>;
 status = "okay";
};

&uart4{
 pinctrl-0 = <&uart4_tx_pc10 &uart4_rx_pc11>;
 pinctrl-names = "default";
 current-speed = <9600>;
 status = "okay";
};

&usart6{
 pinctrl-0 = <&usart6_tx_pc6 &usart6_rx_pc7>;
 pinctrl-names = "default";
 current-speed = <9600>;
 status = "okay";
};

&spi1 {
 pinctrl-0 = <&spi1_sck_pa5 &spi1_miso_pg9 &spi1_mosi_pb5>;
 pinctrl-names = "default";
 cs-gpios = <&gpiod 14 ((1 << 0) | (1 << 4))>;
 status = "okay";
};

&timers3 {
 st,prescaler = <10000>;
 status = "okay";

 pwm3: pwm {
  status = "okay";
  pinctrl-0 = <&tim3_ch3_pb0>;
  pinctrl-names = "default";
 };
};

&rtc {
 clocks = <&rcc 0x0A8 0x00200000>,
   <&rcc 0x002 ((((0xF0) & 0xFFU) << 0U) | (((8) & 0x1FU) << 8U) | (((3) & 0x7U) << 13U) | (((1) & 0x7U) << 16U))>;
 status = "okay";
};

&iwdg {
 status = "okay";
};

&gpdma1 {
 status = "okay";
};

&gpdma2 {
 status = "okay";
};

&dac1 {

 pinctrl-0 = <&dac1_out2_pa5>;
 pinctrl-names = "default";
 status = "okay";
};

&adc1 {
 clocks = <&rcc 0x08C 0x00000400>,
   <&rcc (((((0x003 + 1) + 1) + 1) + 1) + 1) ((((0xE8) & 0xFFU) << 0U) | (((0) & 0x1FU) << 8U) | (((7) & 0x7U) << 13U) | (((0) & 0x7U) << 16U))>;
 pinctrl-0 = <&adc1_inp3_pa6 &adc1_inp15_pa3>;
 pinctrl-names = "default";
 st,adc-clock-source = <2>;
 st,adc-prescaler = <6>;
 status = "okay";
};

&fdcan1 {
 pinctrl-0 = <&fdcan1_rx_pd0 &fdcan1_tx_pd1>;
 pinctrl-names = "default";
 clocks = <&rcc 0x0A0 0x00000200>,
   <&rcc ((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) ((((0xE8) & 0xFFU) << 0U) | (((8) & 0x1FU) << 8U) | (((3) & 0x7U) << 13U) | (((1) & 0x7U) << 16U))>;
 clk-divider = <2>;
 status = "okay";
};

&flash0 {
 partitions {
  compatible = "fixed-partitions";
  #address-cells = <1>;
  #size-cells = <1>;

  boot_partition: partition@0 {
   label = "mcuboot";
   reg = <0x00000000 ((64) * 1024)>;
  };
  slot0_partition: partition@10000 {
   label = "image-0";
   reg = <0x00010000 ((960) * 1024)>;
  };
  slot1_partition: partition@100000 {
   label = "image-1";
   reg = <0x00100000 ((960) * 1024)>;
  };
  storage_partition: partition@1f0000 {
   label = "storage";
   reg = <0x001f0000 ((64) * 1024)>;
  };
 };
};

zephyr_udc0: &usb {
 pinctrl-0 = <&usb_dm_pa11 &usb_dp_pa12>;
 pinctrl-names = "default";
 status = "okay";
};

&vref {
 status = "okay";
};

&vbat {
 status = "okay";
};

&clk_lsi {
 status = "okay";
};

stm32_lp_tick_source: &lptim4 {
 clocks = <&rcc 0x0A8 0x2000>,
   <&rcc 0x003 ((((0xDC) & 0xFFU) << 0U) | (((20) & 0x1FU) << 8U) | (((7) & 0x7U) << 13U) | (((4) & 0x7U) << 16U))>;
 status = "okay";
};
# 10 "C:/deviot/zephyrproject/zephyr/boards/st/nucleo_h563zi/nucleo_h563zi.dts" 2


/ {
 model = "STMicroelectronics STM32H563ZI-NUCLEO board";
 compatible = "st,stm32h563zi-nucleo";

 #address-cells = <1>;
 #size-cells = <1>;

 chosen {
  zephyr,console = &usart3;
  zephyr,shell-uart = &usart3;
  zephyr,sram = &sram1;
  zephyr,flash = &flash0;
  zephyr,code-partition = &slot0_partition;
  zephyr,canbus = &fdcan1;
 };

 aliases {
  led0 = &led1;
  led1 = &led2;
  buzzer = &buzzer;
  vcclora = &vcc_lora;
  pulluploratx = &lora_pullup_tx;
  pulluplorarx = &lora_pullup_rx;
  sw0 = &user_button;
  watchdog0 = &iwdg;
  pwm-led0 = &pwm_led_1;
  volt-sensor0 = &vref;
  volt-sensor1 = &vbat;
 };
};

&rng {
 status = "okay";
};

&mac {
 status = "okay";
 pinctrl-0 = <&eth_rxd0_pc4
       &eth_rxd1_pc5
       &eth_ref_clk_pa1
       &eth_crs_dv_pa7
       &eth_tx_en_pg11
       &eth_txd0_pg13
       &eth_txd1_pb15>;
 pinctrl-names = "default";
};

&mdio {
 status = "okay";
 pinctrl-0 = <&eth_mdio_pa2 &eth_mdc_pc1>;
 pinctrl-names = "default";

 ethernet-phy@0 {
  compatible = "ethernet-phy";
  reg = <0x00>;
  status = "okay";
 };
};
# 0 "<command-line>" 2
# 1 "C:/deviot/zephyrproject/zephyr/misc/empty_file.c"
